# nt2mdl 1.047 beta Nick Holford n.holford@auckland.ac.nz
run_final_OGTT_SI_ORI_dat = dataobj{
   DATA_INPUT_VARIABLES{
      OID=list(type=continuous)
      TIME=list(type=continuous,units="h")
      AMTOLD=list(type=continuous)
      ODVOLD=list(type=continuous)
      INSUOLD=list(type=continuous)
      TOTGOLD=list(type=continuous)
      CMT=list(type=categorical)
      BW=list(type=continuous,units="kg")
      EVID=list(type=categorical)
      FLAG=list(type=continuous)
      RATEOLD=list(type=continuous)
      DVOLD=list(type=continuous)
      ID=list(type=categorical)
      TYPE=list(type=continuous)
      FRST=list(type=continuous)
      OCC=list(type=categorical)
      AMT=list(type=continuous,units="mg")
      RATE=list(type=continuous)
      INSU=list(type=continuous)
      TOTG=list(type=continuous)
      ODV=list(type=continuous)
      DV=list(type=continuous)
   }# end DATA_INPUT_VARIABLES

   SOURCE{
      myData=list(
           file="pat_ivpo12_SI.CSV",
           inputformat=nonmemFormat,
           ignore="#")
   }# end SOURCE
} # end data object

run_final_OGTT_SI_ORI_par = parobj{

   STRUCTURAL{
      POP_VG=list(value=9.33 ,fix=true)
      POP_Q=list(value=.442 ,fix=true)
      POP_VI=list(value=6.09 ,fix=true)
      POP_CLG=list(value=.0287 ,fix=true)
      POP_CLGI=list(value=0.000495 ,fix=true)
      POP_CLGI_OGTT=list(value=.0012,lo=0)
      POP_CLI=list(value=1.22 ,fix=true)
      POP_VP=list(value=8.56 ,fix=true)
      POP_KIS=list(value=0 ,fix=true)
      POP_IFST=list(value=0 ,fix=true)
      POP_KEOG=list(value=.0289 ,fix=true)
      POP_KEOI=list(value=.0213 ,fix=true)
      POP_IPRG=list(value=1.42 ,fix=true)
      POP_GPRG=list(value=0 ,fix=true)
      POP_BIOG=list(value=.99,lo=0,hi=1)
      POP_MTT=list(value=42,lo=0)
      POP_NN=list(value=1.6,lo=0)
      POP_EMAX=list(value=1.9,lo=0)
      POP_CA50=list(value=21,lo=0)
      POP_RESG=list(value=.0436 ,fix=true)
      POP_RESI=list(value=.252 ,fix=true)
      POP_RESH=list(value=.0512 ,fix=true)
      POP_RESE=list(value=3.31 ,fix=true)
      POP_RESGP=list(value=1 ,fix=true)
      POP_RESIP=list(value=1 ,fix=true)
      POP_SCALE_GSS_IV=list(value=.891 ,fix=true)
      POP_SCALE_ISS_IV=list(value=.93 ,fix=true)
      POP_RESG_OGTT=list(value=.09,lo=0)
   }# end STRUCTURAL

   VARIABILITY{
      matrix(name="struc1",type=VAR,fix=true) {
         PPV_IIV_VG=.0887,
         -0.192, PPV_IIV_Q=.73,
         .0855, -0.12, PPV_IIV_VI=.165
      } # end matrix struc1
      PPV_IIV_CLG=list(value= .352 ,type=VAR,fix=true)
      matrix(name="struc2",type=VAR) {
         PPV_IIV_CLGI=.1,
         .02, PPV_IIV_CLGI_OGTT=.1
      } # end matrix struc2
      PPV_IIV_CLI=list(value= .0852 ,type=VAR,fix=true)
      PPV_IIV_VP=list(value= .0891 ,type=VAR,fix=true)
      PPV_IOV_VP=list(value= .02 ,type=VAR)
      PPV_IIV_IFST=list(value= 0 ,type=VAR,fix=true)
      PPV_IIV_KEOG=list(value= .728 ,type=VAR,fix=true)
      PPV_IIV_KEOI=list(value= .337 ,type=VAR,fix=true)
      PPV_IIV_IPRG=list(value= .124 ,type=VAR,fix=true)
      PPV_IIV_GPRG=list(value= 0 ,type=VAR,fix=true)
      PPV_IIV_BIOG=list(value= 0 ,type=VAR,fix=true)
      PPV_IIV_MTT=list(value= .02 ,type=VAR)
      PPV_IIV_NN=list(value= 0 ,type=VAR,fix=true)
      PPV_IIV_EMAX=list(value= .02 ,type=VAR)
      PPV_IIV_CA50=list(value= .02 ,type=VAR)
      PPV_IIV_GSS_IV=list(value= 1 ,type=VAR,fix=true)
      PPV_IIV_ISS_IV=list(value= 1 ,type=VAR,fix=true)
      PPV_IIV_GSS_OGTT=list(value= 1 ,type=VAR,fix=true)
      PPV_IIV_ISS_OGTT=list(value= 1 ,type=VAR,fix=true)
      RUV_RES=list(value= 1 ,type=VAR,fix=true)

   }# end VARIABILITY

} # end of parameter object

run_final_OGTT_SI_ORI_mdl = mdlobj{

   MODEL_INPUT_VARIABLES{
      OID=list(type=continuous,use=covariate)
      TIME=list(use=idv,units="h")
      AMTOLD=list(type=continuous,use=covariate)
      ODVOLD=list(type=continuous,use=covariate)
      INSUOLD=list(type=continuous,use=covariate)
      TOTGOLD=list(type=continuous,use=covariate)
      CMT=list(use=cmt)
      BW=list(type=continuous,use=covariate,units="kg")
      EVID=list(use=evid)
      FLAG=list(type=continuous,use=covariate)
      RATEOLD=list(type=continuous,use=covariate)
      DVOLD=list(type=continuous,use=covariate)
      ID=list(use=id,level=2)
      TYPE=list(type=continuous,use=covariate)
      FRST=list(type=continuous,use=covariate)
      OCC=list(use=occ,level=2)
      AMT=list(use=amt,units="mg")
      RATE=list(type=continuous,use=covariate)
      INSU=list(type=continuous,use=covariate)
      TOTG=list(type=continuous,use=covariate)
      ODV=list(type=continuous,use=covariate)
      DV=list(type=continuous,use=dv,level=1)
   }# end MODEL_INPUT_VARIABLES

   STRUCTURAL_PARAMETERS{
      POP_VG
      POP_Q
      POP_VI
      POP_CLG
      POP_CLGI
      POP_CLGI_OGTT
      POP_CLI
      POP_VP
      POP_KIS
      POP_IFST
      POP_KEOG
      POP_KEOI
      POP_IPRG
      POP_GPRG
      POP_BIOG
      POP_MTT
      POP_NN
      POP_EMAX
      POP_CA50
      POP_RESG
      POP_RESI
      POP_RESH
      POP_RESE
      POP_RESGP
      POP_RESIP
      POP_SCALE_GSS_IV
      POP_SCALE_ISS_IV
      POP_RESG_OGTT
   }# end STRUCTURAL_PARAMETERS

   VARIABILITY_PARAMETERS{
      PPV_IIV_VG
      PPV_IIV_Q
      PPV_IIV_VI
      PPV_IIV_CLG
      PPV_IIV_CLGI
      PPV_IIV_CLGI_OGTT
      PPV_IIV_CLI
      PPV_IIV_VP
      PPV_IOV_VP
      PPV_IIV_IFST
      PPV_IIV_KEOG
      PPV_IIV_KEOI
      PPV_IIV_IPRG
      PPV_IIV_GPRG
      PPV_IIV_BIOG
      PPV_IIV_MTT
      PPV_IIV_NN
      PPV_IIV_EMAX
      PPV_IIV_CA50
      PPV_IIV_GSS_IV
      PPV_IIV_ISS_IV
      PPV_IIV_GSS_OGTT
      PPV_IIV_ISS_OGTT
      RUV_RES
   }# end VARIABILITY_PARAMETERS

   GROUP_VARIABLES{

TARGET_CODE(target=NMTRAN_CODE,location="$PK",first=true){***
   "FIRST
   "      COMMON/PRCOMG/ IDUM1,IDUM2,IMAX,IDUM4,IDUM5
   "INTEGER IDUM1,IDUM2,IMAX,IDUM4,IDUM5
   "IMAX=5000000
***} # end TARGET_CODE
   #---------------------handling baseline values--------------
   if (EVID==4) BASG = TOTG
   if (EVID==4) BASI = INSU
   }# end GROUP_VARIABLES


   RANDOM_VARIABLE_DEFINITION{
      eta_PPV_IIV_VG ~ (type=normal, mean=0, var=PPV_IIV_VG,level=ID)
      eta_PPV_IIV_Q ~ (type=normal, mean=0, var=PPV_IIV_Q,level=ID)
      eta_PPV_IIV_VI ~ (type=normal, mean=0, var=PPV_IIV_VI,level=ID)
      eta_PPV_IIV_CLG ~ (type=normal, mean=0, var=PPV_IIV_CLG,level=ID)
      eta_PPV_IIV_CLGI ~ (type=normal, mean=0, var=PPV_IIV_CLGI,level=ID)
      eta_PPV_IIV_CLGI_OGTT ~ (type=normal, mean=0, var=PPV_IIV_CLGI_OGTT,level=ID)
      eta_PPV_IIV_CLI ~ (type=normal, mean=0, var=PPV_IIV_CLI,level=ID)
      eta_PPV_IIV_VP ~ (type=normal, mean=0, var=PPV_IIV_VP,level=ID)
      eta_PPV_IOV_VP ~ (type=normal, mean=0, var=PPV_IOV_VP,level=ID)
      eta_PPV_IIV_IFST ~ (type=normal, mean=0, var=PPV_IIV_IFST,level=ID)
      eta_PPV_IIV_KEOG ~ (type=normal, mean=0, var=PPV_IIV_KEOG,level=ID)
      eta_PPV_IIV_KEOI ~ (type=normal, mean=0, var=PPV_IIV_KEOI,level=ID)
      eta_PPV_IIV_IPRG ~ (type=normal, mean=0, var=PPV_IIV_IPRG,level=ID)
      eta_PPV_IIV_GPRG ~ (type=normal, mean=0, var=PPV_IIV_GPRG,level=ID)
      eta_PPV_IIV_BIOG ~ (type=normal, mean=0, var=PPV_IIV_BIOG,level=ID)
      eta_PPV_IIV_MTT ~ (type=normal, mean=0, var=PPV_IIV_MTT,level=ID)
      eta_PPV_IIV_NN ~ (type=normal, mean=0, var=PPV_IIV_NN,level=ID)
      eta_PPV_IIV_EMAX ~ (type=normal, mean=0, var=PPV_IIV_EMAX,level=ID)
      eta_PPV_IIV_CA50 ~ (type=normal, mean=0, var=PPV_IIV_CA50,level=ID)
      eta_PPV_IIV_GSS_IV ~ (type=normal, mean=0, var=PPV_IIV_GSS_IV,level=ID)
      eta_PPV_IIV_ISS_IV ~ (type=normal, mean=0, var=PPV_IIV_ISS_IV,level=ID)
      eta_PPV_IIV_GSS_OGTT ~ (type=normal, mean=0, var=PPV_IIV_GSS_OGTT,level=ID)
      eta_PPV_IIV_ISS_OGTT ~ (type=normal, mean=0, var=PPV_IIV_ISS_OGTT,level=ID)
      eps_RUV_RES ~ (type=normal, mean=0, var=RUV_RES,level=DV)
   }# end RANDOM_VARIABLE_DEFINITION

   INDIVIDUAL_VARIABLES{
     GSS = BASG*exp(eta_PPV_IIV_GSS_IV*POP_RESG)*POP_SCALE_GSS_IV
     ISS = BASI*exp(eta_PPV_IIV_ISS_IV*POP_RESI)*POP_SCALE_ISS_IV
   if (OCC==1) {
     GSS = BASG*exp(eta_PPV_IIV_GSS_OGTT*POP_RESG)
     ISS = BASI*exp(eta_PPV_IIV_ISS_OGTT*POP_RESI)
   }
   #----------------------initializing other parameters--------
   OC=1
   if (OCC==1)OC = -1
     VG  = POP_VG*exp(eta_PPV_IIV_VG)*BW/70       #central volume for glucose (in l)
     Q   = POP_Q*exp(eta_PPV_IIV_Q)             #glucose flow central-peripheral
     VI  = POP_VI*exp(eta_PPV_IIV_VI)*BW/70       #central volume for insulin
     CLG = POP_CLG*exp(eta_PPV_IIV_CLG)             #glucose CL from central comp
     CLGI= POP_CLGI*exp(eta_PPV_IIV_CLGI)             #insulin dependent glucose CL (2nd order)
   if (OCC==1) CLGI = POP_CLGI_OGTT*exp(eta_PPV_IIV_CLGI_OGTT)   #different CLGI in OGTT
     CLI = POP_CLI*exp(eta_PPV_IIV_CLI)             #insulin CL
     VP  = POP_VP*exp(eta_PPV_IIV_VP+eta_PPV_IOV_VP*OC)   #peripheral volume for glucose
     KIS = POP_KIS                         #k92 "ka" for insulin
   if (OCC==1) KIS  =  0
     IFST =  POP_IFST*exp(eta_PPV_IIV_IFST)           #primary insulin response after iv administration
     KEOG= POP_KEOG*exp(eta_PPV_IIV_KEOG)           #keo for glucose
     KEOI= POP_KEOI*exp(eta_PPV_IIV_KEOI)           #keo for insulin
     IPRG= POP_IPRG*exp(eta_PPV_IIV_IPRG)           #influence of glucose on insulin production
     GPRG= POP_GPRG*exp(eta_PPV_IIV_GPRG)           #influence of glucose on glucose production
     BIOG= POP_BIOG*exp(eta_PPV_IIV_BIOG)           #bioavailability glucose
     MTT = POP_MTT*exp(eta_PPV_IIV_MTT)           #mean transit time glucose
     NN  = POP_NN*exp(eta_PPV_IIV_NN)           #number of transit compartments for glucose
     EMAX = POP_EMAX*exp(eta_PPV_IIV_EMAX)          #max effect of glucose abs on insulin prod
     CA50 = POP_CA50*exp(eta_PPV_IIV_CA50)          #conc of 50% effect
     RESG= POP_RESG                        #proportional glucose residual error
   if (OCC==1) RESG  =  POP_RESG_OGTT
     RESI= POP_RESI                        #proportional insulin residual error
     RESH= POP_RESH                        #proportional hot glucose residual error
   if (OCC==1) RESH  =  1
     RESE= POP_RESE                        #correction factor for early residual error
   if (OCC==1) RESE  =  1
   #-----basic calculations and initializing compartments------
     K15 = Q/VG
     K51 = Q/VP
     KG  = CLG/VG                          #k10 for glucose disappearance
     KGI = CLGI/VG                         #2nd order rate constant for insulin-dep. glucose elimination
     KI  = CLI/VI                          #k10 for insulin elimination
     GPRO= GSS*(KG+KGI*ISS)*VG             #baseline glucose production
     IPRO= KI*ISS*VI                       #baseline insulin production
     F1  = 1
   if (AMT==1) F1 = GSS*VG                  #baseline glucose
     F2  = ISS*VI                          #baseline insulin
   if (TIME>0) F2 = 1                      #initialization insulin
     F3  = 0.26                            #correction for hot glucose
     F4  = GSS                             #glucose effect (on ins.) compartment initialization
     F5  = K15*GSS*VG/K51                  #glucose peripheral compartment initialization
     F6  = 1                               #not used
     F7  = 0                               #hot glucose peripheral compartment
     F8  = ISS                             #insulin effect compartment initialization
     F9  = IFST                            #insulin absorption/secretion compartment
   if (OCC==1) F9 = 0                       #       - " -
   if (OCC==1) {
   KTR  = NN/MTT
   LNFAC = ln(2.5066)+(NN+0.5)*ln(NN)-NN+ln(1+1/(12*NN))
   }

   }# end INDIVIDUAL_VARIABLES

   MODEL_PREDICTION{

   ODE{
   PTOT   = K15*GLU_C-K51*GLU_P             #distribution of tot glucose
   PHOT   = K15*HOT_C-K51*HOT_P             #distribution of hot glucose
   IGPR   = (GLU_E/GSS+.0001)^ IPRG        #glucose on insulin production
   GGPR   = (GLU_E/GSS+.0001)^ GPRG        #glucose on glucose production
   IGAPR  = 1
   if (OCC==1) {
   TGLU   = exp(ln(75000*0.00555*BIOG)+ln(KTR)+NN*ln(KTR*T+.00001)-KTR*T-LNFAC)
   IGAPR  = 1+TGLU*EMAX/(TGLU+CA50)       #glucose absorption on insulin production
   }
   GPRD   = GPRO*GGPR                     #glucose production
   IPRD   = IPRO*IGPR*IGAPR             #insulin production
   TELI   = (KG + KGI*INS_E)*GLU_C          #tot glucose elimination
   IELI   =  KI*INS_C                      #insulin elimination
   HELI   = (KG + KGI*INS_E)*HOT_C          #hot glucose elimination
   if (OCC==1) DADT(1)  =  GPRD + TGLU - TELI - PTOT
      GLU_C=ode(deriv= GPRD - TELI - PTOT)
      INS_C=ode(deriv= IPRD + KIS*INS_S- IELI )
      HOT_C=ode(deriv= - HELI - PHOT)
      GLU_E=ode(deriv= KEOG*(GLU_C/VG - GLU_E)) #glucose effect compartment
      GLU_P=ode(deriv= PTOT)
      NOT_U=ode(deriv= KEOG*(GLU_C/VG - NOT_U))
      HOT_P=ode(deriv= PHOT)
      INS_E=ode(deriv= KEOI*(INS_C/VI - INS_E)) #insulin effect-compartment
      INS_S=ode(deriv= - KIS*INS_S)
   }# end ODE

   LIBRARY{
      amount=nmadvan(model=6,trans=1,output=list(A,F))
   }# end LIBRARY

   GLUC    =GLU_C/VG
   INSC    =INS_C/VI
   HOTC    =HOT_C/VG
   GLUE    =GLU_E
   GLUP    =GLU_P
   NOTU    =NOT_U
   HOTP    =HOT_P
   INSE    =INS_E
   INSS    =INS_S
   if (CMT==1) IPRED  =  GLUC+.00001
   if (CMT==2) IPRED  =  INSC+.00001
   if (CMT==3) IPRED  =  HOTC+.00001
   if (CMT>=4) IPRED  =  1
   if (CMT==1) W  =  RESG
   #if (OCC==1 && CMT==1) W = W*RESGP
   if (CMT==2) W  =  RESI
   #if (OCC==1 && CMT==2) W = W*RESIP
   if (CMT==3) W  =  RESH
   if (CMT>=4) W  =  1
   if (TIME<=2) W  =  W*RESE
   IRES  = DV-ln(IPRED)
   IWRES = IRES/W
   PRD   = IPRED
   IPRED = ln(IPRED)
   OBS   = ODV
   }# end MODEL_PREDICTION

   OBSERVATION{
      Y = ln(IPRED)+eps_RUV_RES*W
   }# end OBSERVATION

} # end of model object

run_final_OGTT_SI_ORI_task = taskobj{

# TARGET specific code

TARGET_CODE(target=NMTRAN_CODE,location="$PROBLEM",first=true){***
$PROBLEM EC50 ESTIMATED
***} # end TARGET_CODE

TARGET_CODE(target=NMTRAN_CODE,location="$ABBREVIATED",before="$PK"){***
$ABB DERIV2=NO
***} # end TARGET_CODE

# End TARGET specific code

   MODEL{
      tolrel=5
   }# end MODEL

   myEST=function(t,m,p,d) {
      EXECUTE{
         command="call nmgo run_final_OGTT_SI_ORI"
      }# end EXECUTE

      ESTIMATE {
         target=t
         model=m
         parameter=p
         data=d


TARGET_CODE(target=NMTRAN_CODE,location="$ESTIMATION"){***
$EST MAXEVAL=9999 PRINT=1 POSTHOC MSFO=msfb477_SI METH=1
$COVARIANCE PRINT=E
***} # end TARGET_CODE
            algo=list("FOCE ")
            cov=true
      }# end ESTIMATE
   }# end of myEST

}# end of task object

run_final_OGTT_SI_ORI_tel = telobj{

run_final_OGTT_SI_ORI_fit=run_final_OGTT_SI_ORI_task$myEST(t=NMTRAN_CODE, m=run_final_OGTT_SI_ORI_mdl, p=run_final_OGTT_SI_ORI_par, d=run_final_OGTT_SI_ORI_dat)

run_final_OGTT_SI_ORI_par=update(run_final_OGTT_SI_ORI_fit,run_final_OGTT_SI_ORI_par)

} # end of task execution language code
