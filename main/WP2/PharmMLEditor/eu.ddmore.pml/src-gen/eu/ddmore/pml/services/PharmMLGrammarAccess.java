/*
* generated by Xtext
*/

package eu.ddmore.pml.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class PharmMLGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class Mml_PharmMLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Mml_PharmML");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cPharmMLKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameCt_nameParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Assignment cIndependentVarAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIndependentVarCt_independentVarParserRuleCall_4_0 = (RuleCall)cIndependentVarAssignment_4.eContents().get(0);
		private final Assignment cWrittenVersionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cWrittenVersionCt_writtenVersionParserRuleCall_5_0 = (RuleCall)cWrittenVersionAssignment_5.eContents().get(0);
		private final RuleCall cTAG_CLOSEParserRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Assignment cSymbolDefinitionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cSymbolDefinitionMml_SymbolDefinitionTypeParserRuleCall_7_0 = (RuleCall)cSymbolDefinitionAssignment_7.eContents().get(0);
		private final Assignment cExprAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cExprMml_PharmaMLContentParserRuleCall_8_0 = (RuleCall)cExprAssignment_8.eContents().get(0);
		private final Assignment cDesignAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cDesignDesign_TrialDesignTypeParserRuleCall_9_0 = (RuleCall)cDesignAssignment_9.eContents().get(0);
		private final Assignment cModelingStepsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cModelingStepsMsteps_ModelingStepsParserRuleCall_10_0 = (RuleCall)cModelingStepsAssignment_10.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_11 = (RuleCall)cGroup.eContents().get(11);
		private final Keyword cPharmMLKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final RuleCall cTAG_CLOSEParserRuleCall_13 = (RuleCall)cGroup.eContents().get(13);
		
		////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//
		//// ***PharmaML*** //
		//
		////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//
		//Mml_PharmML hidden(WS, ML_COMMENT, XML_ANNOTATION):
		//
		//	TAG_OPEN "PharmML" xmlns+=XS_xmlns* name=ct_name independentVar=ct_independentVar writtenVersion=ct_writtenVersion
		//
		//	TAG_CLOSE SymbolDefinition+=Mml_SymbolDefinitionType* Expr+=Mml_PharmaMLContent+ Design=design_TrialDesignType?
		//
		//	ModelingSteps=msteps_ModelingSteps? TAG_OPEN2 "PharmML" TAG_CLOSE;
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "PharmML" xmlns+=XS_xmlns* name=ct_name independentVar=ct_independentVar writtenVersion=ct_writtenVersion
		//
		//TAG_CLOSE SymbolDefinition+=Mml_SymbolDefinitionType* Expr+=Mml_PharmaMLContent+ Design=design_TrialDesignType?
		//
		//ModelingSteps=msteps_ModelingSteps? TAG_OPEN2 "PharmML" TAG_CLOSE
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"PharmML"
		public Keyword getPharmMLKeyword_1() { return cPharmMLKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//name=ct_name
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ct_name
		public RuleCall getNameCt_nameParserRuleCall_3_0() { return cNameCt_nameParserRuleCall_3_0; }

		//independentVar=ct_independentVar
		public Assignment getIndependentVarAssignment_4() { return cIndependentVarAssignment_4; }

		//ct_independentVar
		public RuleCall getIndependentVarCt_independentVarParserRuleCall_4_0() { return cIndependentVarCt_independentVarParserRuleCall_4_0; }

		//writtenVersion=ct_writtenVersion
		public Assignment getWrittenVersionAssignment_5() { return cWrittenVersionAssignment_5; }

		//ct_writtenVersion
		public RuleCall getWrittenVersionCt_writtenVersionParserRuleCall_5_0() { return cWrittenVersionCt_writtenVersionParserRuleCall_5_0; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6() { return cTAG_CLOSEParserRuleCall_6; }

		//SymbolDefinition+=Mml_SymbolDefinitionType*
		public Assignment getSymbolDefinitionAssignment_7() { return cSymbolDefinitionAssignment_7; }

		//Mml_SymbolDefinitionType
		public RuleCall getSymbolDefinitionMml_SymbolDefinitionTypeParserRuleCall_7_0() { return cSymbolDefinitionMml_SymbolDefinitionTypeParserRuleCall_7_0; }

		//Expr+=Mml_PharmaMLContent+
		public Assignment getExprAssignment_8() { return cExprAssignment_8; }

		//Mml_PharmaMLContent
		public RuleCall getExprMml_PharmaMLContentParserRuleCall_8_0() { return cExprMml_PharmaMLContentParserRuleCall_8_0; }

		//Design=design_TrialDesignType?
		public Assignment getDesignAssignment_9() { return cDesignAssignment_9; }

		//design_TrialDesignType
		public RuleCall getDesignDesign_TrialDesignTypeParserRuleCall_9_0() { return cDesignDesign_TrialDesignTypeParserRuleCall_9_0; }

		//ModelingSteps=msteps_ModelingSteps?
		public Assignment getModelingStepsAssignment_10() { return cModelingStepsAssignment_10; }

		//msteps_ModelingSteps
		public RuleCall getModelingStepsMsteps_ModelingStepsParserRuleCall_10_0() { return cModelingStepsMsteps_ModelingStepsParserRuleCall_10_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_11() { return cTAG_OPEN2ParserRuleCall_11; }

		//"PharmML"
		public Keyword getPharmMLKeyword_12() { return cPharmMLKeyword_12; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_13() { return cTAG_CLOSEParserRuleCall_13; }
	}

	public class Mml_PharmaMLContentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Mml_PharmaMLContent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cMml_PharmaMLContentAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Assignment cStructuralModelAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cStructuralModelMdef_StructuralModelTypeParserRuleCall_0_1_0 = (RuleCall)cStructuralModelAssignment_0_1.eContents().get(0);
		private final Assignment cModelDefinitionAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cModelDefinitionMdef_ModelDefinitionTypeParserRuleCall_1_0 = (RuleCall)cModelDefinitionAssignment_1.eContents().get(0);
		
		//Mml_PharmaMLContent:
		//
		//	{Mml_PharmaMLContent} StructuralModel=mdef_StructuralModelType | ModelDefinition=mdef_ModelDefinitionType;
		public ParserRule getRule() { return rule; }

		//{Mml_PharmaMLContent} StructuralModel=mdef_StructuralModelType | ModelDefinition=mdef_ModelDefinitionType
		public Alternatives getAlternatives() { return cAlternatives; }

		//{Mml_PharmaMLContent} StructuralModel=mdef_StructuralModelType
		public Group getGroup_0() { return cGroup_0; }

		//{Mml_PharmaMLContent}
		public Action getMml_PharmaMLContentAction_0_0() { return cMml_PharmaMLContentAction_0_0; }

		//StructuralModel=mdef_StructuralModelType
		public Assignment getStructuralModelAssignment_0_1() { return cStructuralModelAssignment_0_1; }

		//mdef_StructuralModelType
		public RuleCall getStructuralModelMdef_StructuralModelTypeParserRuleCall_0_1_0() { return cStructuralModelMdef_StructuralModelTypeParserRuleCall_0_1_0; }

		//ModelDefinition=mdef_ModelDefinitionType
		public Assignment getModelDefinitionAssignment_1() { return cModelDefinitionAssignment_1; }

		//mdef_ModelDefinitionType
		public RuleCall getModelDefinitionMdef_ModelDefinitionTypeParserRuleCall_1_0() { return cModelDefinitionMdef_ModelDefinitionTypeParserRuleCall_1_0; }
	}

	public class Mml_SymbolDefinitionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Mml_SymbolDefinitionType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMml_SymbolDefinitionTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cSymbolDefinitionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameCt_nameParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Assignment cSymbIdAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSymbIdCt_symbIdParserRuleCall_5_0 = (RuleCall)cSymbIdAssignment_5.eContents().get(0);
		private final Assignment cSymbolTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cSymbolTypeCt_symbolTypeParserRuleCall_6_0 = (RuleCall)cSymbolTypeAssignment_6.eContents().get(0);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_7_0 = (RuleCall)cAlternatives_7.eContents().get(0);
		private final Group cGroup_7_1 = (Group)cAlternatives_7.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_7_1_0 = (RuleCall)cGroup_7_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_7_1_1 = (Assignment)cGroup_7_1.eContents().get(1);
		private final RuleCall cDescriptionCt_AnnotationTypeParserRuleCall_7_1_1_0 = (RuleCall)cDescriptionAssignment_7_1_1.eContents().get(0);
		private final Assignment cFunctionDefinitionAssignment_7_1_2 = (Assignment)cGroup_7_1.eContents().get(2);
		private final RuleCall cFunctionDefinitionMml_FunctionDefinitionTypeParserRuleCall_7_1_2_0 = (RuleCall)cFunctionDefinitionAssignment_7_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_7_1_3 = (RuleCall)cGroup_7_1.eContents().get(3);
		private final Keyword cSymbolDefinitionKeyword_7_1_4 = (Keyword)cGroup_7_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_7_1_5 = (RuleCall)cGroup_7_1.eContents().get(5);
		
		//Mml_SymbolDefinitionType:
		//
		//	{Mml_SymbolDefinitionType} TAG_OPEN "SymbolDefinition" xmlns+=XS_xmlns* name=ct_name? symbId=ct_symbId
		//
		//	symbolType=ct_symbolType (TAG_CLOSE2 | TAG_CLOSE Description=ct_AnnotationType?
		//
		//	FunctionDefinition=Mml_FunctionDefinitionType TAG_OPEN2 "SymbolDefinition" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{Mml_SymbolDefinitionType} TAG_OPEN "SymbolDefinition" xmlns+=XS_xmlns* name=ct_name? symbId=ct_symbId
		//
		//symbolType=ct_symbolType (TAG_CLOSE2 | TAG_CLOSE Description=ct_AnnotationType?
		//
		//FunctionDefinition=Mml_FunctionDefinitionType TAG_OPEN2 "SymbolDefinition" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{Mml_SymbolDefinitionType}
		public Action getMml_SymbolDefinitionTypeAction_0() { return cMml_SymbolDefinitionTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"SymbolDefinition"
		public Keyword getSymbolDefinitionKeyword_2() { return cSymbolDefinitionKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//name=ct_name?
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ct_name
		public RuleCall getNameCt_nameParserRuleCall_4_0() { return cNameCt_nameParserRuleCall_4_0; }

		//symbId=ct_symbId
		public Assignment getSymbIdAssignment_5() { return cSymbIdAssignment_5; }

		//ct_symbId
		public RuleCall getSymbIdCt_symbIdParserRuleCall_5_0() { return cSymbIdCt_symbIdParserRuleCall_5_0; }

		//symbolType=ct_symbolType
		public Assignment getSymbolTypeAssignment_6() { return cSymbolTypeAssignment_6; }

		//ct_symbolType
		public RuleCall getSymbolTypeCt_symbolTypeParserRuleCall_6_0() { return cSymbolTypeCt_symbolTypeParserRuleCall_6_0; }

		//TAG_CLOSE2 | TAG_CLOSE Description=ct_AnnotationType? FunctionDefinition=Mml_FunctionDefinitionType TAG_OPEN2
		//
		//"SymbolDefinition" TAG_CLOSE
		public Alternatives getAlternatives_7() { return cAlternatives_7; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_7_0() { return cTAG_CLOSE2ParserRuleCall_7_0; }

		//TAG_CLOSE Description=ct_AnnotationType? FunctionDefinition=Mml_FunctionDefinitionType TAG_OPEN2 "SymbolDefinition"
		//
		//TAG_CLOSE
		public Group getGroup_7_1() { return cGroup_7_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_7_1_0() { return cTAG_CLOSEParserRuleCall_7_1_0; }

		//Description=ct_AnnotationType?
		public Assignment getDescriptionAssignment_7_1_1() { return cDescriptionAssignment_7_1_1; }

		//ct_AnnotationType
		public RuleCall getDescriptionCt_AnnotationTypeParserRuleCall_7_1_1_0() { return cDescriptionCt_AnnotationTypeParserRuleCall_7_1_1_0; }

		//FunctionDefinition=Mml_FunctionDefinitionType
		public Assignment getFunctionDefinitionAssignment_7_1_2() { return cFunctionDefinitionAssignment_7_1_2; }

		//Mml_FunctionDefinitionType
		public RuleCall getFunctionDefinitionMml_FunctionDefinitionTypeParserRuleCall_7_1_2_0() { return cFunctionDefinitionMml_FunctionDefinitionTypeParserRuleCall_7_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_7_1_3() { return cTAG_OPEN2ParserRuleCall_7_1_3; }

		//"SymbolDefinition"
		public Keyword getSymbolDefinitionKeyword_7_1_4() { return cSymbolDefinitionKeyword_7_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_7_1_5() { return cTAG_CLOSEParserRuleCall_7_1_5; }
	}

	public class Mml_FunctionDefinitionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Mml_FunctionDefinitionType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMml_FunctionDefinitionTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFunctionDefinitionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cFunctionArgumentsAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cFunctionArgumentsMml_FuncParameterDefinitionTypeParserRuleCall_4_1_1_0 = (RuleCall)cFunctionArgumentsAssignment_4_1_1.eContents().get(0);
		private final Assignment cDefinitionAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cDefinitionCt_DefinitionRhsTypeParserRuleCall_4_1_2_0 = (RuleCall)cDefinitionAssignment_4_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		private final Keyword cFunctionDefinitionKeyword_4_1_4 = (Keyword)cGroup_4_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_5 = (RuleCall)cGroup_4_1.eContents().get(5);
		
		//Mml_FunctionDefinitionType:
		//
		//	{Mml_FunctionDefinitionType} TAG_OPEN "FunctionDefinition" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//	FunctionArguments+=Mml_FuncParameterDefinitionType* Definition=ct_DefinitionRhsType TAG_OPEN2 "FunctionDefinition"
		//
		//	TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{Mml_FunctionDefinitionType} TAG_OPEN "FunctionDefinition" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//FunctionArguments+=Mml_FuncParameterDefinitionType* Definition=ct_DefinitionRhsType TAG_OPEN2 "FunctionDefinition"
		//
		//TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{Mml_FunctionDefinitionType}
		public Action getMml_FunctionDefinitionTypeAction_0() { return cMml_FunctionDefinitionTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"FunctionDefinition"
		public Keyword getFunctionDefinitionKeyword_2() { return cFunctionDefinitionKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE FunctionArguments+=Mml_FuncParameterDefinitionType* Definition=ct_DefinitionRhsType TAG_OPEN2
		//
		//"FunctionDefinition" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE FunctionArguments+=Mml_FuncParameterDefinitionType* Definition=ct_DefinitionRhsType TAG_OPEN2
		//
		//"FunctionDefinition" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//FunctionArguments+=Mml_FuncParameterDefinitionType*
		public Assignment getFunctionArgumentsAssignment_4_1_1() { return cFunctionArgumentsAssignment_4_1_1; }

		//Mml_FuncParameterDefinitionType
		public RuleCall getFunctionArgumentsMml_FuncParameterDefinitionTypeParserRuleCall_4_1_1_0() { return cFunctionArgumentsMml_FuncParameterDefinitionTypeParserRuleCall_4_1_1_0; }

		//Definition=ct_DefinitionRhsType
		public Assignment getDefinitionAssignment_4_1_2() { return cDefinitionAssignment_4_1_2; }

		//ct_DefinitionRhsType
		public RuleCall getDefinitionCt_DefinitionRhsTypeParserRuleCall_4_1_2_0() { return cDefinitionCt_DefinitionRhsTypeParserRuleCall_4_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_3() { return cTAG_OPEN2ParserRuleCall_4_1_3; }

		//"FunctionDefinition"
		public Keyword getFunctionDefinitionKeyword_4_1_4() { return cFunctionDefinitionKeyword_4_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_5() { return cTAG_CLOSEParserRuleCall_4_1_5; }
	}

	public class Mml_FuncParameterDefinitionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Mml_FuncParameterDefinitionType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMml_FuncParameterDefinitionTypAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFunctionArgumentKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Assignment cSumbIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSumbIdCt_symbIdParserRuleCall_4_0 = (RuleCall)cSumbIdAssignment_4.eContents().get(0);
		private final Assignment cSymbolTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSymbolTypeCt_symbolTypeParserRuleCall_5_0 = (RuleCall)cSymbolTypeAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_6_0 = (RuleCall)cAlternatives_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_0 = (RuleCall)cGroup_6_1.eContents().get(0);
		private final Assignment cDecsriptionAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cDecsriptionCt_AnnotationTypeParserRuleCall_6_1_1_0 = (RuleCall)cDecsriptionAssignment_6_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_6_1_2 = (RuleCall)cGroup_6_1.eContents().get(2);
		private final Keyword cFunctionArgumentKeyword_6_1_3 = (Keyword)cGroup_6_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_4 = (RuleCall)cGroup_6_1.eContents().get(4);
		
		//Mml_FuncParameterDefinitionType:
		//
		//	{Mml_FuncParameterDefinitionTyp} TAG_OPEN "FunctionArgument" xmlns+=XS_xmlns* sumbId=ct_symbId
		//
		//	symbolType=ct_symbolType? (TAG_CLOSE2 | TAG_CLOSE Decsription=ct_AnnotationType? TAG_OPEN2 "FunctionArgument"
		//
		//	TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{Mml_FuncParameterDefinitionTyp} TAG_OPEN "FunctionArgument" xmlns+=XS_xmlns* sumbId=ct_symbId symbolType=ct_symbolType?
		//
		//(TAG_CLOSE2 | TAG_CLOSE Decsription=ct_AnnotationType? TAG_OPEN2 "FunctionArgument" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{Mml_FuncParameterDefinitionTyp}
		public Action getMml_FuncParameterDefinitionTypAction_0() { return cMml_FuncParameterDefinitionTypAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"FunctionArgument"
		public Keyword getFunctionArgumentKeyword_2() { return cFunctionArgumentKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//sumbId=ct_symbId
		public Assignment getSumbIdAssignment_4() { return cSumbIdAssignment_4; }

		//ct_symbId
		public RuleCall getSumbIdCt_symbIdParserRuleCall_4_0() { return cSumbIdCt_symbIdParserRuleCall_4_0; }

		//symbolType=ct_symbolType?
		public Assignment getSymbolTypeAssignment_5() { return cSymbolTypeAssignment_5; }

		//ct_symbolType
		public RuleCall getSymbolTypeCt_symbolTypeParserRuleCall_5_0() { return cSymbolTypeCt_symbolTypeParserRuleCall_5_0; }

		//TAG_CLOSE2 | TAG_CLOSE Decsription=ct_AnnotationType? TAG_OPEN2 "FunctionArgument" TAG_CLOSE
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_6_0() { return cTAG_CLOSE2ParserRuleCall_6_0; }

		//TAG_CLOSE Decsription=ct_AnnotationType? TAG_OPEN2 "FunctionArgument" TAG_CLOSE
		public Group getGroup_6_1() { return cGroup_6_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_0() { return cTAG_CLOSEParserRuleCall_6_1_0; }

		//Decsription=ct_AnnotationType?
		public Assignment getDecsriptionAssignment_6_1_1() { return cDecsriptionAssignment_6_1_1; }

		//ct_AnnotationType
		public RuleCall getDecsriptionCt_AnnotationTypeParserRuleCall_6_1_1_0() { return cDecsriptionCt_AnnotationTypeParserRuleCall_6_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_6_1_2() { return cTAG_OPEN2ParserRuleCall_6_1_2; }

		//"FunctionArgument"
		public Keyword getFunctionArgumentKeyword_6_1_3() { return cFunctionArgumentKeyword_6_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_4() { return cTAG_CLOSEParserRuleCall_6_1_4; }
	}

	public class Mdef_ModelDefinitionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_ModelDefinitionType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMdef_ModelDefinitionTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cModelDefinitionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cVariabilityLevelAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cVariabilityLevelMdef_VariabilityLevelDefnTypeParserRuleCall_4_1_1_0 = (RuleCall)cVariabilityLevelAssignment_4_1_1.eContents().get(0);
		private final Assignment cCovariateModelAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cCovariateModelMdef_CovariateModelTypeParserRuleCall_4_1_2_0 = (RuleCall)cCovariateModelAssignment_4_1_2.eContents().get(0);
		private final Assignment cParameterModelAssignment_4_1_3 = (Assignment)cGroup_4_1.eContents().get(3);
		private final RuleCall cParameterModelMdef_ParameterModelTypeParserRuleCall_4_1_3_0 = (RuleCall)cParameterModelAssignment_4_1_3.eContents().get(0);
		private final Assignment cStructuraModelAssignment_4_1_4 = (Assignment)cGroup_4_1.eContents().get(4);
		private final RuleCall cStructuraModelMdef_StructuralModelTypeParserRuleCall_4_1_4_0 = (RuleCall)cStructuraModelAssignment_4_1_4.eContents().get(0);
		private final Assignment cObservationModelAssignment_4_1_5 = (Assignment)cGroup_4_1.eContents().get(5);
		private final RuleCall cObservationModelMdef_ObservationModelTypeParserRuleCall_4_1_5_0 = (RuleCall)cObservationModelAssignment_4_1_5.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_6 = (RuleCall)cGroup_4_1.eContents().get(6);
		private final Keyword cModelDefinitionKeyword_4_1_7 = (Keyword)cGroup_4_1.eContents().get(7);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_8 = (RuleCall)cGroup_4_1.eContents().get(8);
		
		//// ***************************************************************************************************
		//
		//// ***ModelDefinition***
		//
		//// ***************************************************************************************************
		//
		//mdef_ModelDefinitionType:
		//
		//	{mdef_ModelDefinitionType} TAG_OPEN "ModelDefinition" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//	VariabilityLevel+=mdef_VariabilityLevelDefnType* CovariateModel=mdef_CovariateModelType?
		//
		//	ParameterModel=mdef_ParameterModelType? StructuraModel+=mdef_StructuralModelType*
		//
		//	ObservationModel=mdef_ObservationModelType? TAG_OPEN2 "ModelDefinition" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{mdef_ModelDefinitionType} TAG_OPEN "ModelDefinition" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//VariabilityLevel+=mdef_VariabilityLevelDefnType* CovariateModel=mdef_CovariateModelType?
		//
		//ParameterModel=mdef_ParameterModelType? StructuraModel+=mdef_StructuralModelType*
		//
		//ObservationModel=mdef_ObservationModelType? TAG_OPEN2 "ModelDefinition" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{mdef_ModelDefinitionType}
		public Action getMdef_ModelDefinitionTypeAction_0() { return cMdef_ModelDefinitionTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"ModelDefinition"
		public Keyword getModelDefinitionKeyword_2() { return cModelDefinitionKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE VariabilityLevel+=mdef_VariabilityLevelDefnType* CovariateModel=mdef_CovariateModelType?
		//
		//ParameterModel=mdef_ParameterModelType? StructuraModel+=mdef_StructuralModelType*
		//
		//ObservationModel=mdef_ObservationModelType? TAG_OPEN2 "ModelDefinition" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE VariabilityLevel+=mdef_VariabilityLevelDefnType* CovariateModel=mdef_CovariateModelType?
		//
		//ParameterModel=mdef_ParameterModelType? StructuraModel+=mdef_StructuralModelType*
		//
		//ObservationModel=mdef_ObservationModelType? TAG_OPEN2 "ModelDefinition" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//VariabilityLevel+=mdef_VariabilityLevelDefnType*
		public Assignment getVariabilityLevelAssignment_4_1_1() { return cVariabilityLevelAssignment_4_1_1; }

		//mdef_VariabilityLevelDefnType
		public RuleCall getVariabilityLevelMdef_VariabilityLevelDefnTypeParserRuleCall_4_1_1_0() { return cVariabilityLevelMdef_VariabilityLevelDefnTypeParserRuleCall_4_1_1_0; }

		//CovariateModel=mdef_CovariateModelType?
		public Assignment getCovariateModelAssignment_4_1_2() { return cCovariateModelAssignment_4_1_2; }

		//mdef_CovariateModelType
		public RuleCall getCovariateModelMdef_CovariateModelTypeParserRuleCall_4_1_2_0() { return cCovariateModelMdef_CovariateModelTypeParserRuleCall_4_1_2_0; }

		//ParameterModel=mdef_ParameterModelType?
		public Assignment getParameterModelAssignment_4_1_3() { return cParameterModelAssignment_4_1_3; }

		//mdef_ParameterModelType
		public RuleCall getParameterModelMdef_ParameterModelTypeParserRuleCall_4_1_3_0() { return cParameterModelMdef_ParameterModelTypeParserRuleCall_4_1_3_0; }

		//StructuraModel+=mdef_StructuralModelType*
		public Assignment getStructuraModelAssignment_4_1_4() { return cStructuraModelAssignment_4_1_4; }

		//mdef_StructuralModelType
		public RuleCall getStructuraModelMdef_StructuralModelTypeParserRuleCall_4_1_4_0() { return cStructuraModelMdef_StructuralModelTypeParserRuleCall_4_1_4_0; }

		//ObservationModel=mdef_ObservationModelType?
		public Assignment getObservationModelAssignment_4_1_5() { return cObservationModelAssignment_4_1_5; }

		//mdef_ObservationModelType
		public RuleCall getObservationModelMdef_ObservationModelTypeParserRuleCall_4_1_5_0() { return cObservationModelMdef_ObservationModelTypeParserRuleCall_4_1_5_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_6() { return cTAG_OPEN2ParserRuleCall_4_1_6; }

		//"ModelDefinition"
		public Keyword getModelDefinitionKeyword_4_1_7() { return cModelDefinitionKeyword_4_1_7; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_8() { return cTAG_CLOSEParserRuleCall_4_1_8; }
	}

	public class Mdef_ParameterTypeNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_ParameterTypeName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cLogAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cLogLogKeyword_0_0 = (Keyword)cLogAssignment_0.eContents().get(0);
		private final Assignment cLogitAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cLogitLogitKeyword_1_0 = (Keyword)cLogitAssignment_1.eContents().get(0);
		private final Assignment cNoneAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cNoneNoneKeyword_2_0 = (Keyword)cNoneAssignment_2.eContents().get(0);
		
		//mdef_ParameterTypeName:
		//
		//	log="\"log\"" | logit="\"logit\"" | none="\"none\"";
		public ParserRule getRule() { return rule; }

		//log="\"log\"" | logit="\"logit\"" | none="\"none\""
		public Alternatives getAlternatives() { return cAlternatives; }

		//log="\"log\""
		public Assignment getLogAssignment_0() { return cLogAssignment_0; }

		//"\"log\""
		public Keyword getLogLogKeyword_0_0() { return cLogLogKeyword_0_0; }

		//logit="\"logit\""
		public Assignment getLogitAssignment_1() { return cLogitAssignment_1; }

		//"\"logit\""
		public Keyword getLogitLogitKeyword_1_0() { return cLogitLogitKeyword_1_0; }

		//none="\"none\""
		public Assignment getNoneAssignment_2() { return cNoneAssignment_2; }

		//"\"none\""
		public Keyword getNoneNoneKeyword_2_0() { return cNoneNoneKeyword_2_0; }
	}

	public class Mdef_StructuralModelTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_StructuralModelType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cStructuralModelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdCt_idParserRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cDescriptionCt_AnnotationTypeParserRuleCall_4_1_1_0 = (RuleCall)cDescriptionAssignment_4_1_1.eContents().get(0);
		private final Assignment cParameterAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cParameterMdef_ParameterTypeParserRuleCall_4_1_2_0 = (RuleCall)cParameterAssignment_4_1_2.eContents().get(0);
		private final Assignment cVariableAssignment_4_1_3 = (Assignment)cGroup_4_1.eContents().get(3);
		private final RuleCall cVariableCt_VariableDefinitionTypeParserRuleCall_4_1_3_0 = (RuleCall)cVariableAssignment_4_1_3.eContents().get(0);
		private final Assignment cImportAssignment_4_1_4 = (Assignment)cGroup_4_1.eContents().get(4);
		private final RuleCall cImportMdef_ImportTypeParserRuleCall_4_1_4_0 = (RuleCall)cImportAssignment_4_1_4.eContents().get(0);
		private final Assignment cInitiaConditionAssignment_4_1_5 = (Assignment)cGroup_4_1.eContents().get(5);
		private final RuleCall cInitiaConditionMdef_InitialConditionTypeParserRuleCall_4_1_5_0 = (RuleCall)cInitiaConditionAssignment_4_1_5.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_6 = (RuleCall)cGroup_4_1.eContents().get(6);
		private final Keyword cStructuralModelKeyword_4_1_7 = (Keyword)cGroup_4_1.eContents().get(7);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_8 = (RuleCall)cGroup_4_1.eContents().get(8);
		
		//mdef_StructuralModelType:
		//
		//	TAG_OPEN "StructuralModel" xmlns+=XS_xmlns* id=ct_id (TAG_CLOSE2 | TAG_CLOSE Description=ct_AnnotationType?
		//
		//	Parameter+=mdef_ParameterType* Variable+=ct_VariableDefinitionType* Import+=mdef_ImportType*
		//
		//	InitiaCondition+=mdef_InitialConditionType* TAG_OPEN2 "StructuralModel" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "StructuralModel" xmlns+=XS_xmlns* id=ct_id (TAG_CLOSE2 | TAG_CLOSE Description=ct_AnnotationType?
		//
		//Parameter+=mdef_ParameterType* Variable+=ct_VariableDefinitionType* Import+=mdef_ImportType*
		//
		//InitiaCondition+=mdef_InitialConditionType* TAG_OPEN2 "StructuralModel" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"StructuralModel"
		public Keyword getStructuralModelKeyword_1() { return cStructuralModelKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//id=ct_id
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }

		//ct_id
		public RuleCall getIdCt_idParserRuleCall_3_0() { return cIdCt_idParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Description=ct_AnnotationType? Parameter+=mdef_ParameterType*
		//
		//Variable+=ct_VariableDefinitionType* Import+=mdef_ImportType* InitiaCondition+=mdef_InitialConditionType* TAG_OPEN2
		//
		//"StructuralModel" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Description=ct_AnnotationType? Parameter+=mdef_ParameterType* Variable+=ct_VariableDefinitionType*
		//
		//Import+=mdef_ImportType* InitiaCondition+=mdef_InitialConditionType* TAG_OPEN2 "StructuralModel" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Description=ct_AnnotationType?
		public Assignment getDescriptionAssignment_4_1_1() { return cDescriptionAssignment_4_1_1; }

		//ct_AnnotationType
		public RuleCall getDescriptionCt_AnnotationTypeParserRuleCall_4_1_1_0() { return cDescriptionCt_AnnotationTypeParserRuleCall_4_1_1_0; }

		//Parameter+=mdef_ParameterType*
		public Assignment getParameterAssignment_4_1_2() { return cParameterAssignment_4_1_2; }

		//mdef_ParameterType
		public RuleCall getParameterMdef_ParameterTypeParserRuleCall_4_1_2_0() { return cParameterMdef_ParameterTypeParserRuleCall_4_1_2_0; }

		//Variable+=ct_VariableDefinitionType*
		public Assignment getVariableAssignment_4_1_3() { return cVariableAssignment_4_1_3; }

		//ct_VariableDefinitionType
		public RuleCall getVariableCt_VariableDefinitionTypeParserRuleCall_4_1_3_0() { return cVariableCt_VariableDefinitionTypeParserRuleCall_4_1_3_0; }

		//Import+=mdef_ImportType*
		public Assignment getImportAssignment_4_1_4() { return cImportAssignment_4_1_4; }

		//mdef_ImportType
		public RuleCall getImportMdef_ImportTypeParserRuleCall_4_1_4_0() { return cImportMdef_ImportTypeParserRuleCall_4_1_4_0; }

		//InitiaCondition+=mdef_InitialConditionType*
		public Assignment getInitiaConditionAssignment_4_1_5() { return cInitiaConditionAssignment_4_1_5; }

		//mdef_InitialConditionType
		public RuleCall getInitiaConditionMdef_InitialConditionTypeParserRuleCall_4_1_5_0() { return cInitiaConditionMdef_InitialConditionTypeParserRuleCall_4_1_5_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_6() { return cTAG_OPEN2ParserRuleCall_4_1_6; }

		//"StructuralModel"
		public Keyword getStructuralModelKeyword_4_1_7() { return cStructuralModelKeyword_4_1_7; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_8() { return cTAG_CLOSEParserRuleCall_4_1_8; }
	}

	public class Mdef_ObservationModelTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_ObservationModelType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cObservationModelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdCt_idParserRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameCt_nameParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final Assignment cParameterAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cParameterMdef_ParameterTypeParserRuleCall_5_1_1_0 = (RuleCall)cParameterAssignment_5_1_1.eContents().get(0);
		private final Assignment cContinuousAssignment_5_1_2 = (Assignment)cGroup_5_1.eContents().get(2);
		private final RuleCall cContinuousMdef_ContinuousObsModelTypeParserRuleCall_5_1_2_0 = (RuleCall)cContinuousAssignment_5_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_5_1_3 = (RuleCall)cGroup_5_1.eContents().get(3);
		private final Keyword cObservationModelKeyword_5_1_4 = (Keyword)cGroup_5_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_5 = (RuleCall)cGroup_5_1.eContents().get(5);
		
		//mdef_ObservationModelType:
		//
		//	TAG_OPEN "ObservationModel" xmlns+=XS_xmlns* id=ct_id name=ct_name? (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Parameter+=mdef_ParameterType* Continuous+=mdef_ContinuousObsModelType* TAG_OPEN2 "ObservationModel" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "ObservationModel" xmlns+=XS_xmlns* id=ct_id name=ct_name? (TAG_CLOSE2 | TAG_CLOSE
		//
		//Parameter+=mdef_ParameterType* Continuous+=mdef_ContinuousObsModelType* TAG_OPEN2 "ObservationModel" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"ObservationModel"
		public Keyword getObservationModelKeyword_1() { return cObservationModelKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//id=ct_id
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }

		//ct_id
		public RuleCall getIdCt_idParserRuleCall_3_0() { return cIdCt_idParserRuleCall_3_0; }

		//name=ct_name?
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ct_name
		public RuleCall getNameCt_nameParserRuleCall_4_0() { return cNameCt_nameParserRuleCall_4_0; }

		//TAG_CLOSE2 | TAG_CLOSE Parameter+=mdef_ParameterType* Continuous+=mdef_ContinuousObsModelType* TAG_OPEN2
		//
		//"ObservationModel" TAG_CLOSE
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_5_0() { return cTAG_CLOSE2ParserRuleCall_5_0; }

		//TAG_CLOSE Parameter+=mdef_ParameterType* Continuous+=mdef_ContinuousObsModelType* TAG_OPEN2 "ObservationModel" TAG_CLOSE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_0() { return cTAG_CLOSEParserRuleCall_5_1_0; }

		//Parameter+=mdef_ParameterType*
		public Assignment getParameterAssignment_5_1_1() { return cParameterAssignment_5_1_1; }

		//mdef_ParameterType
		public RuleCall getParameterMdef_ParameterTypeParserRuleCall_5_1_1_0() { return cParameterMdef_ParameterTypeParserRuleCall_5_1_1_0; }

		//Continuous+=mdef_ContinuousObsModelType*
		public Assignment getContinuousAssignment_5_1_2() { return cContinuousAssignment_5_1_2; }

		//mdef_ContinuousObsModelType
		public RuleCall getContinuousMdef_ContinuousObsModelTypeParserRuleCall_5_1_2_0() { return cContinuousMdef_ContinuousObsModelTypeParserRuleCall_5_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_5_1_3() { return cTAG_OPEN2ParserRuleCall_5_1_3; }

		//"ObservationModel"
		public Keyword getObservationModelKeyword_5_1_4() { return cObservationModelKeyword_5_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_5() { return cTAG_CLOSEParserRuleCall_5_1_5; }
	}

	public class Mdef_ContinuousObsModelTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_ContinuousObsModelType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cContinuousKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cSymbIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSymbIdCt_symbIdParserRuleCall_3_0 = (RuleCall)cSymbIdAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cVarAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cVarMath_VarTypeParserRuleCall_4_1_1_0 = (RuleCall)cVarAssignment_4_1_1.eContents().get(0);
		private final Assignment cErrorModelAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cErrorModelMdef_ErrorModelParserRuleCall_4_1_2_0 = (RuleCall)cErrorModelAssignment_4_1_2.eContents().get(0);
		private final Assignment cRandomEffectAssignment_4_1_3 = (Assignment)cGroup_4_1.eContents().get(3);
		private final RuleCall cRandomEffectMdef_RandomEffectTypeParserRuleCall_4_1_3_0 = (RuleCall)cRandomEffectAssignment_4_1_3.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		private final Keyword cContinuousKeyword_4_1_5 = (Keyword)cGroup_4_1.eContents().get(5);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_6 = (RuleCall)cGroup_4_1.eContents().get(6);
		
		//mdef_ContinuousObsModelType:
		//
		//	TAG_OPEN "Continuous" xmlns+=XS_xmlns* symbId=ct_symbId (TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType?
		//
		//	ErrorModel=mdef_ErrorModel RandomEffect+=mdef_RandomEffectType* TAG_OPEN2 "Continuous" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Continuous" xmlns+=XS_xmlns* symbId=ct_symbId (TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType?
		//
		//ErrorModel=mdef_ErrorModel RandomEffect+=mdef_RandomEffectType* TAG_OPEN2 "Continuous" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Continuous"
		public Keyword getContinuousKeyword_1() { return cContinuousKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//symbId=ct_symbId
		public Assignment getSymbIdAssignment_3() { return cSymbIdAssignment_3; }

		//ct_symbId
		public RuleCall getSymbIdCt_symbIdParserRuleCall_3_0() { return cSymbIdCt_symbIdParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType? ErrorModel=mdef_ErrorModel RandomEffect+=mdef_RandomEffectType* TAG_OPEN2
		//
		//"Continuous" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Var=Math_VarType? ErrorModel=mdef_ErrorModel RandomEffect+=mdef_RandomEffectType* TAG_OPEN2 "Continuous"
		//
		//TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Var=Math_VarType?
		public Assignment getVarAssignment_4_1_1() { return cVarAssignment_4_1_1; }

		//Math_VarType
		public RuleCall getVarMath_VarTypeParserRuleCall_4_1_1_0() { return cVarMath_VarTypeParserRuleCall_4_1_1_0; }

		//ErrorModel=mdef_ErrorModel
		public Assignment getErrorModelAssignment_4_1_2() { return cErrorModelAssignment_4_1_2; }

		//mdef_ErrorModel
		public RuleCall getErrorModelMdef_ErrorModelParserRuleCall_4_1_2_0() { return cErrorModelMdef_ErrorModelParserRuleCall_4_1_2_0; }

		//RandomEffect+=mdef_RandomEffectType*
		public Assignment getRandomEffectAssignment_4_1_3() { return cRandomEffectAssignment_4_1_3; }

		//mdef_RandomEffectType
		public RuleCall getRandomEffectMdef_RandomEffectTypeParserRuleCall_4_1_3_0() { return cRandomEffectMdef_RandomEffectTypeParserRuleCall_4_1_3_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_4() { return cTAG_OPEN2ParserRuleCall_4_1_4; }

		//"Continuous"
		public Keyword getContinuousKeyword_4_1_5() { return cContinuousKeyword_4_1_5; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_6() { return cTAG_CLOSEParserRuleCall_4_1_6; }
	}

	public class Mdef_ErrorModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_ErrorModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMdef_ErrorModelAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cErrorModelKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cVarAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cVarMath_VarTypeParserRuleCall_4_1_1_0 = (RuleCall)cVarAssignment_4_1_1.eContents().get(0);
		private final Assignment cFunctionArgumentAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cFunctionArgumentMath_FunctionArgumentTypeParserRuleCall_4_1_2_0 = (RuleCall)cFunctionArgumentAssignment_4_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		private final Keyword cErrorModelKeyword_4_1_4 = (Keyword)cGroup_4_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_5 = (RuleCall)cGroup_4_1.eContents().get(5);
		
		//mdef_ErrorModel:
		//
		//	{mdef_ErrorModel} TAG_OPEN "ErrorModel" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType
		//
		//	FunctionArgument+=Math_FunctionArgumentType* TAG_OPEN2 "ErrorModel" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{mdef_ErrorModel} TAG_OPEN "ErrorModel" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType
		//
		//FunctionArgument+=Math_FunctionArgumentType* TAG_OPEN2 "ErrorModel" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{mdef_ErrorModel}
		public Action getMdef_ErrorModelAction_0() { return cMdef_ErrorModelAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"ErrorModel"
		public Keyword getErrorModelKeyword_2() { return cErrorModelKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType FunctionArgument+=Math_FunctionArgumentType* TAG_OPEN2 "ErrorModel" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Var=Math_VarType FunctionArgument+=Math_FunctionArgumentType* TAG_OPEN2 "ErrorModel" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Var=Math_VarType
		public Assignment getVarAssignment_4_1_1() { return cVarAssignment_4_1_1; }

		//Math_VarType
		public RuleCall getVarMath_VarTypeParserRuleCall_4_1_1_0() { return cVarMath_VarTypeParserRuleCall_4_1_1_0; }

		//FunctionArgument+=Math_FunctionArgumentType*
		public Assignment getFunctionArgumentAssignment_4_1_2() { return cFunctionArgumentAssignment_4_1_2; }

		//Math_FunctionArgumentType
		public RuleCall getFunctionArgumentMath_FunctionArgumentTypeParserRuleCall_4_1_2_0() { return cFunctionArgumentMath_FunctionArgumentTypeParserRuleCall_4_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_3() { return cTAG_OPEN2ParserRuleCall_4_1_3; }

		//"ErrorModel"
		public Keyword getErrorModelKeyword_4_1_4() { return cErrorModelKeyword_4_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_5() { return cTAG_CLOSEParserRuleCall_4_1_5; }
	}

	public class Mdef_RandomEffectTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_RandomEffectType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMdef_RandomEffectTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cRandomEffectKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cDistributionAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cDistributionUncert_DistributionTypeParserRuleCall_4_1_1_0 = (RuleCall)cDistributionAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cRandomEffectKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//mdef_RandomEffectType:
		//
		//	{mdef_RandomEffectType} TAG_OPEN "RandomEffect" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Distribution=uncert_DistributionType TAG_OPEN2 "RandomEffect" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{mdef_RandomEffectType} TAG_OPEN "RandomEffect" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//Distribution=uncert_DistributionType TAG_OPEN2 "RandomEffect" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{mdef_RandomEffectType}
		public Action getMdef_RandomEffectTypeAction_0() { return cMdef_RandomEffectTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"RandomEffect"
		public Keyword getRandomEffectKeyword_2() { return cRandomEffectKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Distribution=uncert_DistributionType TAG_OPEN2 "RandomEffect" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Distribution=uncert_DistributionType TAG_OPEN2 "RandomEffect" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Distribution=uncert_DistributionType
		public Assignment getDistributionAssignment_4_1_1() { return cDistributionAssignment_4_1_1; }

		//uncert_DistributionType
		public RuleCall getDistributionUncert_DistributionTypeParserRuleCall_4_1_1_0() { return cDistributionUncert_DistributionTypeParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"RandomEffect"
		public Keyword getRandomEffectKeyword_4_1_3() { return cRandomEffectKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Mdef_ParameterModelTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_ParameterModelType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cParameterModelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdCt_idParserRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameCt_nameParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final Assignment cParameterAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cParameterMdef_ParameterTypeParserRuleCall_5_1_1_0 = (RuleCall)cParameterAssignment_5_1_1.eContents().get(0);
		private final Assignment cCorrelationAssignment_5_1_2 = (Assignment)cGroup_5_1.eContents().get(2);
		private final RuleCall cCorrelationMdef_CorrelationTypeParserRuleCall_5_1_2_0 = (RuleCall)cCorrelationAssignment_5_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_5_1_3 = (RuleCall)cGroup_5_1.eContents().get(3);
		private final Keyword cParameterModelKeyword_5_1_4 = (Keyword)cGroup_5_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_5 = (RuleCall)cGroup_5_1.eContents().get(5);
		
		//mdef_ParameterModelType:
		//
		//	TAG_OPEN "ParameterModel" xmlns+=XS_xmlns* id=ct_id name=ct_name? (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Parameter+=mdef_ParameterType+ Correlation+=mdef_CorrelationType* TAG_OPEN2 "ParameterModel" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "ParameterModel" xmlns+=XS_xmlns* id=ct_id name=ct_name? (TAG_CLOSE2 | TAG_CLOSE Parameter+=mdef_ParameterType+
		//
		//Correlation+=mdef_CorrelationType* TAG_OPEN2 "ParameterModel" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"ParameterModel"
		public Keyword getParameterModelKeyword_1() { return cParameterModelKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//id=ct_id
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }

		//ct_id
		public RuleCall getIdCt_idParserRuleCall_3_0() { return cIdCt_idParserRuleCall_3_0; }

		//name=ct_name?
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ct_name
		public RuleCall getNameCt_nameParserRuleCall_4_0() { return cNameCt_nameParserRuleCall_4_0; }

		//TAG_CLOSE2 | TAG_CLOSE Parameter+=mdef_ParameterType+ Correlation+=mdef_CorrelationType* TAG_OPEN2 "ParameterModel"
		//
		//TAG_CLOSE
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_5_0() { return cTAG_CLOSE2ParserRuleCall_5_0; }

		//TAG_CLOSE Parameter+=mdef_ParameterType+ Correlation+=mdef_CorrelationType* TAG_OPEN2 "ParameterModel" TAG_CLOSE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_0() { return cTAG_CLOSEParserRuleCall_5_1_0; }

		//Parameter+=mdef_ParameterType+
		public Assignment getParameterAssignment_5_1_1() { return cParameterAssignment_5_1_1; }

		//mdef_ParameterType
		public RuleCall getParameterMdef_ParameterTypeParserRuleCall_5_1_1_0() { return cParameterMdef_ParameterTypeParserRuleCall_5_1_1_0; }

		//Correlation+=mdef_CorrelationType*
		public Assignment getCorrelationAssignment_5_1_2() { return cCorrelationAssignment_5_1_2; }

		//mdef_CorrelationType
		public RuleCall getCorrelationMdef_CorrelationTypeParserRuleCall_5_1_2_0() { return cCorrelationMdef_CorrelationTypeParserRuleCall_5_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_5_1_3() { return cTAG_OPEN2ParserRuleCall_5_1_3; }

		//"ParameterModel"
		public Keyword getParameterModelKeyword_5_1_4() { return cParameterModelKeyword_5_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_5() { return cTAG_CLOSEParserRuleCall_5_1_5; }
	}

	public class Mdef_CorrelationTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_CorrelationType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cCorrelationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cLevelIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLevelIdCt_levelIdParserRuleCall_3_0 = (RuleCall)cLevelIdAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cParamVar1Assignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cParamVar1Mdef_Param1VarTypeParserRuleCall_4_1_1_0 = (RuleCall)cParamVar1Assignment_4_1_1.eContents().get(0);
		private final Assignment cParamVar2Assignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cParamVar2Mdef_Param2VarTypeParserRuleCall_4_1_2_0 = (RuleCall)cParamVar2Assignment_4_1_2.eContents().get(0);
		private final Assignment cCorrelationCoefficientAssignment_4_1_3 = (Assignment)cGroup_4_1.eContents().get(3);
		private final RuleCall cCorrelationCoefficientMdef_CorrelationCoefficientTypeParserRuleCall_4_1_3_0 = (RuleCall)cCorrelationCoefficientAssignment_4_1_3.eContents().get(0);
		private final Assignment cCovarianceAssignment_4_1_4 = (Assignment)cGroup_4_1.eContents().get(4);
		private final RuleCall cCovarianceMdefCovarianceTypeParserRuleCall_4_1_4_0 = (RuleCall)cCovarianceAssignment_4_1_4.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_5 = (RuleCall)cGroup_4_1.eContents().get(5);
		private final Keyword cCorrelationKeyword_4_1_6 = (Keyword)cGroup_4_1.eContents().get(6);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_7 = (RuleCall)cGroup_4_1.eContents().get(7);
		
		//mdef_CorrelationType:
		//
		//	TAG_OPEN "Correlation" xmlns+=XS_xmlns* levelId=ct_levelId (TAG_CLOSE2 | TAG_CLOSE ParamVar1=mdef_Param1VarType
		//
		//	ParamVar2=mdef_Param2VarType CorrelationCoefficient=mdef_CorrelationCoefficientType? Covariance=mdefCovarianceType?
		//
		//	TAG_OPEN2 "Correlation" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Correlation" xmlns+=XS_xmlns* levelId=ct_levelId (TAG_CLOSE2 | TAG_CLOSE ParamVar1=mdef_Param1VarType
		//
		//ParamVar2=mdef_Param2VarType CorrelationCoefficient=mdef_CorrelationCoefficientType? Covariance=mdefCovarianceType?
		//
		//TAG_OPEN2 "Correlation" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Correlation"
		public Keyword getCorrelationKeyword_1() { return cCorrelationKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//levelId=ct_levelId
		public Assignment getLevelIdAssignment_3() { return cLevelIdAssignment_3; }

		//ct_levelId
		public RuleCall getLevelIdCt_levelIdParserRuleCall_3_0() { return cLevelIdCt_levelIdParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE ParamVar1=mdef_Param1VarType ParamVar2=mdef_Param2VarType
		//
		//CorrelationCoefficient=mdef_CorrelationCoefficientType? Covariance=mdefCovarianceType? TAG_OPEN2 "Correlation"
		//
		//TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE ParamVar1=mdef_Param1VarType ParamVar2=mdef_Param2VarType
		//
		//CorrelationCoefficient=mdef_CorrelationCoefficientType? Covariance=mdefCovarianceType? TAG_OPEN2 "Correlation"
		//
		//TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//ParamVar1=mdef_Param1VarType
		public Assignment getParamVar1Assignment_4_1_1() { return cParamVar1Assignment_4_1_1; }

		//mdef_Param1VarType
		public RuleCall getParamVar1Mdef_Param1VarTypeParserRuleCall_4_1_1_0() { return cParamVar1Mdef_Param1VarTypeParserRuleCall_4_1_1_0; }

		//ParamVar2=mdef_Param2VarType
		public Assignment getParamVar2Assignment_4_1_2() { return cParamVar2Assignment_4_1_2; }

		//mdef_Param2VarType
		public RuleCall getParamVar2Mdef_Param2VarTypeParserRuleCall_4_1_2_0() { return cParamVar2Mdef_Param2VarTypeParserRuleCall_4_1_2_0; }

		//CorrelationCoefficient=mdef_CorrelationCoefficientType?
		public Assignment getCorrelationCoefficientAssignment_4_1_3() { return cCorrelationCoefficientAssignment_4_1_3; }

		//mdef_CorrelationCoefficientType
		public RuleCall getCorrelationCoefficientMdef_CorrelationCoefficientTypeParserRuleCall_4_1_3_0() { return cCorrelationCoefficientMdef_CorrelationCoefficientTypeParserRuleCall_4_1_3_0; }

		//Covariance=mdefCovarianceType?
		public Assignment getCovarianceAssignment_4_1_4() { return cCovarianceAssignment_4_1_4; }

		//mdefCovarianceType
		public RuleCall getCovarianceMdefCovarianceTypeParserRuleCall_4_1_4_0() { return cCovarianceMdefCovarianceTypeParserRuleCall_4_1_4_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_5() { return cTAG_OPEN2ParserRuleCall_4_1_5; }

		//"Correlation"
		public Keyword getCorrelationKeyword_4_1_6() { return cCorrelationKeyword_4_1_6; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_7() { return cTAG_CLOSEParserRuleCall_4_1_7; }
	}

	public class Mdef_Param1VarTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_Param1VarType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cParam1VarKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cBlockAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBlockMath_blockParserRuleCall_3_0 = (RuleCall)cBlockAssignment_3.eContents().get(0);
		private final Assignment cSymbIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSymbIdMath_symbIdParserRuleCall_4_0 = (RuleCall)cSymbIdAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_5_1_1 = (RuleCall)cGroup_5_1.eContents().get(1);
		private final Keyword cParam1VarKeyword_5_1_2 = (Keyword)cGroup_5_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_3 = (RuleCall)cGroup_5_1.eContents().get(3);
		
		//mdef_Param1VarType:
		//
		//	TAG_OPEN "Param1Var" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//	"Param1Var" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Param1Var" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Param1Var"
		//
		//TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Param1Var"
		public Keyword getParam1VarKeyword_1() { return cParam1VarKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//block=Math_block?
		public Assignment getBlockAssignment_3() { return cBlockAssignment_3; }

		//Math_block
		public RuleCall getBlockMath_blockParserRuleCall_3_0() { return cBlockMath_blockParserRuleCall_3_0; }

		//symbId=Math_symbId
		public Assignment getSymbIdAssignment_4() { return cSymbIdAssignment_4; }

		//Math_symbId
		public RuleCall getSymbIdMath_symbIdParserRuleCall_4_0() { return cSymbIdMath_symbIdParserRuleCall_4_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Param1Var" TAG_CLOSE
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_5_0() { return cTAG_CLOSE2ParserRuleCall_5_0; }

		//TAG_CLOSE TAG_OPEN2 "Param1Var" TAG_CLOSE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_0() { return cTAG_CLOSEParserRuleCall_5_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_5_1_1() { return cTAG_OPEN2ParserRuleCall_5_1_1; }

		//"Param1Var"
		public Keyword getParam1VarKeyword_5_1_2() { return cParam1VarKeyword_5_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_3() { return cTAG_CLOSEParserRuleCall_5_1_3; }
	}

	public class Mdef_Param2VarTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_Param2VarType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cParam2VarKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cBlockAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBlockMath_blockParserRuleCall_3_0 = (RuleCall)cBlockAssignment_3.eContents().get(0);
		private final Assignment cSymbIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSymbIdMath_symbIdParserRuleCall_4_0 = (RuleCall)cSymbIdAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_5_1_1 = (RuleCall)cGroup_5_1.eContents().get(1);
		private final Keyword cParam2VarKeyword_5_1_2 = (Keyword)cGroup_5_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_3 = (RuleCall)cGroup_5_1.eContents().get(3);
		
		//mdef_Param2VarType:
		//
		//	TAG_OPEN "Param2Var" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//	"Param2Var" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Param2Var" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Param2Var"
		//
		//TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Param2Var"
		public Keyword getParam2VarKeyword_1() { return cParam2VarKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//block=Math_block?
		public Assignment getBlockAssignment_3() { return cBlockAssignment_3; }

		//Math_block
		public RuleCall getBlockMath_blockParserRuleCall_3_0() { return cBlockMath_blockParserRuleCall_3_0; }

		//symbId=Math_symbId
		public Assignment getSymbIdAssignment_4() { return cSymbIdAssignment_4; }

		//Math_symbId
		public RuleCall getSymbIdMath_symbIdParserRuleCall_4_0() { return cSymbIdMath_symbIdParserRuleCall_4_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Param2Var" TAG_CLOSE
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_5_0() { return cTAG_CLOSE2ParserRuleCall_5_0; }

		//TAG_CLOSE TAG_OPEN2 "Param2Var" TAG_CLOSE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_0() { return cTAG_CLOSEParserRuleCall_5_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_5_1_1() { return cTAG_OPEN2ParserRuleCall_5_1_1; }

		//"Param2Var"
		public Keyword getParam2VarKeyword_5_1_2() { return cParam2VarKeyword_5_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_3() { return cTAG_CLOSEParserRuleCall_5_1_3; }
	}

	public class MdefCovarianceTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdefCovarianceType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMdefCovarianceTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cCovarianceKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprCt_ScalarRhsParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cCovarianceKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//mdefCovarianceType:
		//
		//	{mdefCovarianceType} TAG_OPEN "Covariance" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2
		//
		//	"Covariance" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{mdefCovarianceType} TAG_OPEN "Covariance" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2
		//
		//"Covariance" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{mdefCovarianceType}
		public Action getMdefCovarianceTypeAction_0() { return cMdefCovarianceTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Covariance"
		public Keyword getCovarianceKeyword_2() { return cCovarianceKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "Covariance" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "Covariance" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=ct_ScalarRhs
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//ct_ScalarRhs
		public RuleCall getExprCt_ScalarRhsParserRuleCall_4_1_1_0() { return cExprCt_ScalarRhsParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Covariance"
		public Keyword getCovarianceKeyword_4_1_3() { return cCovarianceKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Mdef_CorrelationCoefficientTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_CorrelationCoefficientType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMdef_CorrelationCoefficientTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cCorrelationCoefficientKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprCt_ScalarRhsParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cCorrelationCoefficientKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//mdef_CorrelationCoefficientType:
		//
		//	{mdef_CorrelationCoefficientType} TAG_OPEN "CorrelationCoefficient" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Expr=ct_ScalarRhs TAG_OPEN2 "CorrelationCoefficient" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{mdef_CorrelationCoefficientType} TAG_OPEN "CorrelationCoefficient" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//Expr=ct_ScalarRhs TAG_OPEN2 "CorrelationCoefficient" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{mdef_CorrelationCoefficientType}
		public Action getMdef_CorrelationCoefficientTypeAction_0() { return cMdef_CorrelationCoefficientTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"CorrelationCoefficient"
		public Keyword getCorrelationCoefficientKeyword_2() { return cCorrelationCoefficientKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "CorrelationCoefficient" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "CorrelationCoefficient" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=ct_ScalarRhs
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//ct_ScalarRhs
		public RuleCall getExprCt_ScalarRhsParserRuleCall_4_1_1_0() { return cExprCt_ScalarRhsParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"CorrelationCoefficient"
		public Keyword getCorrelationCoefficientKeyword_4_1_3() { return cCorrelationCoefficientKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Mdef_CovariateModelTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_CovariateModelType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cCovariateModelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdCt_idParserRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameCt_nameParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final Assignment cParameterAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cParameterMdef_ParameterTypeParserRuleCall_5_1_1_0 = (RuleCall)cParameterAssignment_5_1_1.eContents().get(0);
		private final Assignment cCovariateAssignment_5_1_2 = (Assignment)cGroup_5_1.eContents().get(2);
		private final RuleCall cCovariateMdef_CovariateVariabilityTypeParserRuleCall_5_1_2_0 = (RuleCall)cCovariateAssignment_5_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_5_1_3 = (RuleCall)cGroup_5_1.eContents().get(3);
		private final Keyword cCovariateModelKeyword_5_1_4 = (Keyword)cGroup_5_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_5 = (RuleCall)cGroup_5_1.eContents().get(5);
		
		//mdef_CovariateModelType:
		//
		//	TAG_OPEN "CovariateModel" xmlns+=XS_xmlns* id=ct_id name=ct_name? (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Parameter+=mdef_ParameterType* Covariate+=mdef_CovariateVariabilityType+ TAG_OPEN2 "CovariateModel" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "CovariateModel" xmlns+=XS_xmlns* id=ct_id name=ct_name? (TAG_CLOSE2 | TAG_CLOSE Parameter+=mdef_ParameterType*
		//
		//Covariate+=mdef_CovariateVariabilityType+ TAG_OPEN2 "CovariateModel" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"CovariateModel"
		public Keyword getCovariateModelKeyword_1() { return cCovariateModelKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//id=ct_id
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }

		//ct_id
		public RuleCall getIdCt_idParserRuleCall_3_0() { return cIdCt_idParserRuleCall_3_0; }

		//name=ct_name?
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ct_name
		public RuleCall getNameCt_nameParserRuleCall_4_0() { return cNameCt_nameParserRuleCall_4_0; }

		//TAG_CLOSE2 | TAG_CLOSE Parameter+=mdef_ParameterType* Covariate+=mdef_CovariateVariabilityType+ TAG_OPEN2
		//
		//"CovariateModel" TAG_CLOSE
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_5_0() { return cTAG_CLOSE2ParserRuleCall_5_0; }

		//TAG_CLOSE Parameter+=mdef_ParameterType* Covariate+=mdef_CovariateVariabilityType+ TAG_OPEN2 "CovariateModel" TAG_CLOSE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_0() { return cTAG_CLOSEParserRuleCall_5_1_0; }

		//Parameter+=mdef_ParameterType*
		public Assignment getParameterAssignment_5_1_1() { return cParameterAssignment_5_1_1; }

		//mdef_ParameterType
		public RuleCall getParameterMdef_ParameterTypeParserRuleCall_5_1_1_0() { return cParameterMdef_ParameterTypeParserRuleCall_5_1_1_0; }

		//Covariate+=mdef_CovariateVariabilityType+
		public Assignment getCovariateAssignment_5_1_2() { return cCovariateAssignment_5_1_2; }

		//mdef_CovariateVariabilityType
		public RuleCall getCovariateMdef_CovariateVariabilityTypeParserRuleCall_5_1_2_0() { return cCovariateMdef_CovariateVariabilityTypeParserRuleCall_5_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_5_1_3() { return cTAG_OPEN2ParserRuleCall_5_1_3; }

		//"CovariateModel"
		public Keyword getCovariateModelKeyword_5_1_4() { return cCovariateModelKeyword_5_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_5() { return cTAG_CLOSEParserRuleCall_5_1_5; }
	}

	public class Mdef_ParameterTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_ParameterType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cParameterKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameCt_nameParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Assignment cSymbIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSymbIdMath_symbIdParserRuleCall_4_0 = (RuleCall)cSymbIdAssignment_4.eContents().get(0);
		private final Assignment cTransformationAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTransformationMdef_transformationParserRuleCall_5_0 = (RuleCall)cTransformationAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_6_0 = (RuleCall)cAlternatives_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_0 = (RuleCall)cGroup_6_1.eContents().get(0);
		private final Assignment cVarAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cVarMath_VarTypeParserRuleCall_6_1_1_0 = (RuleCall)cVarAssignment_6_1_1.eContents().get(0);
		private final Assignment cScalarAssignment_6_1_2 = (Assignment)cGroup_6_1.eContents().get(2);
		private final RuleCall cScalarMath_ScalarTypeParserRuleCall_6_1_2_0 = (RuleCall)cScalarAssignment_6_1_2.eContents().get(0);
		private final Assignment cEquationAssignment_6_1_3 = (Assignment)cGroup_6_1.eContents().get(3);
		private final RuleCall cEquationMath_EquationTypeParserRuleCall_6_1_3_0 = (RuleCall)cEquationAssignment_6_1_3.eContents().get(0);
		private final Assignment cRandomEffectAssignment_6_1_4 = (Assignment)cGroup_6_1.eContents().get(4);
		private final RuleCall cRandomEffectMdef_ParameterRandomEffectTypeParserRuleCall_6_1_4_0 = (RuleCall)cRandomEffectAssignment_6_1_4.eContents().get(0);
		private final Assignment cCovariateAssignment_6_1_5 = (Assignment)cGroup_6_1.eContents().get(5);
		private final RuleCall cCovariateMdef_CovariateTypeParserRuleCall_6_1_5_0 = (RuleCall)cCovariateAssignment_6_1_5.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_6_1_6 = (RuleCall)cGroup_6_1.eContents().get(6);
		private final Keyword cParameterKeyword_6_1_7 = (Keyword)cGroup_6_1.eContents().get(7);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_8 = (RuleCall)cGroup_6_1.eContents().get(8);
		
		//mdef_ParameterType:
		//
		//	TAG_OPEN "Parameter" xmlns+=XS_xmlns* name=ct_name? symbId=Math_symbId transformation=mdef_transformation?
		//
		//	(TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType? Scalar=Math_ScalarType? Equation=Math_EquationType?
		//
		//	RandomEffect+=mdef_ParameterRandomEffectType* Covariate+=mdef_CovariateType* TAG_OPEN2 "Parameter" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Parameter" xmlns+=XS_xmlns* name=ct_name? symbId=Math_symbId transformation=mdef_transformation? (TAG_CLOSE2 |
		//
		//TAG_CLOSE Var=Math_VarType? Scalar=Math_ScalarType? Equation=Math_EquationType?
		//
		//RandomEffect+=mdef_ParameterRandomEffectType* Covariate+=mdef_CovariateType* TAG_OPEN2 "Parameter" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Parameter"
		public Keyword getParameterKeyword_1() { return cParameterKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//name=ct_name?
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ct_name
		public RuleCall getNameCt_nameParserRuleCall_3_0() { return cNameCt_nameParserRuleCall_3_0; }

		//symbId=Math_symbId
		public Assignment getSymbIdAssignment_4() { return cSymbIdAssignment_4; }

		//Math_symbId
		public RuleCall getSymbIdMath_symbIdParserRuleCall_4_0() { return cSymbIdMath_symbIdParserRuleCall_4_0; }

		//transformation=mdef_transformation?
		public Assignment getTransformationAssignment_5() { return cTransformationAssignment_5; }

		//mdef_transformation
		public RuleCall getTransformationMdef_transformationParserRuleCall_5_0() { return cTransformationMdef_transformationParserRuleCall_5_0; }

		//TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType? Scalar=Math_ScalarType? Equation=Math_EquationType?
		//
		//RandomEffect+=mdef_ParameterRandomEffectType* Covariate+=mdef_CovariateType* TAG_OPEN2 "Parameter" TAG_CLOSE
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_6_0() { return cTAG_CLOSE2ParserRuleCall_6_0; }

		//TAG_CLOSE Var=Math_VarType? Scalar=Math_ScalarType? Equation=Math_EquationType?
		//
		//RandomEffect+=mdef_ParameterRandomEffectType* Covariate+=mdef_CovariateType* TAG_OPEN2 "Parameter" TAG_CLOSE
		public Group getGroup_6_1() { return cGroup_6_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_0() { return cTAG_CLOSEParserRuleCall_6_1_0; }

		//Var=Math_VarType?
		public Assignment getVarAssignment_6_1_1() { return cVarAssignment_6_1_1; }

		//Math_VarType
		public RuleCall getVarMath_VarTypeParserRuleCall_6_1_1_0() { return cVarMath_VarTypeParserRuleCall_6_1_1_0; }

		//Scalar=Math_ScalarType?
		public Assignment getScalarAssignment_6_1_2() { return cScalarAssignment_6_1_2; }

		//Math_ScalarType
		public RuleCall getScalarMath_ScalarTypeParserRuleCall_6_1_2_0() { return cScalarMath_ScalarTypeParserRuleCall_6_1_2_0; }

		//Equation=Math_EquationType?
		public Assignment getEquationAssignment_6_1_3() { return cEquationAssignment_6_1_3; }

		//Math_EquationType
		public RuleCall getEquationMath_EquationTypeParserRuleCall_6_1_3_0() { return cEquationMath_EquationTypeParserRuleCall_6_1_3_0; }

		//RandomEffect+=mdef_ParameterRandomEffectType*
		public Assignment getRandomEffectAssignment_6_1_4() { return cRandomEffectAssignment_6_1_4; }

		//mdef_ParameterRandomEffectType
		public RuleCall getRandomEffectMdef_ParameterRandomEffectTypeParserRuleCall_6_1_4_0() { return cRandomEffectMdef_ParameterRandomEffectTypeParserRuleCall_6_1_4_0; }

		//Covariate+=mdef_CovariateType*
		public Assignment getCovariateAssignment_6_1_5() { return cCovariateAssignment_6_1_5; }

		//mdef_CovariateType
		public RuleCall getCovariateMdef_CovariateTypeParserRuleCall_6_1_5_0() { return cCovariateMdef_CovariateTypeParserRuleCall_6_1_5_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_6_1_6() { return cTAG_OPEN2ParserRuleCall_6_1_6; }

		//"Parameter"
		public Keyword getParameterKeyword_6_1_7() { return cParameterKeyword_6_1_7; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_8() { return cTAG_CLOSEParserRuleCall_6_1_8; }
	}

	public class Mdef_CovariateVariabilityTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_CovariateVariabilityType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cCovariateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameCt_nameParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Assignment cSymbIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSymbIdCt_symbIdParserRuleCall_4_0 = (RuleCall)cSymbIdAssignment_4.eContents().get(0);
		private final Assignment cTransformationAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cTransformationMdef_transformationParserRuleCall_5_0 = (RuleCall)cTransformationAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_6_0 = (RuleCall)cAlternatives_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_0 = (RuleCall)cGroup_6_1.eContents().get(0);
		private final Assignment cContinuousAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cContinuousMdef_ContinuousCovariateTypeParserRuleCall_6_1_1_0 = (RuleCall)cContinuousAssignment_6_1_1.eContents().get(0);
		private final Assignment cCategoricalAssignment_6_1_2 = (Assignment)cGroup_6_1.eContents().get(2);
		private final RuleCall cCategoricalMdef_CategoricalTypeParserRuleCall_6_1_2_0 = (RuleCall)cCategoricalAssignment_6_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_6_1_3 = (RuleCall)cGroup_6_1.eContents().get(3);
		private final Keyword cCovariateKeyword_6_1_4 = (Keyword)cGroup_6_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_5 = (RuleCall)cGroup_6_1.eContents().get(5);
		
		//mdef_CovariateVariabilityType:
		//
		//	TAG_OPEN "Covariate" xmlns+=XS_xmlns* name=ct_name? symbId=ct_symbId transformation=mdef_transformation? (TAG_CLOSE2
		//
		//	| TAG_CLOSE Continuous=mdef_ContinuousCovariateType? Categorical=mdef_CategoricalType? TAG_OPEN2 "Covariate"
		//
		//	TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Covariate" xmlns+=XS_xmlns* name=ct_name? symbId=ct_symbId transformation=mdef_transformation? (TAG_CLOSE2 |
		//
		//TAG_CLOSE Continuous=mdef_ContinuousCovariateType? Categorical=mdef_CategoricalType? TAG_OPEN2 "Covariate" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Covariate"
		public Keyword getCovariateKeyword_1() { return cCovariateKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//name=ct_name?
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ct_name
		public RuleCall getNameCt_nameParserRuleCall_3_0() { return cNameCt_nameParserRuleCall_3_0; }

		//symbId=ct_symbId
		public Assignment getSymbIdAssignment_4() { return cSymbIdAssignment_4; }

		//ct_symbId
		public RuleCall getSymbIdCt_symbIdParserRuleCall_4_0() { return cSymbIdCt_symbIdParserRuleCall_4_0; }

		//transformation=mdef_transformation?
		public Assignment getTransformationAssignment_5() { return cTransformationAssignment_5; }

		//mdef_transformation
		public RuleCall getTransformationMdef_transformationParserRuleCall_5_0() { return cTransformationMdef_transformationParserRuleCall_5_0; }

		//TAG_CLOSE2 | TAG_CLOSE Continuous=mdef_ContinuousCovariateType? Categorical=mdef_CategoricalType? TAG_OPEN2 "Covariate"
		//
		//TAG_CLOSE
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_6_0() { return cTAG_CLOSE2ParserRuleCall_6_0; }

		//TAG_CLOSE Continuous=mdef_ContinuousCovariateType? Categorical=mdef_CategoricalType? TAG_OPEN2 "Covariate" TAG_CLOSE
		public Group getGroup_6_1() { return cGroup_6_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_0() { return cTAG_CLOSEParserRuleCall_6_1_0; }

		//Continuous=mdef_ContinuousCovariateType?
		public Assignment getContinuousAssignment_6_1_1() { return cContinuousAssignment_6_1_1; }

		//mdef_ContinuousCovariateType
		public RuleCall getContinuousMdef_ContinuousCovariateTypeParserRuleCall_6_1_1_0() { return cContinuousMdef_ContinuousCovariateTypeParserRuleCall_6_1_1_0; }

		//Categorical=mdef_CategoricalType?
		public Assignment getCategoricalAssignment_6_1_2() { return cCategoricalAssignment_6_1_2; }

		//mdef_CategoricalType
		public RuleCall getCategoricalMdef_CategoricalTypeParserRuleCall_6_1_2_0() { return cCategoricalMdef_CategoricalTypeParserRuleCall_6_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_6_1_3() { return cTAG_OPEN2ParserRuleCall_6_1_3; }

		//"Covariate"
		public Keyword getCovariateKeyword_6_1_4() { return cCovariateKeyword_6_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_5() { return cTAG_CLOSEParserRuleCall_6_1_5; }
	}

	public class Mdef_transformationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_transformation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTransformationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTransformationAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTransformationMdef_ParameterTypeNameParserRuleCall_2_0 = (RuleCall)cTransformationAssignment_2.eContents().get(0);
		
		//mdef_transformation:
		//
		//	"transformation" "=" transformation=mdef_ParameterTypeName;
		public ParserRule getRule() { return rule; }

		//"transformation" "=" transformation=mdef_ParameterTypeName
		public Group getGroup() { return cGroup; }

		//"transformation"
		public Keyword getTransformationKeyword_0() { return cTransformationKeyword_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//transformation=mdef_ParameterTypeName
		public Assignment getTransformationAssignment_2() { return cTransformationAssignment_2; }

		//mdef_ParameterTypeName
		public RuleCall getTransformationMdef_ParameterTypeNameParserRuleCall_2_0() { return cTransformationMdef_ParameterTypeNameParserRuleCall_2_0; }
	}

	public class Mdef_CategoricalTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_CategoricalType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMdef_CategoricalTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cCategoricalKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cCategoryAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cCategoryMdef_CategoryTypeParserRuleCall_4_1_1_0 = (RuleCall)cCategoryAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cCategoricalKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//mdef_CategoricalType:
		//
		//	{mdef_CategoricalType} TAG_OPEN "Categorical" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Category+=mdef_CategoryType*
		//
		//	TAG_OPEN2 "Categorical" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{mdef_CategoricalType} TAG_OPEN "Categorical" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Category+=mdef_CategoryType*
		//
		//TAG_OPEN2 "Categorical" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{mdef_CategoricalType}
		public Action getMdef_CategoricalTypeAction_0() { return cMdef_CategoricalTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Categorical"
		public Keyword getCategoricalKeyword_2() { return cCategoricalKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Category+=mdef_CategoryType* TAG_OPEN2 "Categorical" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Category+=mdef_CategoryType* TAG_OPEN2 "Categorical" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Category+=mdef_CategoryType*
		public Assignment getCategoryAssignment_4_1_1() { return cCategoryAssignment_4_1_1; }

		//mdef_CategoryType
		public RuleCall getCategoryMdef_CategoryTypeParserRuleCall_4_1_1_0() { return cCategoryMdef_CategoryTypeParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Categorical"
		public Keyword getCategoricalKeyword_4_1_3() { return cCategoricalKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Mdef_ContinuousCovariateTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_ContinuousCovariateType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMdef_ContinuousCovariateTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cContinuousKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cDistributionAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cDistributionUncert_DistributionTypeParserRuleCall_4_1_1_0 = (RuleCall)cDistributionAssignment_4_1_1.eContents().get(0);
		private final Assignment cTransformationAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cTransformationMdef_TransformationTypeParserRuleCall_4_1_2_0 = (RuleCall)cTransformationAssignment_4_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		private final Keyword cContinuousKeyword_4_1_4 = (Keyword)cGroup_4_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_5 = (RuleCall)cGroup_4_1.eContents().get(5);
		
		//mdef_ContinuousCovariateType:
		//
		//	{mdef_ContinuousCovariateType} TAG_OPEN "Continuous" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Distribution=uncert_DistributionType Transformation=mdef_TransformationType TAG_OPEN2 "Continuous" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{mdef_ContinuousCovariateType} TAG_OPEN "Continuous" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//Distribution=uncert_DistributionType Transformation=mdef_TransformationType TAG_OPEN2 "Continuous" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{mdef_ContinuousCovariateType}
		public Action getMdef_ContinuousCovariateTypeAction_0() { return cMdef_ContinuousCovariateTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Continuous"
		public Keyword getContinuousKeyword_2() { return cContinuousKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Distribution=uncert_DistributionType Transformation=mdef_TransformationType TAG_OPEN2
		//
		//"Continuous" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Distribution=uncert_DistributionType Transformation=mdef_TransformationType TAG_OPEN2 "Continuous" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Distribution=uncert_DistributionType
		public Assignment getDistributionAssignment_4_1_1() { return cDistributionAssignment_4_1_1; }

		//uncert_DistributionType
		public RuleCall getDistributionUncert_DistributionTypeParserRuleCall_4_1_1_0() { return cDistributionUncert_DistributionTypeParserRuleCall_4_1_1_0; }

		//Transformation=mdef_TransformationType
		public Assignment getTransformationAssignment_4_1_2() { return cTransformationAssignment_4_1_2; }

		//mdef_TransformationType
		public RuleCall getTransformationMdef_TransformationTypeParserRuleCall_4_1_2_0() { return cTransformationMdef_TransformationTypeParserRuleCall_4_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_3() { return cTAG_OPEN2ParserRuleCall_4_1_3; }

		//"Continuous"
		public Keyword getContinuousKeyword_4_1_4() { return cContinuousKeyword_4_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_5() { return cTAG_CLOSEParserRuleCall_4_1_5; }
	}

	public class Mdef_TransformationTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_TransformationType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMdef_TransformationTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cTransformationKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprCt_RhsParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cTransformationKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//mdef_TransformationType:
		//
		//	{mdef_TransformationType} TAG_OPEN "Transformation" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2
		//
		//	"Transformation" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{mdef_TransformationType} TAG_OPEN "Transformation" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2
		//
		//"Transformation" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{mdef_TransformationType}
		public Action getMdef_TransformationTypeAction_0() { return cMdef_TransformationTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Transformation"
		public Keyword getTransformationKeyword_2() { return cTransformationKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2 "Transformation" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=ct_Rhs TAG_OPEN2 "Transformation" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=ct_Rhs
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//ct_Rhs
		public RuleCall getExprCt_RhsParserRuleCall_4_1_1_0() { return cExprCt_RhsParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Transformation"
		public Keyword getTransformationKeyword_4_1_3() { return cTransformationKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Mdef_VariabilityLevelDefnTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_VariabilityLevelDefnType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cVariabilityLevelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdCt_idParserRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameCt_nameParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_5_1_1 = (RuleCall)cGroup_5_1.eContents().get(1);
		private final Keyword cVariabilityLevelKeyword_5_1_2 = (Keyword)cGroup_5_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_3 = (RuleCall)cGroup_5_1.eContents().get(3);
		
		//mdef_VariabilityLevelDefnType:
		//
		//	TAG_OPEN "VariabilityLevel" xmlns+=XS_xmlns* id=ct_id name=ct_name? (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//	"VariabilityLevel" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "VariabilityLevel" xmlns+=XS_xmlns* id=ct_id name=ct_name? (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "VariabilityLevel"
		//
		//TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"VariabilityLevel"
		public Keyword getVariabilityLevelKeyword_1() { return cVariabilityLevelKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//id=ct_id
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }

		//ct_id
		public RuleCall getIdCt_idParserRuleCall_3_0() { return cIdCt_idParserRuleCall_3_0; }

		//name=ct_name?
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ct_name
		public RuleCall getNameCt_nameParserRuleCall_4_0() { return cNameCt_nameParserRuleCall_4_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "VariabilityLevel" TAG_CLOSE
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_5_0() { return cTAG_CLOSE2ParserRuleCall_5_0; }

		//TAG_CLOSE TAG_OPEN2 "VariabilityLevel" TAG_CLOSE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_0() { return cTAG_CLOSEParserRuleCall_5_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_5_1_1() { return cTAG_OPEN2ParserRuleCall_5_1_1; }

		//"VariabilityLevel"
		public Keyword getVariabilityLevelKeyword_5_1_2() { return cVariabilityLevelKeyword_5_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_3() { return cTAG_CLOSEParserRuleCall_5_1_3; }
	}

	public class Mdef_ImportTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_ImportType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cImportKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Keyword cResourceKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cResourceAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cResourceXS_ANY_URIParserRuleCall_5_0 = (RuleCall)cResourceAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cResourceTypeKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cResourceTypeAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cResourceTypeMdef_ImportResourceTypeTypeParserRuleCall_6_2_0 = (RuleCall)cResourceTypeAssignment_6_2.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cSourceKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cEqualsSignKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cSourceAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cSourceXS_TOKENParserRuleCall_7_2_0 = (RuleCall)cSourceAssignment_7_2.eContents().get(0);
		private final Alternatives cAlternatives_8 = (Alternatives)cGroup.eContents().get(8);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_8_0 = (RuleCall)cAlternatives_8.eContents().get(0);
		private final Group cGroup_8_1 = (Group)cAlternatives_8.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_8_1_0 = (RuleCall)cGroup_8_1.eContents().get(0);
		private final Assignment cLinkAssignment_8_1_1 = (Assignment)cGroup_8_1.eContents().get(1);
		private final RuleCall cLinkMdef_ImportLinkTypeParserRuleCall_8_1_1_0 = (RuleCall)cLinkAssignment_8_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_8_1_2 = (RuleCall)cGroup_8_1.eContents().get(2);
		private final Keyword cImportKeyword_8_1_3 = (Keyword)cGroup_8_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_8_1_4 = (RuleCall)cGroup_8_1.eContents().get(4);
		
		//mdef_ImportType:
		//
		//	TAG_OPEN "Import" xmlns+=XS_xmlns* "resource" "=" resource=XS_ANY_URI ("resourceType" "="
		//
		//	resourceType=mdef_ImportResourceTypeType)? ("source" "=" source=XS_TOKEN)? (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Link+=mdef_ImportLinkType+ TAG_OPEN2 "Import" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Import" xmlns+=XS_xmlns* "resource" "=" resource=XS_ANY_URI ("resourceType" "="
		//
		//resourceType=mdef_ImportResourceTypeType)? ("source" "=" source=XS_TOKEN)? (TAG_CLOSE2 | TAG_CLOSE
		//
		//Link+=mdef_ImportLinkType+ TAG_OPEN2 "Import" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Import"
		public Keyword getImportKeyword_1() { return cImportKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//"resource"
		public Keyword getResourceKeyword_3() { return cResourceKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//resource=XS_ANY_URI
		public Assignment getResourceAssignment_5() { return cResourceAssignment_5; }

		//XS_ANY_URI
		public RuleCall getResourceXS_ANY_URIParserRuleCall_5_0() { return cResourceXS_ANY_URIParserRuleCall_5_0; }

		//("resourceType" "=" resourceType=mdef_ImportResourceTypeType)?
		public Group getGroup_6() { return cGroup_6; }

		//"resourceType"
		public Keyword getResourceTypeKeyword_6_0() { return cResourceTypeKeyword_6_0; }

		//"="
		public Keyword getEqualsSignKeyword_6_1() { return cEqualsSignKeyword_6_1; }

		//resourceType=mdef_ImportResourceTypeType
		public Assignment getResourceTypeAssignment_6_2() { return cResourceTypeAssignment_6_2; }

		//mdef_ImportResourceTypeType
		public RuleCall getResourceTypeMdef_ImportResourceTypeTypeParserRuleCall_6_2_0() { return cResourceTypeMdef_ImportResourceTypeTypeParserRuleCall_6_2_0; }

		//("source" "=" source=XS_TOKEN)?
		public Group getGroup_7() { return cGroup_7; }

		//"source"
		public Keyword getSourceKeyword_7_0() { return cSourceKeyword_7_0; }

		//"="
		public Keyword getEqualsSignKeyword_7_1() { return cEqualsSignKeyword_7_1; }

		//source=XS_TOKEN
		public Assignment getSourceAssignment_7_2() { return cSourceAssignment_7_2; }

		//XS_TOKEN
		public RuleCall getSourceXS_TOKENParserRuleCall_7_2_0() { return cSourceXS_TOKENParserRuleCall_7_2_0; }

		//TAG_CLOSE2 | TAG_CLOSE Link+=mdef_ImportLinkType+ TAG_OPEN2 "Import" TAG_CLOSE
		public Alternatives getAlternatives_8() { return cAlternatives_8; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_8_0() { return cTAG_CLOSE2ParserRuleCall_8_0; }

		//TAG_CLOSE Link+=mdef_ImportLinkType+ TAG_OPEN2 "Import" TAG_CLOSE
		public Group getGroup_8_1() { return cGroup_8_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_8_1_0() { return cTAG_CLOSEParserRuleCall_8_1_0; }

		//Link+=mdef_ImportLinkType+
		public Assignment getLinkAssignment_8_1_1() { return cLinkAssignment_8_1_1; }

		//mdef_ImportLinkType
		public RuleCall getLinkMdef_ImportLinkTypeParserRuleCall_8_1_1_0() { return cLinkMdef_ImportLinkTypeParserRuleCall_8_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_8_1_2() { return cTAG_OPEN2ParserRuleCall_8_1_2; }

		//"Import"
		public Keyword getImportKeyword_8_1_3() { return cImportKeyword_8_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_8_1_4() { return cTAG_CLOSEParserRuleCall_8_1_4; }
	}

	public class Mdef_ImportLinkTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_ImportLinkType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cLinkKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Keyword cSymbolPtrKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSymbolPtrAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSymbolPtrXS_STRINGTerminalRuleCall_5_0 = (RuleCall)cSymbolPtrAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_6_0 = (RuleCall)cAlternatives_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_0 = (RuleCall)cGroup_6_1.eContents().get(0);
		private final Assignment cVarAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cVarMath_VarTypeParserRuleCall_6_1_1_0 = (RuleCall)cVarAssignment_6_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_6_1_2 = (RuleCall)cGroup_6_1.eContents().get(2);
		private final Keyword cLinkKeyword_6_1_3 = (Keyword)cGroup_6_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_4 = (RuleCall)cGroup_6_1.eContents().get(4);
		
		//mdef_ImportLinkType:
		//
		//	TAG_OPEN "Link" xmlns+=XS_xmlns* "symbolPtr" "=" symbolPtr=XS_STRING (TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType
		//
		//	TAG_OPEN2 "Link" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Link" xmlns+=XS_xmlns* "symbolPtr" "=" symbolPtr=XS_STRING (TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType TAG_OPEN2
		//
		//"Link" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Link"
		public Keyword getLinkKeyword_1() { return cLinkKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//"symbolPtr"
		public Keyword getSymbolPtrKeyword_3() { return cSymbolPtrKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//symbolPtr=XS_STRING
		public Assignment getSymbolPtrAssignment_5() { return cSymbolPtrAssignment_5; }

		//XS_STRING
		public RuleCall getSymbolPtrXS_STRINGTerminalRuleCall_5_0() { return cSymbolPtrXS_STRINGTerminalRuleCall_5_0; }

		//TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType TAG_OPEN2 "Link" TAG_CLOSE
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_6_0() { return cTAG_CLOSE2ParserRuleCall_6_0; }

		//TAG_CLOSE Var=Math_VarType TAG_OPEN2 "Link" TAG_CLOSE
		public Group getGroup_6_1() { return cGroup_6_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_0() { return cTAG_CLOSEParserRuleCall_6_1_0; }

		//Var=Math_VarType
		public Assignment getVarAssignment_6_1_1() { return cVarAssignment_6_1_1; }

		//Math_VarType
		public RuleCall getVarMath_VarTypeParserRuleCall_6_1_1_0() { return cVarMath_VarTypeParserRuleCall_6_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_6_1_2() { return cTAG_OPEN2ParserRuleCall_6_1_2; }

		//"Link"
		public Keyword getLinkKeyword_6_1_3() { return cLinkKeyword_6_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_4() { return cTAG_CLOSEParserRuleCall_6_1_4; }
	}

	public class Mdef_ImportResourceTypeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_ImportResourceTypeType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cSbmlAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cSbmlSbmlKeyword_0_0 = (Keyword)cSbmlAssignment_0.eContents().get(0);
		private final Assignment cPharmmlAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cPharmmlPharmmlKeyword_1_0 = (Keyword)cPharmmlAssignment_1.eContents().get(0);
		
		//mdef_ImportResourceTypeType:
		//
		//	sbml="\"sbml\"" | pharmml="\"pharmml\"";
		public ParserRule getRule() { return rule; }

		//sbml="\"sbml\"" | pharmml="\"pharmml\""
		public Alternatives getAlternatives() { return cAlternatives; }

		//sbml="\"sbml\""
		public Assignment getSbmlAssignment_0() { return cSbmlAssignment_0; }

		//"\"sbml\""
		public Keyword getSbmlSbmlKeyword_0_0() { return cSbmlSbmlKeyword_0_0; }

		//pharmml="\"pharmml\""
		public Assignment getPharmmlAssignment_1() { return cPharmmlAssignment_1; }

		//"\"pharmml\""
		public Keyword getPharmmlPharmmlKeyword_1_0() { return cPharmmlPharmmlKeyword_1_0; }
	}

	public class Mdef_CovariateTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_CovariateType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMdef_CovariateTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cCovariateKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cVarAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cVarMath_VarTypeParserRuleCall_4_1_1_0 = (RuleCall)cVarAssignment_4_1_1.eContents().get(0);
		private final Assignment cFixedEffectAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cFixedEffectMdef_FixedEffectTypeParserRuleCall_4_1_2_0 = (RuleCall)cFixedEffectAssignment_4_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		private final Keyword cCovariateKeyword_4_1_4 = (Keyword)cGroup_4_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_5 = (RuleCall)cGroup_4_1.eContents().get(5);
		
		//mdef_CovariateType:
		//
		//	{mdef_CovariateType} TAG_OPEN "Covariate" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType
		//
		//	FixedEffect+=mdef_FixedEffectType+ TAG_OPEN2 "Covariate" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{mdef_CovariateType} TAG_OPEN "Covariate" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType
		//
		//FixedEffect+=mdef_FixedEffectType+ TAG_OPEN2 "Covariate" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{mdef_CovariateType}
		public Action getMdef_CovariateTypeAction_0() { return cMdef_CovariateTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Covariate"
		public Keyword getCovariateKeyword_2() { return cCovariateKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType FixedEffect+=mdef_FixedEffectType+ TAG_OPEN2 "Covariate" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Var=Math_VarType FixedEffect+=mdef_FixedEffectType+ TAG_OPEN2 "Covariate" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Var=Math_VarType
		public Assignment getVarAssignment_4_1_1() { return cVarAssignment_4_1_1; }

		//Math_VarType
		public RuleCall getVarMath_VarTypeParserRuleCall_4_1_1_0() { return cVarMath_VarTypeParserRuleCall_4_1_1_0; }

		//FixedEffect+=mdef_FixedEffectType+
		public Assignment getFixedEffectAssignment_4_1_2() { return cFixedEffectAssignment_4_1_2; }

		//mdef_FixedEffectType
		public RuleCall getFixedEffectMdef_FixedEffectTypeParserRuleCall_4_1_2_0() { return cFixedEffectMdef_FixedEffectTypeParserRuleCall_4_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_3() { return cTAG_OPEN2ParserRuleCall_4_1_3; }

		//"Covariate"
		public Keyword getCovariateKeyword_4_1_4() { return cCovariateKeyword_4_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_5() { return cTAG_CLOSEParserRuleCall_4_1_5; }
	}

	public class Mdef_FixedEffectTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_FixedEffectType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMdef_FixedEffectTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFixedEffectKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cVarAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cVarMath_VarTypeParserRuleCall_4_1_1_0 = (RuleCall)cVarAssignment_4_1_1.eContents().get(0);
		private final Assignment cCategoryAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cCategoryMdef_CategoryTypeParserRuleCall_4_1_2_0 = (RuleCall)cCategoryAssignment_4_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		private final Keyword cFixedEffectKeyword_4_1_4 = (Keyword)cGroup_4_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_5 = (RuleCall)cGroup_4_1.eContents().get(5);
		
		//mdef_FixedEffectType:
		//
		//	{mdef_FixedEffectType} TAG_OPEN "FixedEffect" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType
		//
		//	Category=mdef_CategoryType? TAG_OPEN2 "FixedEffect" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{mdef_FixedEffectType} TAG_OPEN "FixedEffect" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType
		//
		//Category=mdef_CategoryType? TAG_OPEN2 "FixedEffect" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{mdef_FixedEffectType}
		public Action getMdef_FixedEffectTypeAction_0() { return cMdef_FixedEffectTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"FixedEffect"
		public Keyword getFixedEffectKeyword_2() { return cFixedEffectKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType Category=mdef_CategoryType? TAG_OPEN2 "FixedEffect" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Var=Math_VarType Category=mdef_CategoryType? TAG_OPEN2 "FixedEffect" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Var=Math_VarType
		public Assignment getVarAssignment_4_1_1() { return cVarAssignment_4_1_1; }

		//Math_VarType
		public RuleCall getVarMath_VarTypeParserRuleCall_4_1_1_0() { return cVarMath_VarTypeParserRuleCall_4_1_1_0; }

		//Category=mdef_CategoryType?
		public Assignment getCategoryAssignment_4_1_2() { return cCategoryAssignment_4_1_2; }

		//mdef_CategoryType
		public RuleCall getCategoryMdef_CategoryTypeParserRuleCall_4_1_2_0() { return cCategoryMdef_CategoryTypeParserRuleCall_4_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_3() { return cTAG_OPEN2ParserRuleCall_4_1_3; }

		//"FixedEffect"
		public Keyword getFixedEffectKeyword_4_1_4() { return cFixedEffectKeyword_4_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_5() { return cTAG_CLOSEParserRuleCall_4_1_5; }
	}

	public class Mdef_CategoryTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_CategoryType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cCategoryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cCatIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCatIdCt_catIdParserRuleCall_3_0 = (RuleCall)cCatIdAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameCt_nameParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final Assignment cProbabilityAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cProbabilityMdef_ProbabilityTypeParserRuleCall_5_1_1_0 = (RuleCall)cProbabilityAssignment_5_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_5_1_2 = (RuleCall)cGroup_5_1.eContents().get(2);
		private final Keyword cCategoryKeyword_5_1_3 = (Keyword)cGroup_5_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_4 = (RuleCall)cGroup_5_1.eContents().get(4);
		
		//mdef_CategoryType:
		//
		//	TAG_OPEN "Category" xmlns+=XS_xmlns* catId=ct_catId name=ct_name? (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Probability=mdef_ProbabilityType? TAG_OPEN2 "Category" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Category" xmlns+=XS_xmlns* catId=ct_catId name=ct_name? (TAG_CLOSE2 | TAG_CLOSE
		//
		//Probability=mdef_ProbabilityType? TAG_OPEN2 "Category" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Category"
		public Keyword getCategoryKeyword_1() { return cCategoryKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//catId=ct_catId
		public Assignment getCatIdAssignment_3() { return cCatIdAssignment_3; }

		//ct_catId
		public RuleCall getCatIdCt_catIdParserRuleCall_3_0() { return cCatIdCt_catIdParserRuleCall_3_0; }

		//name=ct_name?
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ct_name
		public RuleCall getNameCt_nameParserRuleCall_4_0() { return cNameCt_nameParserRuleCall_4_0; }

		//TAG_CLOSE2 | TAG_CLOSE Probability=mdef_ProbabilityType? TAG_OPEN2 "Category" TAG_CLOSE
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_5_0() { return cTAG_CLOSE2ParserRuleCall_5_0; }

		//TAG_CLOSE Probability=mdef_ProbabilityType? TAG_OPEN2 "Category" TAG_CLOSE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_0() { return cTAG_CLOSEParserRuleCall_5_1_0; }

		//Probability=mdef_ProbabilityType?
		public Assignment getProbabilityAssignment_5_1_1() { return cProbabilityAssignment_5_1_1; }

		//mdef_ProbabilityType
		public RuleCall getProbabilityMdef_ProbabilityTypeParserRuleCall_5_1_1_0() { return cProbabilityMdef_ProbabilityTypeParserRuleCall_5_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_5_1_2() { return cTAG_OPEN2ParserRuleCall_5_1_2; }

		//"Category"
		public Keyword getCategoryKeyword_5_1_3() { return cCategoryKeyword_5_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_4() { return cTAG_CLOSEParserRuleCall_5_1_4; }
	}

	public class Mdef_ProbabilityTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_ProbabilityType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMdef_ProbabilityTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cProbabilityKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprCt_RhsParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cProbabilityKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//mdef_ProbabilityType:
		//
		//	{mdef_ProbabilityType} TAG_OPEN "Probability" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2
		//
		//	"Probability" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{mdef_ProbabilityType} TAG_OPEN "Probability" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2
		//
		//"Probability" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{mdef_ProbabilityType}
		public Action getMdef_ProbabilityTypeAction_0() { return cMdef_ProbabilityTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Probability"
		public Keyword getProbabilityKeyword_2() { return cProbabilityKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2 "Probability" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=ct_Rhs TAG_OPEN2 "Probability" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=ct_Rhs
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//ct_Rhs
		public RuleCall getExprCt_RhsParserRuleCall_4_1_1_0() { return cExprCt_RhsParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Probability"
		public Keyword getProbabilityKeyword_4_1_3() { return cProbabilityKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Mdef_ParameterRandomEffectTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_ParameterRandomEffectType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cRandomEffectKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cLevelIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLevelIdCt_levelIdParserRuleCall_3_0 = (RuleCall)cLevelIdAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameCt_nameParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Assignment cSymbIdAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSymbIdCt_symbIdParserRuleCall_5_0 = (RuleCall)cSymbIdAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_6_0 = (RuleCall)cAlternatives_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_0 = (RuleCall)cGroup_6_1.eContents().get(0);
		private final Assignment cDistributionAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cDistributionUncert_DistributionTypeParserRuleCall_6_1_1_0 = (RuleCall)cDistributionAssignment_6_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_6_1_2 = (RuleCall)cGroup_6_1.eContents().get(2);
		private final Keyword cRandomEffectKeyword_6_1_3 = (Keyword)cGroup_6_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_4 = (RuleCall)cGroup_6_1.eContents().get(4);
		
		//mdef_ParameterRandomEffectType:
		//
		//	TAG_OPEN "RandomEffect" xmlns+=XS_xmlns* levelId=ct_levelId name=ct_name? symbId=ct_symbId (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Distribution=uncert_DistributionType TAG_OPEN2 "RandomEffect" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "RandomEffect" xmlns+=XS_xmlns* levelId=ct_levelId name=ct_name? symbId=ct_symbId (TAG_CLOSE2 | TAG_CLOSE
		//
		//Distribution=uncert_DistributionType TAG_OPEN2 "RandomEffect" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"RandomEffect"
		public Keyword getRandomEffectKeyword_1() { return cRandomEffectKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//levelId=ct_levelId
		public Assignment getLevelIdAssignment_3() { return cLevelIdAssignment_3; }

		//ct_levelId
		public RuleCall getLevelIdCt_levelIdParserRuleCall_3_0() { return cLevelIdCt_levelIdParserRuleCall_3_0; }

		//name=ct_name?
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ct_name
		public RuleCall getNameCt_nameParserRuleCall_4_0() { return cNameCt_nameParserRuleCall_4_0; }

		//symbId=ct_symbId
		public Assignment getSymbIdAssignment_5() { return cSymbIdAssignment_5; }

		//ct_symbId
		public RuleCall getSymbIdCt_symbIdParserRuleCall_5_0() { return cSymbIdCt_symbIdParserRuleCall_5_0; }

		//TAG_CLOSE2 | TAG_CLOSE Distribution=uncert_DistributionType TAG_OPEN2 "RandomEffect" TAG_CLOSE
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_6_0() { return cTAG_CLOSE2ParserRuleCall_6_0; }

		//TAG_CLOSE Distribution=uncert_DistributionType TAG_OPEN2 "RandomEffect" TAG_CLOSE
		public Group getGroup_6_1() { return cGroup_6_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_0() { return cTAG_CLOSEParserRuleCall_6_1_0; }

		//Distribution=uncert_DistributionType
		public Assignment getDistributionAssignment_6_1_1() { return cDistributionAssignment_6_1_1; }

		//uncert_DistributionType
		public RuleCall getDistributionUncert_DistributionTypeParserRuleCall_6_1_1_0() { return cDistributionUncert_DistributionTypeParserRuleCall_6_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_6_1_2() { return cTAG_OPEN2ParserRuleCall_6_1_2; }

		//"RandomEffect"
		public Keyword getRandomEffectKeyword_6_1_3() { return cRandomEffectKeyword_6_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_4() { return cTAG_CLOSEParserRuleCall_6_1_4; }
	}

	public class Mdef_InitialConditionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mdef_InitialConditionType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cInitialConditionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cBlockAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBlockMath_blockParserRuleCall_3_0 = (RuleCall)cBlockAssignment_3.eContents().get(0);
		private final Assignment cSymbIDAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSymbIDMath_symbIdParserRuleCall_4_0 = (RuleCall)cSymbIDAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final Assignment cExprAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cExprCt_RhsParserRuleCall_5_1_1_0 = (RuleCall)cExprAssignment_5_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_5_1_2 = (RuleCall)cGroup_5_1.eContents().get(2);
		private final Keyword cInitialConditionKeyword_5_1_3 = (Keyword)cGroup_5_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_4 = (RuleCall)cGroup_5_1.eContents().get(4);
		
		//mdef_InitialConditionType:
		//
		//	TAG_OPEN "InitialCondition" xmlns+=XS_xmlns* block=Math_block? symbID=Math_symbId (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs
		//
		//	TAG_OPEN2 "InitialCondition" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "InitialCondition" xmlns+=XS_xmlns* block=Math_block? symbID=Math_symbId (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs
		//
		//TAG_OPEN2 "InitialCondition" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"InitialCondition"
		public Keyword getInitialConditionKeyword_1() { return cInitialConditionKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//block=Math_block?
		public Assignment getBlockAssignment_3() { return cBlockAssignment_3; }

		//Math_block
		public RuleCall getBlockMath_blockParserRuleCall_3_0() { return cBlockMath_blockParserRuleCall_3_0; }

		//symbID=Math_symbId
		public Assignment getSymbIDAssignment_4() { return cSymbIDAssignment_4; }

		//Math_symbId
		public RuleCall getSymbIDMath_symbIdParserRuleCall_4_0() { return cSymbIDMath_symbIdParserRuleCall_4_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2 "InitialCondition" TAG_CLOSE
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_5_0() { return cTAG_CLOSE2ParserRuleCall_5_0; }

		//TAG_CLOSE Expr=ct_Rhs TAG_OPEN2 "InitialCondition" TAG_CLOSE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_0() { return cTAG_CLOSEParserRuleCall_5_1_0; }

		//Expr=ct_Rhs
		public Assignment getExprAssignment_5_1_1() { return cExprAssignment_5_1_1; }

		//ct_Rhs
		public RuleCall getExprCt_RhsParserRuleCall_5_1_1_0() { return cExprCt_RhsParserRuleCall_5_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_5_1_2() { return cTAG_OPEN2ParserRuleCall_5_1_2; }

		//"InitialCondition"
		public Keyword getInitialConditionKeyword_5_1_3() { return cInitialConditionKeyword_5_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_4() { return cTAG_CLOSEParserRuleCall_5_1_4; }
	}

	public class Msteps_ModelingStepsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_ModelingSteps");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMsteps_ModelingStepsAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cModellingStepsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cVariableAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cVariableCt_VariableDefinitionTypeParserRuleCall_4_1_1_0 = (RuleCall)cVariableAssignment_4_1_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cExprMsteps_ModelingStepsContentParserRuleCall_4_1_2_0 = (RuleCall)cExprAssignment_4_1_2.eContents().get(0);
		private final Assignment cStepDependenciesAssignment_4_1_3 = (Assignment)cGroup_4_1.eContents().get(3);
		private final RuleCall cStepDependenciesMsteps_StepDependenciesTypeParserRuleCall_4_1_3_0 = (RuleCall)cStepDependenciesAssignment_4_1_3.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		private final Keyword cModellingStepsKeyword_4_1_5 = (Keyword)cGroup_4_1.eContents().get(5);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_6 = (RuleCall)cGroup_4_1.eContents().get(6);
		
		//// ***************************************************************************************************
		//
		//// ***Modelling steps***
		//
		//// ***************************************************************************************************
		//
		//msteps_ModelingSteps:
		//
		//	{msteps_ModelingSteps} TAG_OPEN "ModellingSteps" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Variable+=ct_VariableDefinitionType* Expr+=msteps_ModelingStepsContent* StepDependencies=msteps_StepDependenciesType
		//
		//	TAG_OPEN2 "ModellingSteps" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{msteps_ModelingSteps} TAG_OPEN "ModellingSteps" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//Variable+=ct_VariableDefinitionType* Expr+=msteps_ModelingStepsContent* StepDependencies=msteps_StepDependenciesType
		//
		//TAG_OPEN2 "ModellingSteps" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{msteps_ModelingSteps}
		public Action getMsteps_ModelingStepsAction_0() { return cMsteps_ModelingStepsAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"ModellingSteps"
		public Keyword getModellingStepsKeyword_2() { return cModellingStepsKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Variable+=ct_VariableDefinitionType* Expr+=msteps_ModelingStepsContent*
		//
		//StepDependencies=msteps_StepDependenciesType TAG_OPEN2 "ModellingSteps" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Variable+=ct_VariableDefinitionType* Expr+=msteps_ModelingStepsContent*
		//
		//StepDependencies=msteps_StepDependenciesType TAG_OPEN2 "ModellingSteps" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Variable+=ct_VariableDefinitionType*
		public Assignment getVariableAssignment_4_1_1() { return cVariableAssignment_4_1_1; }

		//ct_VariableDefinitionType
		public RuleCall getVariableCt_VariableDefinitionTypeParserRuleCall_4_1_1_0() { return cVariableCt_VariableDefinitionTypeParserRuleCall_4_1_1_0; }

		//Expr+=msteps_ModelingStepsContent*
		public Assignment getExprAssignment_4_1_2() { return cExprAssignment_4_1_2; }

		//msteps_ModelingStepsContent
		public RuleCall getExprMsteps_ModelingStepsContentParserRuleCall_4_1_2_0() { return cExprMsteps_ModelingStepsContentParserRuleCall_4_1_2_0; }

		//StepDependencies=msteps_StepDependenciesType
		public Assignment getStepDependenciesAssignment_4_1_3() { return cStepDependenciesAssignment_4_1_3; }

		//msteps_StepDependenciesType
		public RuleCall getStepDependenciesMsteps_StepDependenciesTypeParserRuleCall_4_1_3_0() { return cStepDependenciesMsteps_StepDependenciesTypeParserRuleCall_4_1_3_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_4() { return cTAG_OPEN2ParserRuleCall_4_1_4; }

		//"ModellingSteps"
		public Keyword getModellingStepsKeyword_4_1_5() { return cModellingStepsKeyword_4_1_5; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_6() { return cTAG_CLOSEParserRuleCall_4_1_6; }
	}

	public class Msteps_ModelingStepsContentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_ModelingStepsContent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cEstimationStepAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cEstimationStepMsteps_EstimationStepParserRuleCall_0_0 = (RuleCall)cEstimationStepAssignment_0.eContents().get(0);
		private final Assignment cSimulationStepAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cSimulationStepMsteps_SimulationStepParserRuleCall_1_0 = (RuleCall)cSimulationStepAssignment_1.eContents().get(0);
		
		//msteps_ModelingStepsContent:
		//
		//	EstimationStep=msteps_EstimationStep | SimulationStep=msteps_SimulationStep;
		public ParserRule getRule() { return rule; }

		//EstimationStep=msteps_EstimationStep | SimulationStep=msteps_SimulationStep
		public Alternatives getAlternatives() { return cAlternatives; }

		//EstimationStep=msteps_EstimationStep
		public Assignment getEstimationStepAssignment_0() { return cEstimationStepAssignment_0; }

		//msteps_EstimationStep
		public RuleCall getEstimationStepMsteps_EstimationStepParserRuleCall_0_0() { return cEstimationStepMsteps_EstimationStepParserRuleCall_0_0; }

		//SimulationStep=msteps_SimulationStep
		public Assignment getSimulationStepAssignment_1() { return cSimulationStepAssignment_1; }

		//msteps_SimulationStep
		public RuleCall getSimulationStepMsteps_SimulationStepParserRuleCall_1_0() { return cSimulationStepMsteps_SimulationStepParserRuleCall_1_0; }
	}

	public class Msteps_StepDependenciesTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_StepDependenciesType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMsteps_StepDependenciesTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cStepDependenciesKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cDescriptionCt_AnnotationTypeParserRuleCall_4_1_1_0 = (RuleCall)cDescriptionAssignment_4_1_1.eContents().get(0);
		private final Assignment cStepAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cStepMsteps_StepTypeParserRuleCall_4_1_2_0 = (RuleCall)cStepAssignment_4_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		private final Keyword cStepDependenciesKeyword_4_1_4 = (Keyword)cGroup_4_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_5 = (RuleCall)cGroup_4_1.eContents().get(5);
		
		//msteps_StepDependenciesType:
		//
		//	{msteps_StepDependenciesType} TAG_OPEN "StepDependencies" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Description=ct_AnnotationType? Step+=msteps_StepType+ TAG_OPEN2 "StepDependencies" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{msteps_StepDependenciesType} TAG_OPEN "StepDependencies" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//Description=ct_AnnotationType? Step+=msteps_StepType+ TAG_OPEN2 "StepDependencies" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{msteps_StepDependenciesType}
		public Action getMsteps_StepDependenciesTypeAction_0() { return cMsteps_StepDependenciesTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"StepDependencies"
		public Keyword getStepDependenciesKeyword_2() { return cStepDependenciesKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Description=ct_AnnotationType? Step+=msteps_StepType+ TAG_OPEN2 "StepDependencies" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Description=ct_AnnotationType? Step+=msteps_StepType+ TAG_OPEN2 "StepDependencies" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Description=ct_AnnotationType?
		public Assignment getDescriptionAssignment_4_1_1() { return cDescriptionAssignment_4_1_1; }

		//ct_AnnotationType
		public RuleCall getDescriptionCt_AnnotationTypeParserRuleCall_4_1_1_0() { return cDescriptionCt_AnnotationTypeParserRuleCall_4_1_1_0; }

		//Step+=msteps_StepType+
		public Assignment getStepAssignment_4_1_2() { return cStepAssignment_4_1_2; }

		//msteps_StepType
		public RuleCall getStepMsteps_StepTypeParserRuleCall_4_1_2_0() { return cStepMsteps_StepTypeParserRuleCall_4_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_3() { return cTAG_OPEN2ParserRuleCall_4_1_3; }

		//"StepDependencies"
		public Keyword getStepDependenciesKeyword_4_1_4() { return cStepDependenciesKeyword_4_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_5() { return cTAG_CLOSEParserRuleCall_4_1_5; }
	}

	public class Msteps_StepTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_StepType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cStepKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Keyword cIdRefKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cIdRefAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cIdRefXS_STRINGTerminalRuleCall_5_0 = (RuleCall)cIdRefAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_6_0 = (RuleCall)cAlternatives_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_0 = (RuleCall)cGroup_6_1.eContents().get(0);
		private final Assignment cDependantStepAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cDependantStepMsteps_DependantStepTypeParserRuleCall_6_1_1_0 = (RuleCall)cDependantStepAssignment_6_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_6_1_2 = (RuleCall)cGroup_6_1.eContents().get(2);
		private final Keyword cStepKeyword_6_1_3 = (Keyword)cGroup_6_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_4 = (RuleCall)cGroup_6_1.eContents().get(4);
		
		//msteps_StepType:
		//
		//	TAG_OPEN "Step" xmlns+=XS_xmlns* "idRef" "=" idRef=XS_STRING (TAG_CLOSE2 | TAG_CLOSE
		//
		//	DependantStep+=msteps_DependantStepType* TAG_OPEN2 "Step" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Step" xmlns+=XS_xmlns* "idRef" "=" idRef=XS_STRING (TAG_CLOSE2 | TAG_CLOSE
		//
		//DependantStep+=msteps_DependantStepType* TAG_OPEN2 "Step" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Step"
		public Keyword getStepKeyword_1() { return cStepKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//"idRef"
		public Keyword getIdRefKeyword_3() { return cIdRefKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//idRef=XS_STRING
		public Assignment getIdRefAssignment_5() { return cIdRefAssignment_5; }

		//XS_STRING
		public RuleCall getIdRefXS_STRINGTerminalRuleCall_5_0() { return cIdRefXS_STRINGTerminalRuleCall_5_0; }

		//TAG_CLOSE2 | TAG_CLOSE DependantStep+=msteps_DependantStepType* TAG_OPEN2 "Step" TAG_CLOSE
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_6_0() { return cTAG_CLOSE2ParserRuleCall_6_0; }

		//TAG_CLOSE DependantStep+=msteps_DependantStepType* TAG_OPEN2 "Step" TAG_CLOSE
		public Group getGroup_6_1() { return cGroup_6_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_0() { return cTAG_CLOSEParserRuleCall_6_1_0; }

		//DependantStep+=msteps_DependantStepType*
		public Assignment getDependantStepAssignment_6_1_1() { return cDependantStepAssignment_6_1_1; }

		//msteps_DependantStepType
		public RuleCall getDependantStepMsteps_DependantStepTypeParserRuleCall_6_1_1_0() { return cDependantStepMsteps_DependantStepTypeParserRuleCall_6_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_6_1_2() { return cTAG_OPEN2ParserRuleCall_6_1_2; }

		//"Step"
		public Keyword getStepKeyword_6_1_3() { return cStepKeyword_6_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_4() { return cTAG_CLOSEParserRuleCall_6_1_4; }
	}

	public class Msteps_DependantStepTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_DependantStepType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDependantStepKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Keyword cIdRefKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cIdRefAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cIdRefCt_BlockNameTypeParserRuleCall_5_0 = (RuleCall)cIdRefAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_6_0 = (RuleCall)cAlternatives_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_0 = (RuleCall)cGroup_6_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_6_1_1 = (RuleCall)cGroup_6_1.eContents().get(1);
		private final Keyword cDependantStepKeyword_6_1_2 = (Keyword)cGroup_6_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_3 = (RuleCall)cGroup_6_1.eContents().get(3);
		
		//msteps_DependantStepType:
		//
		//	TAG_OPEN "DependantStep" xmlns+=XS_xmlns* "idRef" "=" idRef=ct_BlockNameType (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//	"DependantStep" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "DependantStep" xmlns+=XS_xmlns* "idRef" "=" idRef=ct_BlockNameType (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//"DependantStep" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"DependantStep"
		public Keyword getDependantStepKeyword_1() { return cDependantStepKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//"idRef"
		public Keyword getIdRefKeyword_3() { return cIdRefKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//idRef=ct_BlockNameType
		public Assignment getIdRefAssignment_5() { return cIdRefAssignment_5; }

		//ct_BlockNameType
		public RuleCall getIdRefCt_BlockNameTypeParserRuleCall_5_0() { return cIdRefCt_BlockNameTypeParserRuleCall_5_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "DependantStep" TAG_CLOSE
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_6_0() { return cTAG_CLOSE2ParserRuleCall_6_0; }

		//TAG_CLOSE TAG_OPEN2 "DependantStep" TAG_CLOSE
		public Group getGroup_6_1() { return cGroup_6_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_0() { return cTAG_CLOSEParserRuleCall_6_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_6_1_1() { return cTAG_OPEN2ParserRuleCall_6_1_1; }

		//"DependantStep"
		public Keyword getDependantStepKeyword_6_1_2() { return cDependantStepKeyword_6_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_3() { return cTAG_CLOSEParserRuleCall_6_1_3; }
	}

	public class Msteps_EstimationStepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_EstimationStep");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cEstimationStepKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdCt_idParserRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cDescriptionCt_AnnotationTypeParserRuleCall_4_1_1_0 = (RuleCall)cDescriptionAssignment_4_1_1.eContents().get(0);
		private final Assignment cInitialValueAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cInitialValueMsteps_InitialValueTypeParserRuleCall_4_1_2_0 = (RuleCall)cInitialValueAssignment_4_1_2.eContents().get(0);
		private final Assignment cObjectiveDataSetAssignment_4_1_3 = (Assignment)cGroup_4_1.eContents().get(3);
		private final RuleCall cObjectiveDataSetMsteps_ObjectiveDataSetTypeParserRuleCall_4_1_3_0 = (RuleCall)cObjectiveDataSetAssignment_4_1_3.eContents().get(0);
		private final Assignment cParametersToEstimateAssignment_4_1_4 = (Assignment)cGroup_4_1.eContents().get(4);
		private final RuleCall cParametersToEstimateMsteps_ParametersToEstimateTypeParserRuleCall_4_1_4_0 = (RuleCall)cParametersToEstimateAssignment_4_1_4.eContents().get(0);
		private final Assignment cEstimationOperationAssignment_4_1_5 = (Assignment)cGroup_4_1.eContents().get(5);
		private final RuleCall cEstimationOperationMsteps_EstimationOperationTypeParserRuleCall_4_1_5_0 = (RuleCall)cEstimationOperationAssignment_4_1_5.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_6 = (RuleCall)cGroup_4_1.eContents().get(6);
		private final Keyword cEstimationStepKeyword_4_1_7 = (Keyword)cGroup_4_1.eContents().get(7);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_8 = (RuleCall)cGroup_4_1.eContents().get(8);
		
		//msteps_EstimationStep:
		//
		//	TAG_OPEN "EstimationStep" xmlns+=XS_xmlns* id=ct_id (TAG_CLOSE2 | TAG_CLOSE Description=ct_AnnotationType?
		//
		//	InitialValue+=msteps_InitialValueType* ObjectiveDataSet=msteps_ObjectiveDataSetType
		//
		//	ParametersToEstimate=msteps_ParametersToEstimateType EstimationOperation+=msteps_EstimationOperationType+ TAG_OPEN2
		//
		//	"EstimationStep" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "EstimationStep" xmlns+=XS_xmlns* id=ct_id (TAG_CLOSE2 | TAG_CLOSE Description=ct_AnnotationType?
		//
		//InitialValue+=msteps_InitialValueType* ObjectiveDataSet=msteps_ObjectiveDataSetType
		//
		//ParametersToEstimate=msteps_ParametersToEstimateType EstimationOperation+=msteps_EstimationOperationType+ TAG_OPEN2
		//
		//"EstimationStep" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"EstimationStep"
		public Keyword getEstimationStepKeyword_1() { return cEstimationStepKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//id=ct_id
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }

		//ct_id
		public RuleCall getIdCt_idParserRuleCall_3_0() { return cIdCt_idParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Description=ct_AnnotationType? InitialValue+=msteps_InitialValueType*
		//
		//ObjectiveDataSet=msteps_ObjectiveDataSetType ParametersToEstimate=msteps_ParametersToEstimateType
		//
		//EstimationOperation+=msteps_EstimationOperationType+ TAG_OPEN2 "EstimationStep" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Description=ct_AnnotationType? InitialValue+=msteps_InitialValueType*
		//
		//ObjectiveDataSet=msteps_ObjectiveDataSetType ParametersToEstimate=msteps_ParametersToEstimateType
		//
		//EstimationOperation+=msteps_EstimationOperationType+ TAG_OPEN2 "EstimationStep" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Description=ct_AnnotationType?
		public Assignment getDescriptionAssignment_4_1_1() { return cDescriptionAssignment_4_1_1; }

		//ct_AnnotationType
		public RuleCall getDescriptionCt_AnnotationTypeParserRuleCall_4_1_1_0() { return cDescriptionCt_AnnotationTypeParserRuleCall_4_1_1_0; }

		//InitialValue+=msteps_InitialValueType*
		public Assignment getInitialValueAssignment_4_1_2() { return cInitialValueAssignment_4_1_2; }

		//msteps_InitialValueType
		public RuleCall getInitialValueMsteps_InitialValueTypeParserRuleCall_4_1_2_0() { return cInitialValueMsteps_InitialValueTypeParserRuleCall_4_1_2_0; }

		//ObjectiveDataSet=msteps_ObjectiveDataSetType
		public Assignment getObjectiveDataSetAssignment_4_1_3() { return cObjectiveDataSetAssignment_4_1_3; }

		//msteps_ObjectiveDataSetType
		public RuleCall getObjectiveDataSetMsteps_ObjectiveDataSetTypeParserRuleCall_4_1_3_0() { return cObjectiveDataSetMsteps_ObjectiveDataSetTypeParserRuleCall_4_1_3_0; }

		//ParametersToEstimate=msteps_ParametersToEstimateType
		public Assignment getParametersToEstimateAssignment_4_1_4() { return cParametersToEstimateAssignment_4_1_4; }

		//msteps_ParametersToEstimateType
		public RuleCall getParametersToEstimateMsteps_ParametersToEstimateTypeParserRuleCall_4_1_4_0() { return cParametersToEstimateMsteps_ParametersToEstimateTypeParserRuleCall_4_1_4_0; }

		//EstimationOperation+=msteps_EstimationOperationType+
		public Assignment getEstimationOperationAssignment_4_1_5() { return cEstimationOperationAssignment_4_1_5; }

		//msteps_EstimationOperationType
		public RuleCall getEstimationOperationMsteps_EstimationOperationTypeParserRuleCall_4_1_5_0() { return cEstimationOperationMsteps_EstimationOperationTypeParserRuleCall_4_1_5_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_6() { return cTAG_OPEN2ParserRuleCall_4_1_6; }

		//"EstimationStep"
		public Keyword getEstimationStepKeyword_4_1_7() { return cEstimationStepKeyword_4_1_7; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_8() { return cTAG_CLOSEParserRuleCall_4_1_8; }
	}

	public class Msteps_ParametersToEstimateTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_ParametersToEstimateType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMsteps_ParametersToEstimateTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cParametersToEstimateKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cVariableAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cVariableMSteps_VariableEstimateTypeParserRuleCall_4_1_1_0 = (RuleCall)cVariableAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cParametersToEstimateKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//msteps_ParametersToEstimateType:
		//
		//	{msteps_ParametersToEstimateType} TAG_OPEN "ParametersToEstimate" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Variable+=mSteps_VariableEstimateType* TAG_OPEN2 "ParametersToEstimate" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{msteps_ParametersToEstimateType} TAG_OPEN "ParametersToEstimate" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//Variable+=mSteps_VariableEstimateType* TAG_OPEN2 "ParametersToEstimate" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{msteps_ParametersToEstimateType}
		public Action getMsteps_ParametersToEstimateTypeAction_0() { return cMsteps_ParametersToEstimateTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"ParametersToEstimate"
		public Keyword getParametersToEstimateKeyword_2() { return cParametersToEstimateKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Variable+=mSteps_VariableEstimateType* TAG_OPEN2 "ParametersToEstimate" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Variable+=mSteps_VariableEstimateType* TAG_OPEN2 "ParametersToEstimate" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Variable+=mSteps_VariableEstimateType*
		public Assignment getVariableAssignment_4_1_1() { return cVariableAssignment_4_1_1; }

		//mSteps_VariableEstimateType
		public RuleCall getVariableMSteps_VariableEstimateTypeParserRuleCall_4_1_1_0() { return cVariableMSteps_VariableEstimateTypeParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"ParametersToEstimate"
		public Keyword getParametersToEstimateKeyword_4_1_3() { return cParametersToEstimateKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class MSteps_VariableEstimateTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mSteps_VariableEstimateType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cVariableKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Assignment cBlockAssignment_3_0 = (Assignment)cUnorderedGroup_3.eContents().get(0);
		private final RuleCall cBlockMath_blockParserRuleCall_3_0_0 = (RuleCall)cBlockAssignment_3_0.eContents().get(0);
		private final Assignment cFixedAssignment_3_1 = (Assignment)cUnorderedGroup_3.eContents().get(1);
		private final RuleCall cFixedMSteps_fixedParserRuleCall_3_1_0 = (RuleCall)cFixedAssignment_3_1.eContents().get(0);
		private final Assignment cSymbIDAssignment_3_2 = (Assignment)cUnorderedGroup_3.eContents().get(2);
		private final RuleCall cSymbIDMath_symbIdParserRuleCall_3_2_0 = (RuleCall)cSymbIDAssignment_3_2.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cInitialEstimateAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cInitialEstimateMSteps_InitialEstimateTypeParserRuleCall_4_1_1_0 = (RuleCall)cInitialEstimateAssignment_4_1_1.eContents().get(0);
		private final Assignment cLowerBoundAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cLowerBoundMSteps_LowerBoundTypeParserRuleCall_4_1_2_0 = (RuleCall)cLowerBoundAssignment_4_1_2.eContents().get(0);
		private final Assignment cUpperBoundAssignment_4_1_3 = (Assignment)cGroup_4_1.eContents().get(3);
		private final RuleCall cUpperBoundMSteps_UpperBoundTypeParserRuleCall_4_1_3_0 = (RuleCall)cUpperBoundAssignment_4_1_3.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		private final Keyword cVariableKeyword_4_1_5 = (Keyword)cGroup_4_1.eContents().get(5);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_6 = (RuleCall)cGroup_4_1.eContents().get(6);
		
		//mSteps_VariableEstimateType:
		//
		//	TAG_OPEN "Variable" xmlns+=XS_xmlns* (block=Math_block? & fixed=mSteps_fixed & symbID=Math_symbId) (TAG_CLOSE2 |
		//
		//	TAG_CLOSE InitialEstimate=mSteps_InitialEstimateType? LowerBound=mSteps_LowerBoundType?
		//
		//	UpperBound=mSteps_UpperBoundType? TAG_OPEN2 "Variable" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Variable" xmlns+=XS_xmlns* (block=Math_block? & fixed=mSteps_fixed & symbID=Math_symbId) (TAG_CLOSE2 |
		//
		//TAG_CLOSE InitialEstimate=mSteps_InitialEstimateType? LowerBound=mSteps_LowerBoundType?
		//
		//UpperBound=mSteps_UpperBoundType? TAG_OPEN2 "Variable" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Variable"
		public Keyword getVariableKeyword_1() { return cVariableKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//block=Math_block? & fixed=mSteps_fixed & symbID=Math_symbId
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }

		//block=Math_block?
		public Assignment getBlockAssignment_3_0() { return cBlockAssignment_3_0; }

		//Math_block
		public RuleCall getBlockMath_blockParserRuleCall_3_0_0() { return cBlockMath_blockParserRuleCall_3_0_0; }

		//fixed=mSteps_fixed
		public Assignment getFixedAssignment_3_1() { return cFixedAssignment_3_1; }

		//mSteps_fixed
		public RuleCall getFixedMSteps_fixedParserRuleCall_3_1_0() { return cFixedMSteps_fixedParserRuleCall_3_1_0; }

		//symbID=Math_symbId
		public Assignment getSymbIDAssignment_3_2() { return cSymbIDAssignment_3_2; }

		//Math_symbId
		public RuleCall getSymbIDMath_symbIdParserRuleCall_3_2_0() { return cSymbIDMath_symbIdParserRuleCall_3_2_0; }

		//TAG_CLOSE2 | TAG_CLOSE InitialEstimate=mSteps_InitialEstimateType? LowerBound=mSteps_LowerBoundType?
		//
		//UpperBound=mSteps_UpperBoundType? TAG_OPEN2 "Variable" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE InitialEstimate=mSteps_InitialEstimateType? LowerBound=mSteps_LowerBoundType?
		//
		//UpperBound=mSteps_UpperBoundType? TAG_OPEN2 "Variable" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//InitialEstimate=mSteps_InitialEstimateType?
		public Assignment getInitialEstimateAssignment_4_1_1() { return cInitialEstimateAssignment_4_1_1; }

		//mSteps_InitialEstimateType
		public RuleCall getInitialEstimateMSteps_InitialEstimateTypeParserRuleCall_4_1_1_0() { return cInitialEstimateMSteps_InitialEstimateTypeParserRuleCall_4_1_1_0; }

		//LowerBound=mSteps_LowerBoundType?
		public Assignment getLowerBoundAssignment_4_1_2() { return cLowerBoundAssignment_4_1_2; }

		//mSteps_LowerBoundType
		public RuleCall getLowerBoundMSteps_LowerBoundTypeParserRuleCall_4_1_2_0() { return cLowerBoundMSteps_LowerBoundTypeParserRuleCall_4_1_2_0; }

		//UpperBound=mSteps_UpperBoundType?
		public Assignment getUpperBoundAssignment_4_1_3() { return cUpperBoundAssignment_4_1_3; }

		//mSteps_UpperBoundType
		public RuleCall getUpperBoundMSteps_UpperBoundTypeParserRuleCall_4_1_3_0() { return cUpperBoundMSteps_UpperBoundTypeParserRuleCall_4_1_3_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_4() { return cTAG_OPEN2ParserRuleCall_4_1_4; }

		//"Variable"
		public Keyword getVariableKeyword_4_1_5() { return cVariableKeyword_4_1_5; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_6() { return cTAG_CLOSEParserRuleCall_4_1_6; }
	}

	public class MSteps_fixedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mSteps_fixed");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFixedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cFixedAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Alternatives cFixedAlternatives_2_0 = (Alternatives)cFixedAssignment_2.eContents().get(0);
		private final RuleCall cFixedMath_TRUEParserRuleCall_2_0_0 = (RuleCall)cFixedAlternatives_2_0.eContents().get(0);
		private final RuleCall cFixedMath_FALSEParserRuleCall_2_0_1 = (RuleCall)cFixedAlternatives_2_0.eContents().get(1);
		
		//mSteps_fixed:
		//
		//	"fixed" "=" fixed=(Math_TRUE | Math_FALSE);
		public ParserRule getRule() { return rule; }

		//"fixed" "=" fixed=(Math_TRUE | Math_FALSE)
		public Group getGroup() { return cGroup; }

		//"fixed"
		public Keyword getFixedKeyword_0() { return cFixedKeyword_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//fixed=(Math_TRUE | Math_FALSE)
		public Assignment getFixedAssignment_2() { return cFixedAssignment_2; }

		//Math_TRUE | Math_FALSE
		public Alternatives getFixedAlternatives_2_0() { return cFixedAlternatives_2_0; }

		//Math_TRUE
		public RuleCall getFixedMath_TRUEParserRuleCall_2_0_0() { return cFixedMath_TRUEParserRuleCall_2_0_0; }

		//Math_FALSE
		public RuleCall getFixedMath_FALSEParserRuleCall_2_0_1() { return cFixedMath_FALSEParserRuleCall_2_0_1; }
	}

	public class MSteps_UpperBoundTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mSteps_UpperBoundType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMSteps_UpperBoundTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cUpperBoundKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprCt_ScalarRhsParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cUpperBoundKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//mSteps_UpperBoundType:
		//
		//	{mSteps_UpperBoundType} TAG_OPEN "UpperBound" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2
		//
		//	"UpperBound" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{mSteps_UpperBoundType} TAG_OPEN "UpperBound" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2
		//
		//"UpperBound" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{mSteps_UpperBoundType}
		public Action getMSteps_UpperBoundTypeAction_0() { return cMSteps_UpperBoundTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"UpperBound"
		public Keyword getUpperBoundKeyword_2() { return cUpperBoundKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "UpperBound" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "UpperBound" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=ct_ScalarRhs
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//ct_ScalarRhs
		public RuleCall getExprCt_ScalarRhsParserRuleCall_4_1_1_0() { return cExprCt_ScalarRhsParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"UpperBound"
		public Keyword getUpperBoundKeyword_4_1_3() { return cUpperBoundKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class MSteps_LowerBoundTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mSteps_LowerBoundType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMSteps_LowerBoundTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cLowerBoundKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprCt_ScalarRhsParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cLowerBoundKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//mSteps_LowerBoundType:
		//
		//	{mSteps_LowerBoundType} TAG_OPEN "LowerBound" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2
		//
		//	"LowerBound" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{mSteps_LowerBoundType} TAG_OPEN "LowerBound" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2
		//
		//"LowerBound" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{mSteps_LowerBoundType}
		public Action getMSteps_LowerBoundTypeAction_0() { return cMSteps_LowerBoundTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"LowerBound"
		public Keyword getLowerBoundKeyword_2() { return cLowerBoundKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "LowerBound" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "LowerBound" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=ct_ScalarRhs
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//ct_ScalarRhs
		public RuleCall getExprCt_ScalarRhsParserRuleCall_4_1_1_0() { return cExprCt_ScalarRhsParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"LowerBound"
		public Keyword getLowerBoundKeyword_4_1_3() { return cLowerBoundKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class MSteps_InitialEstimateTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "mSteps_InitialEstimateType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMSteps_InitialEstimateTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cInitialEstimateKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprCt_ScalarRhsParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cInitialEstimateKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//mSteps_InitialEstimateType:
		//
		//	{mSteps_InitialEstimateType} TAG_OPEN "InitialEstimate" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs
		//
		//	TAG_OPEN2 "InitialEstimate" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{mSteps_InitialEstimateType} TAG_OPEN "InitialEstimate" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs
		//
		//TAG_OPEN2 "InitialEstimate" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{mSteps_InitialEstimateType}
		public Action getMSteps_InitialEstimateTypeAction_0() { return cMSteps_InitialEstimateTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"InitialEstimate"
		public Keyword getInitialEstimateKeyword_2() { return cInitialEstimateKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "InitialEstimate" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "InitialEstimate" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=ct_ScalarRhs
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//ct_ScalarRhs
		public RuleCall getExprCt_ScalarRhsParserRuleCall_4_1_1_0() { return cExprCt_ScalarRhsParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"InitialEstimate"
		public Keyword getInitialEstimateKeyword_4_1_3() { return cInitialEstimateKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Msteps_ObjectiveDataSetTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_ObjectiveDataSetType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cObjectiveDataSetKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Keyword cDataSetRefKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDataSetRefAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDataSetRefCt_SymbolNameTypeParserRuleCall_5_0 = (RuleCall)cDataSetRefAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_6_0 = (RuleCall)cAlternatives_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_0 = (RuleCall)cGroup_6_1.eContents().get(0);
		private final Assignment cMappingAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cMappingMsteps_ColumnMappingTypeParserRuleCall_6_1_1_0 = (RuleCall)cMappingAssignment_6_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_6_1_2 = (RuleCall)cGroup_6_1.eContents().get(2);
		private final Keyword cObjectiveDataSetKeyword_6_1_3 = (Keyword)cGroup_6_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_4 = (RuleCall)cGroup_6_1.eContents().get(4);
		
		//msteps_ObjectiveDataSetType:
		//
		//	TAG_OPEN "ObjectiveDataSet" xmlns+=XS_xmlns* "dataSetRef" "=" dataSetRef=ct_SymbolNameType (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Mapping+=msteps_ColumnMappingType+ TAG_OPEN2 "ObjectiveDataSet" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "ObjectiveDataSet" xmlns+=XS_xmlns* "dataSetRef" "=" dataSetRef=ct_SymbolNameType (TAG_CLOSE2 | TAG_CLOSE
		//
		//Mapping+=msteps_ColumnMappingType+ TAG_OPEN2 "ObjectiveDataSet" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"ObjectiveDataSet"
		public Keyword getObjectiveDataSetKeyword_1() { return cObjectiveDataSetKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//"dataSetRef"
		public Keyword getDataSetRefKeyword_3() { return cDataSetRefKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//dataSetRef=ct_SymbolNameType
		public Assignment getDataSetRefAssignment_5() { return cDataSetRefAssignment_5; }

		//ct_SymbolNameType
		public RuleCall getDataSetRefCt_SymbolNameTypeParserRuleCall_5_0() { return cDataSetRefCt_SymbolNameTypeParserRuleCall_5_0; }

		//TAG_CLOSE2 | TAG_CLOSE Mapping+=msteps_ColumnMappingType+ TAG_OPEN2 "ObjectiveDataSet" TAG_CLOSE
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_6_0() { return cTAG_CLOSE2ParserRuleCall_6_0; }

		//TAG_CLOSE Mapping+=msteps_ColumnMappingType+ TAG_OPEN2 "ObjectiveDataSet" TAG_CLOSE
		public Group getGroup_6_1() { return cGroup_6_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_0() { return cTAG_CLOSEParserRuleCall_6_1_0; }

		//Mapping+=msteps_ColumnMappingType+
		public Assignment getMappingAssignment_6_1_1() { return cMappingAssignment_6_1_1; }

		//msteps_ColumnMappingType
		public RuleCall getMappingMsteps_ColumnMappingTypeParserRuleCall_6_1_1_0() { return cMappingMsteps_ColumnMappingTypeParserRuleCall_6_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_6_1_2() { return cTAG_OPEN2ParserRuleCall_6_1_2; }

		//"ObjectiveDataSet"
		public Keyword getObjectiveDataSetKeyword_6_1_3() { return cObjectiveDataSetKeyword_6_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_4() { return cTAG_CLOSEParserRuleCall_6_1_4; }
	}

	public class Msteps_ColumnMappingTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_ColumnMappingType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cMappingKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Keyword cColumnNameKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cColumnnameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cColumnnameCt_SymbolNameTypeParserRuleCall_5_0 = (RuleCall)cColumnnameAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_6_0 = (RuleCall)cAlternatives_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_0 = (RuleCall)cGroup_6_1.eContents().get(0);
		private final Assignment cExprAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cExprMsteps_ColumnMappingTypeContentParserRuleCall_6_1_1_0 = (RuleCall)cExprAssignment_6_1_1.eContents().get(0);
		private final Assignment cRestrictionAssignment_6_1_2 = (Assignment)cGroup_6_1.eContents().get(2);
		private final RuleCall cRestrictionCt_RestrictionTypeParserRuleCall_6_1_2_0 = (RuleCall)cRestrictionAssignment_6_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_6_1_3 = (RuleCall)cGroup_6_1.eContents().get(3);
		private final Keyword cMappingKeyword_6_1_4 = (Keyword)cGroup_6_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_5 = (RuleCall)cGroup_6_1.eContents().get(5);
		
		//msteps_ColumnMappingType:
		//
		//	TAG_OPEN "Mapping" xmlns+=XS_xmlns* "columnName" "=" columnname=ct_SymbolNameType (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Expr+=msteps_ColumnMappingTypeContent* Restriction=ct_RestrictionType? TAG_OPEN2 "Mapping" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Mapping" xmlns+=XS_xmlns* "columnName" "=" columnname=ct_SymbolNameType (TAG_CLOSE2 | TAG_CLOSE
		//
		//Expr+=msteps_ColumnMappingTypeContent* Restriction=ct_RestrictionType? TAG_OPEN2 "Mapping" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Mapping"
		public Keyword getMappingKeyword_1() { return cMappingKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//"columnName"
		public Keyword getColumnNameKeyword_3() { return cColumnNameKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//columnname=ct_SymbolNameType
		public Assignment getColumnnameAssignment_5() { return cColumnnameAssignment_5; }

		//ct_SymbolNameType
		public RuleCall getColumnnameCt_SymbolNameTypeParserRuleCall_5_0() { return cColumnnameCt_SymbolNameTypeParserRuleCall_5_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr+=msteps_ColumnMappingTypeContent* Restriction=ct_RestrictionType? TAG_OPEN2 "Mapping"
		//
		//TAG_CLOSE
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_6_0() { return cTAG_CLOSE2ParserRuleCall_6_0; }

		//TAG_CLOSE Expr+=msteps_ColumnMappingTypeContent* Restriction=ct_RestrictionType? TAG_OPEN2 "Mapping" TAG_CLOSE
		public Group getGroup_6_1() { return cGroup_6_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_0() { return cTAG_CLOSEParserRuleCall_6_1_0; }

		//Expr+=msteps_ColumnMappingTypeContent*
		public Assignment getExprAssignment_6_1_1() { return cExprAssignment_6_1_1; }

		//msteps_ColumnMappingTypeContent
		public RuleCall getExprMsteps_ColumnMappingTypeContentParserRuleCall_6_1_1_0() { return cExprMsteps_ColumnMappingTypeContentParserRuleCall_6_1_1_0; }

		//Restriction=ct_RestrictionType?
		public Assignment getRestrictionAssignment_6_1_2() { return cRestrictionAssignment_6_1_2; }

		//ct_RestrictionType
		public RuleCall getRestrictionCt_RestrictionTypeParserRuleCall_6_1_2_0() { return cRestrictionCt_RestrictionTypeParserRuleCall_6_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_6_1_3() { return cTAG_OPEN2ParserRuleCall_6_1_3; }

		//"Mapping"
		public Keyword getMappingKeyword_6_1_4() { return cMappingKeyword_6_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_5() { return cTAG_CLOSEParserRuleCall_6_1_5; }
	}

	public class Msteps_ColumnMappingTypeContentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_ColumnMappingTypeContent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cVarAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cVarMath_VarTypeParserRuleCall_0_0 = (RuleCall)cVarAssignment_0.eContents().get(0);
		private final Assignment cUseVariabilityLevelAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cUseVariabilityLevelMsteps_UseVariabilityLevelParserRuleCall_1_0 = (RuleCall)cUseVariabilityLevelAssignment_1.eContents().get(0);
		private final Assignment cUseVariabilityNodeAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cUseVariabilityNodeMsteps_UseVariabilityNodeParserRuleCall_2_0 = (RuleCall)cUseVariabilityNodeAssignment_2.eContents().get(0);
		private final Assignment cDoseVarAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cDoseVarDesign_DoseVarTypeParserRuleCall_3_0 = (RuleCall)cDoseVarAssignment_3.eContents().get(0);
		private final Assignment cTargetVarAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cTargetVarMsteps_TargetVarTypeParserRuleCall_4_0 = (RuleCall)cTargetVarAssignment_4.eContents().get(0);
		private final Assignment cAssignAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cAssignMsteps_AssignTypeParserRuleCall_5_0 = (RuleCall)cAssignAssignment_5.eContents().get(0);
		private final Assignment cOutputAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final RuleCall cOutputMsteps_OutputTypeParserRuleCall_6_0 = (RuleCall)cOutputAssignment_6.eContents().get(0);
		
		//msteps_ColumnMappingTypeContent:
		//
		//	Var=Math_VarType | UseVariabilityLevel=msteps_UseVariabilityLevel | UseVariabilityNode=msteps_UseVariabilityNode |
		//
		//	DoseVar=design_DoseVarType | TargetVar=msteps_TargetVarType | Assign=msteps_AssignType | Output=msteps_OutputType;
		public ParserRule getRule() { return rule; }

		//Var=Math_VarType | UseVariabilityLevel=msteps_UseVariabilityLevel | UseVariabilityNode=msteps_UseVariabilityNode |
		//
		//DoseVar=design_DoseVarType | TargetVar=msteps_TargetVarType | Assign=msteps_AssignType | Output=msteps_OutputType
		public Alternatives getAlternatives() { return cAlternatives; }

		//Var=Math_VarType
		public Assignment getVarAssignment_0() { return cVarAssignment_0; }

		//Math_VarType
		public RuleCall getVarMath_VarTypeParserRuleCall_0_0() { return cVarMath_VarTypeParserRuleCall_0_0; }

		//UseVariabilityLevel=msteps_UseVariabilityLevel
		public Assignment getUseVariabilityLevelAssignment_1() { return cUseVariabilityLevelAssignment_1; }

		//msteps_UseVariabilityLevel
		public RuleCall getUseVariabilityLevelMsteps_UseVariabilityLevelParserRuleCall_1_0() { return cUseVariabilityLevelMsteps_UseVariabilityLevelParserRuleCall_1_0; }

		//UseVariabilityNode=msteps_UseVariabilityNode
		public Assignment getUseVariabilityNodeAssignment_2() { return cUseVariabilityNodeAssignment_2; }

		//msteps_UseVariabilityNode
		public RuleCall getUseVariabilityNodeMsteps_UseVariabilityNodeParserRuleCall_2_0() { return cUseVariabilityNodeMsteps_UseVariabilityNodeParserRuleCall_2_0; }

		//DoseVar=design_DoseVarType
		public Assignment getDoseVarAssignment_3() { return cDoseVarAssignment_3; }

		//design_DoseVarType
		public RuleCall getDoseVarDesign_DoseVarTypeParserRuleCall_3_0() { return cDoseVarDesign_DoseVarTypeParserRuleCall_3_0; }

		//TargetVar=msteps_TargetVarType
		public Assignment getTargetVarAssignment_4() { return cTargetVarAssignment_4; }

		//msteps_TargetVarType
		public RuleCall getTargetVarMsteps_TargetVarTypeParserRuleCall_4_0() { return cTargetVarMsteps_TargetVarTypeParserRuleCall_4_0; }

		//Assign=msteps_AssignType
		public Assignment getAssignAssignment_5() { return cAssignAssignment_5; }

		//msteps_AssignType
		public RuleCall getAssignMsteps_AssignTypeParserRuleCall_5_0() { return cAssignMsteps_AssignTypeParserRuleCall_5_0; }

		//Output=msteps_OutputType
		public Assignment getOutputAssignment_6() { return cOutputAssignment_6; }

		//msteps_OutputType
		public RuleCall getOutputMsteps_OutputTypeParserRuleCall_6_0() { return cOutputMsteps_OutputTypeParserRuleCall_6_0; }
	}

	public class Msteps_OutputTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_OutputType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMsteps_OutputTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cOutputKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cVarsAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cVarsMath_VarTypeParserRuleCall_4_1_1_0 = (RuleCall)cVarsAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cOutputKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//msteps_OutputType:
		//
		//	{msteps_OutputType} TAG_OPEN "Output" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Vars=Math_VarType TAG_OPEN2 "Output"
		//
		//	TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{msteps_OutputType} TAG_OPEN "Output" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Vars=Math_VarType TAG_OPEN2 "Output"
		//
		//TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{msteps_OutputType}
		public Action getMsteps_OutputTypeAction_0() { return cMsteps_OutputTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Output"
		public Keyword getOutputKeyword_2() { return cOutputKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Vars=Math_VarType TAG_OPEN2 "Output" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Vars=Math_VarType TAG_OPEN2 "Output" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Vars=Math_VarType
		public Assignment getVarsAssignment_4_1_1() { return cVarsAssignment_4_1_1; }

		//Math_VarType
		public RuleCall getVarsMath_VarTypeParserRuleCall_4_1_1_0() { return cVarsMath_VarTypeParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Output"
		public Keyword getOutputKeyword_4_1_3() { return cOutputKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Msteps_AssignTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_AssignType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cAssignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cBlockAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBlockMath_blockParserRuleCall_3_0 = (RuleCall)cBlockAssignment_3.eContents().get(0);
		private final Assignment cSymbIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSymbIdMath_symbIdParserRuleCall_4_0 = (RuleCall)cSymbIdAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final Assignment cExprAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cExprCt_RhsParserRuleCall_5_1_1_0 = (RuleCall)cExprAssignment_5_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_5_1_2 = (RuleCall)cGroup_5_1.eContents().get(2);
		private final Keyword cAssignKeyword_5_1_3 = (Keyword)cGroup_5_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_4 = (RuleCall)cGroup_5_1.eContents().get(4);
		
		//msteps_AssignType:
		//
		//	TAG_OPEN "Assign" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2
		//
		//	"Assign" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Assign" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2
		//
		//"Assign" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Assign"
		public Keyword getAssignKeyword_1() { return cAssignKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//block=Math_block?
		public Assignment getBlockAssignment_3() { return cBlockAssignment_3; }

		//Math_block
		public RuleCall getBlockMath_blockParserRuleCall_3_0() { return cBlockMath_blockParserRuleCall_3_0; }

		//symbId=Math_symbId
		public Assignment getSymbIdAssignment_4() { return cSymbIdAssignment_4; }

		//Math_symbId
		public RuleCall getSymbIdMath_symbIdParserRuleCall_4_0() { return cSymbIdMath_symbIdParserRuleCall_4_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2 "Assign" TAG_CLOSE
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_5_0() { return cTAG_CLOSE2ParserRuleCall_5_0; }

		//TAG_CLOSE Expr=ct_Rhs TAG_OPEN2 "Assign" TAG_CLOSE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_0() { return cTAG_CLOSEParserRuleCall_5_1_0; }

		//Expr=ct_Rhs
		public Assignment getExprAssignment_5_1_1() { return cExprAssignment_5_1_1; }

		//ct_Rhs
		public RuleCall getExprCt_RhsParserRuleCall_5_1_1_0() { return cExprCt_RhsParserRuleCall_5_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_5_1_2() { return cTAG_OPEN2ParserRuleCall_5_1_2; }

		//"Assign"
		public Keyword getAssignKeyword_5_1_3() { return cAssignKeyword_5_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_4() { return cTAG_CLOSEParserRuleCall_5_1_4; }
	}

	public class Msteps_TargetVarTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_TargetVarType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cTargetVarKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cBlockAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBlockMath_blockParserRuleCall_3_0 = (RuleCall)cBlockAssignment_3.eContents().get(0);
		private final Assignment cSymbIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSymbIdMath_symbIdParserRuleCall_4_0 = (RuleCall)cSymbIdAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_5_1_1 = (RuleCall)cGroup_5_1.eContents().get(1);
		private final Keyword cTargetVarKeyword_5_1_2 = (Keyword)cGroup_5_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_3 = (RuleCall)cGroup_5_1.eContents().get(3);
		
		//msteps_TargetVarType:
		//
		//	TAG_OPEN "TargetVar" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//	"TargetVar" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "TargetVar" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "TargetVar"
		//
		//TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"TargetVar"
		public Keyword getTargetVarKeyword_1() { return cTargetVarKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//block=Math_block?
		public Assignment getBlockAssignment_3() { return cBlockAssignment_3; }

		//Math_block
		public RuleCall getBlockMath_blockParserRuleCall_3_0() { return cBlockMath_blockParserRuleCall_3_0; }

		//symbId=Math_symbId
		public Assignment getSymbIdAssignment_4() { return cSymbIdAssignment_4; }

		//Math_symbId
		public RuleCall getSymbIdMath_symbIdParserRuleCall_4_0() { return cSymbIdMath_symbIdParserRuleCall_4_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "TargetVar" TAG_CLOSE
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_5_0() { return cTAG_CLOSE2ParserRuleCall_5_0; }

		//TAG_CLOSE TAG_OPEN2 "TargetVar" TAG_CLOSE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_0() { return cTAG_CLOSEParserRuleCall_5_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_5_1_1() { return cTAG_OPEN2ParserRuleCall_5_1_1; }

		//"TargetVar"
		public Keyword getTargetVarKeyword_5_1_2() { return cTargetVarKeyword_5_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_3() { return cTAG_CLOSEParserRuleCall_5_1_3; }
	}

	public class Msteps_UseVariabilityLevelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_UseVariabilityLevel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cUseVariabilityLevelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Keyword cLevelIdKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cLevelIdAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cLevelIdCt_BlockNameTypeParserRuleCall_5_0 = (RuleCall)cLevelIdAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_6_0 = (RuleCall)cAlternatives_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_0 = (RuleCall)cGroup_6_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_6_1_1 = (RuleCall)cGroup_6_1.eContents().get(1);
		private final Keyword cUseVariabilityLevelKeyword_6_1_2 = (Keyword)cGroup_6_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_3 = (RuleCall)cGroup_6_1.eContents().get(3);
		
		//msteps_UseVariabilityLevel:
		//
		//	TAG_OPEN "UseVariabilityLevel" xmlns+=XS_xmlns* "levelId" "=" levelId=ct_BlockNameType (TAG_CLOSE2 | TAG_CLOSE
		//
		//	TAG_OPEN2 "UseVariabilityLevel" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "UseVariabilityLevel" xmlns+=XS_xmlns* "levelId" "=" levelId=ct_BlockNameType (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//"UseVariabilityLevel" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"UseVariabilityLevel"
		public Keyword getUseVariabilityLevelKeyword_1() { return cUseVariabilityLevelKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//"levelId"
		public Keyword getLevelIdKeyword_3() { return cLevelIdKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//levelId=ct_BlockNameType
		public Assignment getLevelIdAssignment_5() { return cLevelIdAssignment_5; }

		//ct_BlockNameType
		public RuleCall getLevelIdCt_BlockNameTypeParserRuleCall_5_0() { return cLevelIdCt_BlockNameTypeParserRuleCall_5_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "UseVariabilityLevel" TAG_CLOSE
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_6_0() { return cTAG_CLOSE2ParserRuleCall_6_0; }

		//TAG_CLOSE TAG_OPEN2 "UseVariabilityLevel" TAG_CLOSE
		public Group getGroup_6_1() { return cGroup_6_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_0() { return cTAG_CLOSEParserRuleCall_6_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_6_1_1() { return cTAG_OPEN2ParserRuleCall_6_1_1; }

		//"UseVariabilityLevel"
		public Keyword getUseVariabilityLevelKeyword_6_1_2() { return cUseVariabilityLevelKeyword_6_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_3() { return cTAG_CLOSEParserRuleCall_6_1_3; }
	}

	public class Msteps_UseVariabilityNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_UseVariabilityNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cUseVariabilityNodeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cBlockAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBlockMath_blockParserRuleCall_3_0 = (RuleCall)cBlockAssignment_3.eContents().get(0);
		private final Assignment cSymbIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSymbIdMath_symbIdParserRuleCall_4_0 = (RuleCall)cSymbIdAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_5_1_1 = (RuleCall)cGroup_5_1.eContents().get(1);
		private final Keyword cUseVariabilityNodeKeyword_5_1_2 = (Keyword)cGroup_5_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_3 = (RuleCall)cGroup_5_1.eContents().get(3);
		
		//msteps_UseVariabilityNode:
		//
		//	TAG_OPEN "UseVariabilityNode" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//	"UseVariabilityNode" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "UseVariabilityNode" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//"UseVariabilityNode" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"UseVariabilityNode"
		public Keyword getUseVariabilityNodeKeyword_1() { return cUseVariabilityNodeKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//block=Math_block?
		public Assignment getBlockAssignment_3() { return cBlockAssignment_3; }

		//Math_block
		public RuleCall getBlockMath_blockParserRuleCall_3_0() { return cBlockMath_blockParserRuleCall_3_0; }

		//symbId=Math_symbId
		public Assignment getSymbIdAssignment_4() { return cSymbIdAssignment_4; }

		//Math_symbId
		public RuleCall getSymbIdMath_symbIdParserRuleCall_4_0() { return cSymbIdMath_symbIdParserRuleCall_4_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "UseVariabilityNode" TAG_CLOSE
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_5_0() { return cTAG_CLOSE2ParserRuleCall_5_0; }

		//TAG_CLOSE TAG_OPEN2 "UseVariabilityNode" TAG_CLOSE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_0() { return cTAG_CLOSEParserRuleCall_5_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_5_1_1() { return cTAG_OPEN2ParserRuleCall_5_1_1; }

		//"UseVariabilityNode"
		public Keyword getUseVariabilityNodeKeyword_5_1_2() { return cUseVariabilityNodeKeyword_5_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_3() { return cTAG_CLOSEParserRuleCall_5_1_3; }
	}

	public class Msteps_SimulationStepElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_SimulationStep");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cSimulationStepKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdCt_idParserRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cDescriptionCt_AnnotationTypeParserRuleCall_4_1_1_0 = (RuleCall)cDescriptionAssignment_4_1_1.eContents().get(0);
		private final Assignment cReplicatesAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cReplicatesCt_ReplicatesTypeParserRuleCall_4_1_2_0 = (RuleCall)cReplicatesAssignment_4_1_2.eContents().get(0);
		private final Assignment cInitialValueAssignment_4_1_3 = (Assignment)cGroup_4_1.eContents().get(3);
		private final RuleCall cInitialValueMsteps_InitialValueTypeParserRuleCall_4_1_3_0 = (RuleCall)cInitialValueAssignment_4_1_3.eContents().get(0);
		private final Assignment cSimDataSetAssignment_4_1_4 = (Assignment)cGroup_4_1.eContents().get(4);
		private final RuleCall cSimDataSetMsteps_SimDataSetTypeParserRuleCall_4_1_4_0 = (RuleCall)cSimDataSetAssignment_4_1_4.eContents().get(0);
		private final Assignment cObservationsAssignment_4_1_5 = (Assignment)cGroup_4_1.eContents().get(5);
		private final RuleCall cObservationsMsteps_ObservationsTypeParserRuleCall_4_1_5_0 = (RuleCall)cObservationsAssignment_4_1_5.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_6 = (RuleCall)cGroup_4_1.eContents().get(6);
		private final Keyword cSimulationStepKeyword_4_1_7 = (Keyword)cGroup_4_1.eContents().get(7);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_8 = (RuleCall)cGroup_4_1.eContents().get(8);
		
		//msteps_SimulationStep:
		//
		//	TAG_OPEN "SimulationStep" xmlns+=XS_xmlns* id=ct_id (TAG_CLOSE2 | TAG_CLOSE Description=ct_AnnotationType?
		//
		//	Replicates=ct_ReplicatesType? InitialValue+=msteps_InitialValueType* SimDataSet=msteps_SimDataSetType?
		//
		//	Observations+=msteps_ObservationsType* TAG_OPEN2 "SimulationStep" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "SimulationStep" xmlns+=XS_xmlns* id=ct_id (TAG_CLOSE2 | TAG_CLOSE Description=ct_AnnotationType?
		//
		//Replicates=ct_ReplicatesType? InitialValue+=msteps_InitialValueType* SimDataSet=msteps_SimDataSetType?
		//
		//Observations+=msteps_ObservationsType* TAG_OPEN2 "SimulationStep" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"SimulationStep"
		public Keyword getSimulationStepKeyword_1() { return cSimulationStepKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//id=ct_id
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }

		//ct_id
		public RuleCall getIdCt_idParserRuleCall_3_0() { return cIdCt_idParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Description=ct_AnnotationType? Replicates=ct_ReplicatesType?
		//
		//InitialValue+=msteps_InitialValueType* SimDataSet=msteps_SimDataSetType? Observations+=msteps_ObservationsType*
		//
		//TAG_OPEN2 "SimulationStep" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Description=ct_AnnotationType? Replicates=ct_ReplicatesType? InitialValue+=msteps_InitialValueType*
		//
		//SimDataSet=msteps_SimDataSetType? Observations+=msteps_ObservationsType* TAG_OPEN2 "SimulationStep" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Description=ct_AnnotationType?
		public Assignment getDescriptionAssignment_4_1_1() { return cDescriptionAssignment_4_1_1; }

		//ct_AnnotationType
		public RuleCall getDescriptionCt_AnnotationTypeParserRuleCall_4_1_1_0() { return cDescriptionCt_AnnotationTypeParserRuleCall_4_1_1_0; }

		//Replicates=ct_ReplicatesType?
		public Assignment getReplicatesAssignment_4_1_2() { return cReplicatesAssignment_4_1_2; }

		//ct_ReplicatesType
		public RuleCall getReplicatesCt_ReplicatesTypeParserRuleCall_4_1_2_0() { return cReplicatesCt_ReplicatesTypeParserRuleCall_4_1_2_0; }

		//InitialValue+=msteps_InitialValueType*
		public Assignment getInitialValueAssignment_4_1_3() { return cInitialValueAssignment_4_1_3; }

		//msteps_InitialValueType
		public RuleCall getInitialValueMsteps_InitialValueTypeParserRuleCall_4_1_3_0() { return cInitialValueMsteps_InitialValueTypeParserRuleCall_4_1_3_0; }

		//SimDataSet=msteps_SimDataSetType?
		public Assignment getSimDataSetAssignment_4_1_4() { return cSimDataSetAssignment_4_1_4; }

		//msteps_SimDataSetType
		public RuleCall getSimDataSetMsteps_SimDataSetTypeParserRuleCall_4_1_4_0() { return cSimDataSetMsteps_SimDataSetTypeParserRuleCall_4_1_4_0; }

		//Observations+=msteps_ObservationsType*
		public Assignment getObservationsAssignment_4_1_5() { return cObservationsAssignment_4_1_5; }

		//msteps_ObservationsType
		public RuleCall getObservationsMsteps_ObservationsTypeParserRuleCall_4_1_5_0() { return cObservationsMsteps_ObservationsTypeParserRuleCall_4_1_5_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_6() { return cTAG_OPEN2ParserRuleCall_4_1_6; }

		//"SimulationStep"
		public Keyword getSimulationStepKeyword_4_1_7() { return cSimulationStepKeyword_4_1_7; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_8() { return cTAG_CLOSEParserRuleCall_4_1_8; }
	}

	public class Msteps_SimDataSetTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_SimDataSetType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cSimDataSetKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Keyword cDataSetRefKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cDataSetRefAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDataSetRefCt_SymbolNameTypeParserRuleCall_5_0 = (RuleCall)cDataSetRefAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_6_0 = (RuleCall)cAlternatives_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_0 = (RuleCall)cGroup_6_1.eContents().get(0);
		private final Assignment cMappingAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cMappingMsteps_ColumnMappingTypeParserRuleCall_6_1_1_0 = (RuleCall)cMappingAssignment_6_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_6_1_2 = (RuleCall)cGroup_6_1.eContents().get(2);
		private final Keyword cSimDataSetKeyword_6_1_3 = (Keyword)cGroup_6_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_4 = (RuleCall)cGroup_6_1.eContents().get(4);
		
		//msteps_SimDataSetType:
		//
		//	TAG_OPEN "SimDataSet" xmlns+=XS_xmlns* "dataSetRef" "=" dataSetRef=ct_SymbolNameType (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Mapping+=msteps_ColumnMappingType+ TAG_OPEN2 "SimDataSet" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "SimDataSet" xmlns+=XS_xmlns* "dataSetRef" "=" dataSetRef=ct_SymbolNameType (TAG_CLOSE2 | TAG_CLOSE
		//
		//Mapping+=msteps_ColumnMappingType+ TAG_OPEN2 "SimDataSet" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"SimDataSet"
		public Keyword getSimDataSetKeyword_1() { return cSimDataSetKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//"dataSetRef"
		public Keyword getDataSetRefKeyword_3() { return cDataSetRefKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//dataSetRef=ct_SymbolNameType
		public Assignment getDataSetRefAssignment_5() { return cDataSetRefAssignment_5; }

		//ct_SymbolNameType
		public RuleCall getDataSetRefCt_SymbolNameTypeParserRuleCall_5_0() { return cDataSetRefCt_SymbolNameTypeParserRuleCall_5_0; }

		//TAG_CLOSE2 | TAG_CLOSE Mapping+=msteps_ColumnMappingType+ TAG_OPEN2 "SimDataSet" TAG_CLOSE
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_6_0() { return cTAG_CLOSE2ParserRuleCall_6_0; }

		//TAG_CLOSE Mapping+=msteps_ColumnMappingType+ TAG_OPEN2 "SimDataSet" TAG_CLOSE
		public Group getGroup_6_1() { return cGroup_6_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_0() { return cTAG_CLOSEParserRuleCall_6_1_0; }

		//Mapping+=msteps_ColumnMappingType+
		public Assignment getMappingAssignment_6_1_1() { return cMappingAssignment_6_1_1; }

		//msteps_ColumnMappingType
		public RuleCall getMappingMsteps_ColumnMappingTypeParserRuleCall_6_1_1_0() { return cMappingMsteps_ColumnMappingTypeParserRuleCall_6_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_6_1_2() { return cTAG_OPEN2ParserRuleCall_6_1_2; }

		//"SimDataSet"
		public Keyword getSimDataSetKeyword_6_1_3() { return cSimDataSetKeyword_6_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_4() { return cTAG_CLOSEParserRuleCall_6_1_4; }
	}

	public class Msteps_ObservationsTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_ObservationsType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMsteps_ObservationsTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cObservationsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cTimepointsAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cTimepointsMsteps_TimepointsTypeParserRuleCall_4_1_1_0 = (RuleCall)cTimepointsAssignment_4_1_1.eContents().get(0);
		private final Assignment cOutputAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cOutputMsteps_OutputTypeParserRuleCall_4_1_2_0 = (RuleCall)cOutputAssignment_4_1_2.eContents().get(0);
		private final Assignment cWriteToAssignment_4_1_3 = (Assignment)cGroup_4_1.eContents().get(3);
		private final RuleCall cWriteToMsteps_WriteToTypeParserRuleCall_4_1_3_0 = (RuleCall)cWriteToAssignment_4_1_3.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		private final Keyword cObservationsKeyword_4_1_5 = (Keyword)cGroup_4_1.eContents().get(5);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_6 = (RuleCall)cGroup_4_1.eContents().get(6);
		
		//msteps_ObservationsType:
		//
		//	{msteps_ObservationsType} TAG_OPEN "Observations" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Timepoints=msteps_TimepointsType Output+=msteps_OutputType* WriteTo+=msteps_WriteToType* TAG_OPEN2 "Observations"
		//
		//	TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{msteps_ObservationsType} TAG_OPEN "Observations" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//Timepoints=msteps_TimepointsType Output+=msteps_OutputType* WriteTo+=msteps_WriteToType* TAG_OPEN2 "Observations"
		//
		//TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{msteps_ObservationsType}
		public Action getMsteps_ObservationsTypeAction_0() { return cMsteps_ObservationsTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Observations"
		public Keyword getObservationsKeyword_2() { return cObservationsKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Timepoints=msteps_TimepointsType Output+=msteps_OutputType* WriteTo+=msteps_WriteToType*
		//
		//TAG_OPEN2 "Observations" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Timepoints=msteps_TimepointsType Output+=msteps_OutputType* WriteTo+=msteps_WriteToType* TAG_OPEN2
		//
		//"Observations" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Timepoints=msteps_TimepointsType
		public Assignment getTimepointsAssignment_4_1_1() { return cTimepointsAssignment_4_1_1; }

		//msteps_TimepointsType
		public RuleCall getTimepointsMsteps_TimepointsTypeParserRuleCall_4_1_1_0() { return cTimepointsMsteps_TimepointsTypeParserRuleCall_4_1_1_0; }

		//Output+=msteps_OutputType*
		public Assignment getOutputAssignment_4_1_2() { return cOutputAssignment_4_1_2; }

		//msteps_OutputType
		public RuleCall getOutputMsteps_OutputTypeParserRuleCall_4_1_2_0() { return cOutputMsteps_OutputTypeParserRuleCall_4_1_2_0; }

		//WriteTo+=msteps_WriteToType*
		public Assignment getWriteToAssignment_4_1_3() { return cWriteToAssignment_4_1_3; }

		//msteps_WriteToType
		public RuleCall getWriteToMsteps_WriteToTypeParserRuleCall_4_1_3_0() { return cWriteToMsteps_WriteToTypeParserRuleCall_4_1_3_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_4() { return cTAG_OPEN2ParserRuleCall_4_1_4; }

		//"Observations"
		public Keyword getObservationsKeyword_4_1_5() { return cObservationsKeyword_4_1_5; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_6() { return cTAG_CLOSEParserRuleCall_4_1_6; }
	}

	public class Msteps_WriteToTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_WriteToType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMsteps_WriteToTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cWriteToKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cVarAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cVarMath_VarTypeParserRuleCall_4_1_1_0 = (RuleCall)cVarAssignment_4_1_1.eContents().get(0);
		private final Assignment cMappingAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cMappingMsteps_ColumnMappingTypeParserRuleCall_4_1_2_0 = (RuleCall)cMappingAssignment_4_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		private final Keyword cWriteToKeyword_4_1_4 = (Keyword)cGroup_4_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_5 = (RuleCall)cGroup_4_1.eContents().get(5);
		
		//msteps_WriteToType:
		//
		//	{msteps_WriteToType} TAG_OPEN "WriteTo" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType
		//
		//	Mapping+=msteps_ColumnMappingType+ TAG_OPEN2 "WriteTo" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{msteps_WriteToType} TAG_OPEN "WriteTo" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType
		//
		//Mapping+=msteps_ColumnMappingType+ TAG_OPEN2 "WriteTo" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{msteps_WriteToType}
		public Action getMsteps_WriteToTypeAction_0() { return cMsteps_WriteToTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"WriteTo"
		public Keyword getWriteToKeyword_2() { return cWriteToKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType Mapping+=msteps_ColumnMappingType+ TAG_OPEN2 "WriteTo" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Var=Math_VarType Mapping+=msteps_ColumnMappingType+ TAG_OPEN2 "WriteTo" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Var=Math_VarType
		public Assignment getVarAssignment_4_1_1() { return cVarAssignment_4_1_1; }

		//Math_VarType
		public RuleCall getVarMath_VarTypeParserRuleCall_4_1_1_0() { return cVarMath_VarTypeParserRuleCall_4_1_1_0; }

		//Mapping+=msteps_ColumnMappingType+
		public Assignment getMappingAssignment_4_1_2() { return cMappingAssignment_4_1_2; }

		//msteps_ColumnMappingType
		public RuleCall getMappingMsteps_ColumnMappingTypeParserRuleCall_4_1_2_0() { return cMappingMsteps_ColumnMappingTypeParserRuleCall_4_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_3() { return cTAG_OPEN2ParserRuleCall_4_1_3; }

		//"WriteTo"
		public Keyword getWriteToKeyword_4_1_4() { return cWriteToKeyword_4_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_5() { return cTAG_CLOSEParserRuleCall_4_1_5; }
	}

	public class Msteps_TimepointsTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_TimepointsType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMsteps_TimepointsTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cTimepointsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprCt_RhsParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cTimepointsKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//msteps_TimepointsType:
		//
		//	{msteps_TimepointsType} TAG_OPEN "Timepoints" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2
		//
		//	"Timepoints" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{msteps_TimepointsType} TAG_OPEN "Timepoints" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2
		//
		//"Timepoints" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{msteps_TimepointsType}
		public Action getMsteps_TimepointsTypeAction_0() { return cMsteps_TimepointsTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Timepoints"
		public Keyword getTimepointsKeyword_2() { return cTimepointsKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2 "Timepoints" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=ct_Rhs TAG_OPEN2 "Timepoints" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=ct_Rhs
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//ct_Rhs
		public RuleCall getExprCt_RhsParserRuleCall_4_1_1_0() { return cExprCt_RhsParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Timepoints"
		public Keyword getTimepointsKeyword_4_1_3() { return cTimepointsKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Msteps_InitialValueTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_InitialValueType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cInitialValueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cBlockAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBlockCt_blockParserRuleCall_3_0 = (RuleCall)cBlockAssignment_3.eContents().get(0);
		private final Assignment cSymbIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSymbIdCt_symbIdParserRuleCall_4_0 = (RuleCall)cSymbIdAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final Assignment cExprAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cExprCt_RhsParserRuleCall_5_1_1_0 = (RuleCall)cExprAssignment_5_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_5_1_2 = (RuleCall)cGroup_5_1.eContents().get(2);
		private final Keyword cInitialValueKeyword_5_1_3 = (Keyword)cGroup_5_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_4 = (RuleCall)cGroup_5_1.eContents().get(4);
		
		//msteps_InitialValueType:
		//
		//	TAG_OPEN "InitialValue" xmlns+=XS_xmlns* block=ct_block? symbId=ct_symbId (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs?
		//
		//	TAG_OPEN2 "InitialValue" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "InitialValue" xmlns+=XS_xmlns* block=ct_block? symbId=ct_symbId (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs? TAG_OPEN2
		//
		//"InitialValue" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"InitialValue"
		public Keyword getInitialValueKeyword_1() { return cInitialValueKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//block=ct_block?
		public Assignment getBlockAssignment_3() { return cBlockAssignment_3; }

		//ct_block
		public RuleCall getBlockCt_blockParserRuleCall_3_0() { return cBlockCt_blockParserRuleCall_3_0; }

		//symbId=ct_symbId
		public Assignment getSymbIdAssignment_4() { return cSymbIdAssignment_4; }

		//ct_symbId
		public RuleCall getSymbIdCt_symbIdParserRuleCall_4_0() { return cSymbIdCt_symbIdParserRuleCall_4_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs? TAG_OPEN2 "InitialValue" TAG_CLOSE
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_5_0() { return cTAG_CLOSE2ParserRuleCall_5_0; }

		//TAG_CLOSE Expr=ct_Rhs? TAG_OPEN2 "InitialValue" TAG_CLOSE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_0() { return cTAG_CLOSEParserRuleCall_5_1_0; }

		//Expr=ct_Rhs?
		public Assignment getExprAssignment_5_1_1() { return cExprAssignment_5_1_1; }

		//ct_Rhs
		public RuleCall getExprCt_RhsParserRuleCall_5_1_1_0() { return cExprCt_RhsParserRuleCall_5_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_5_1_2() { return cTAG_OPEN2ParserRuleCall_5_1_2; }

		//"InitialValue"
		public Keyword getInitialValueKeyword_5_1_3() { return cInitialValueKeyword_5_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_4() { return cTAG_CLOSEParserRuleCall_5_1_4; }
	}

	public class Msteps_EstimationOperationTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "msteps_EstimationOperationType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cEstimationOperationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cOpTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cOpTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOpTypeMath_EstimationOperationTypeParserRuleCall_4_0 = (RuleCall)cOpTypeAssignment_4.eContents().get(0);
		private final Assignment cXmlnsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_5_0 = (RuleCall)cXmlnsAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_6_0 = (RuleCall)cAlternatives_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_0 = (RuleCall)cGroup_6_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_6_1_1 = (RuleCall)cGroup_6_1.eContents().get(1);
		private final Keyword cEstimationOperationKeyword_6_1_2 = (Keyword)cGroup_6_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_3 = (RuleCall)cGroup_6_1.eContents().get(3);
		
		//msteps_EstimationOperationType:
		//
		//	TAG_OPEN "EstimationOperation" "opType" "=" opType=Math_EstimationOperationType xmlns+=XS_xmlns* (TAG_CLOSE2 |
		//
		//	TAG_CLOSE TAG_OPEN2 "EstimationOperation" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "EstimationOperation" "opType" "=" opType=Math_EstimationOperationType xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//TAG_OPEN2 "EstimationOperation" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"EstimationOperation"
		public Keyword getEstimationOperationKeyword_1() { return cEstimationOperationKeyword_1; }

		//"opType"
		public Keyword getOpTypeKeyword_2() { return cOpTypeKeyword_2; }

		//"="
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }

		//opType=Math_EstimationOperationType
		public Assignment getOpTypeAssignment_4() { return cOpTypeAssignment_4; }

		//Math_EstimationOperationType
		public RuleCall getOpTypeMath_EstimationOperationTypeParserRuleCall_4_0() { return cOpTypeMath_EstimationOperationTypeParserRuleCall_4_0; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_5() { return cXmlnsAssignment_5; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_5_0() { return cXmlnsXS_xmlnsParserRuleCall_5_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "EstimationOperation" TAG_CLOSE
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_6_0() { return cTAG_CLOSE2ParserRuleCall_6_0; }

		//TAG_CLOSE TAG_OPEN2 "EstimationOperation" TAG_CLOSE
		public Group getGroup_6_1() { return cGroup_6_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_0() { return cTAG_CLOSEParserRuleCall_6_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_6_1_1() { return cTAG_OPEN2ParserRuleCall_6_1_1; }

		//"EstimationOperation"
		public Keyword getEstimationOperationKeyword_6_1_2() { return cEstimationOperationKeyword_6_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_3() { return cTAG_CLOSEParserRuleCall_6_1_3; }
	}

	public class Design_TrialDesignTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_TrialDesignType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDesign_TrialDesignTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cDesignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cTreatmentAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cTreatmentDesign_TreatmentTypeParserRuleCall_4_1_1_0 = (RuleCall)cTreatmentAssignment_4_1_1.eContents().get(0);
		private final Assignment cTreatmentEpochAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cTreatmentEpochDesign_TreatmentEpohTypeParserRuleCall_4_1_2_0 = (RuleCall)cTreatmentEpochAssignment_4_1_2.eContents().get(0);
		private final Assignment cGroupAssignment_4_1_3 = (Assignment)cGroup_4_1.eContents().get(3);
		private final RuleCall cGroupDesign_GroupTypeParserRuleCall_4_1_3_0 = (RuleCall)cGroupAssignment_4_1_3.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		private final Keyword cDesignKeyword_4_1_5 = (Keyword)cGroup_4_1.eContents().get(5);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_6 = (RuleCall)cGroup_4_1.eContents().get(6);
		
		//// ***************************************************************************************************
		//
		//// ***Design***
		//
		//// ***************************************************************************************************
		//
		//design_TrialDesignType:
		//
		//	{design_TrialDesignType} TAG_OPEN "Design" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Treatment+=design_TreatmentType+
		//
		//	TreatmentEpoch+=design_TreatmentEpohType+ Group+=design_GroupType+ TAG_OPEN2 "Design" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{design_TrialDesignType} TAG_OPEN "Design" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Treatment+=design_TreatmentType+
		//
		//TreatmentEpoch+=design_TreatmentEpohType+ Group+=design_GroupType+ TAG_OPEN2 "Design" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{design_TrialDesignType}
		public Action getDesign_TrialDesignTypeAction_0() { return cDesign_TrialDesignTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Design"
		public Keyword getDesignKeyword_2() { return cDesignKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Treatment+=design_TreatmentType+ TreatmentEpoch+=design_TreatmentEpohType+
		//
		//Group+=design_GroupType+ TAG_OPEN2 "Design" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Treatment+=design_TreatmentType+ TreatmentEpoch+=design_TreatmentEpohType+ Group+=design_GroupType+ TAG_OPEN2
		//
		//"Design" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Treatment+=design_TreatmentType+
		public Assignment getTreatmentAssignment_4_1_1() { return cTreatmentAssignment_4_1_1; }

		//design_TreatmentType
		public RuleCall getTreatmentDesign_TreatmentTypeParserRuleCall_4_1_1_0() { return cTreatmentDesign_TreatmentTypeParserRuleCall_4_1_1_0; }

		//TreatmentEpoch+=design_TreatmentEpohType+
		public Assignment getTreatmentEpochAssignment_4_1_2() { return cTreatmentEpochAssignment_4_1_2; }

		//design_TreatmentEpohType
		public RuleCall getTreatmentEpochDesign_TreatmentEpohTypeParserRuleCall_4_1_2_0() { return cTreatmentEpochDesign_TreatmentEpohTypeParserRuleCall_4_1_2_0; }

		//Group+=design_GroupType+
		public Assignment getGroupAssignment_4_1_3() { return cGroupAssignment_4_1_3; }

		//design_GroupType
		public RuleCall getGroupDesign_GroupTypeParserRuleCall_4_1_3_0() { return cGroupDesign_GroupTypeParserRuleCall_4_1_3_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_4() { return cTAG_OPEN2ParserRuleCall_4_1_4; }

		//"Design"
		public Keyword getDesignKeyword_4_1_5() { return cDesignKeyword_4_1_5; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_6() { return cTAG_CLOSEParserRuleCall_4_1_6; }
	}

	public class Design_GroupTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_GroupType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cGroupKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdCt_idParserRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameCt_nameParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final Assignment cExprAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cExprDesign_GroupTypeContentParserRuleCall_5_1_1_0 = (RuleCall)cExprAssignment_5_1_1.eContents().get(0);
		private final Assignment cIndividualsAssignment_5_1_2 = (Assignment)cGroup_5_1.eContents().get(2);
		private final RuleCall cIndividualsDesign_IdividualsTypeParserRuleCall_5_1_2_0 = (RuleCall)cIndividualsAssignment_5_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_5_1_3 = (RuleCall)cGroup_5_1.eContents().get(3);
		private final Keyword cGroupKeyword_5_1_4 = (Keyword)cGroup_5_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_5 = (RuleCall)cGroup_5_1.eContents().get(5);
		
		//design_GroupType:
		//
		//	TAG_OPEN "Group" xmlns+=XS_xmlns* id=ct_id name=ct_name? (TAG_CLOSE2 | TAG_CLOSE Expr+=design_GroupTypeContent*
		//
		//	Individuals=design_IdividualsType TAG_OPEN2 "Group" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Group" xmlns+=XS_xmlns* id=ct_id name=ct_name? (TAG_CLOSE2 | TAG_CLOSE Expr+=design_GroupTypeContent*
		//
		//Individuals=design_IdividualsType TAG_OPEN2 "Group" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Group"
		public Keyword getGroupKeyword_1() { return cGroupKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//id=ct_id
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }

		//ct_id
		public RuleCall getIdCt_idParserRuleCall_3_0() { return cIdCt_idParserRuleCall_3_0; }

		//name=ct_name?
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ct_name
		public RuleCall getNameCt_nameParserRuleCall_4_0() { return cNameCt_nameParserRuleCall_4_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr+=design_GroupTypeContent* Individuals=design_IdividualsType TAG_OPEN2 "Group" TAG_CLOSE
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_5_0() { return cTAG_CLOSE2ParserRuleCall_5_0; }

		//TAG_CLOSE Expr+=design_GroupTypeContent* Individuals=design_IdividualsType TAG_OPEN2 "Group" TAG_CLOSE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_0() { return cTAG_CLOSEParserRuleCall_5_1_0; }

		//Expr+=design_GroupTypeContent*
		public Assignment getExprAssignment_5_1_1() { return cExprAssignment_5_1_1; }

		//design_GroupTypeContent
		public RuleCall getExprDesign_GroupTypeContentParserRuleCall_5_1_1_0() { return cExprDesign_GroupTypeContentParserRuleCall_5_1_1_0; }

		//Individuals=design_IdividualsType
		public Assignment getIndividualsAssignment_5_1_2() { return cIndividualsAssignment_5_1_2; }

		//design_IdividualsType
		public RuleCall getIndividualsDesign_IdividualsTypeParserRuleCall_5_1_2_0() { return cIndividualsDesign_IdividualsTypeParserRuleCall_5_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_5_1_3() { return cTAG_OPEN2ParserRuleCall_5_1_3; }

		//"Group"
		public Keyword getGroupKeyword_5_1_4() { return cGroupKeyword_5_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_5() { return cTAG_CLOSEParserRuleCall_5_1_5; }
	}

	public class Design_GroupTypeContentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_GroupTypeContent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cTreatmentEpochRefAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cTreatmentEpochRefDesign_TreatmentEpochRefTypeParserRuleCall_0_0 = (RuleCall)cTreatmentEpochRefAssignment_0.eContents().get(0);
		private final Assignment cWashoutAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cWashoutDesign_WashoutTypeParserRuleCall_1_0 = (RuleCall)cWashoutAssignment_1.eContents().get(0);
		
		//design_GroupTypeContent:
		//
		//	TreatmentEpochRef=design_TreatmentEpochRefType | Washout=design_WashoutType;
		public ParserRule getRule() { return rule; }

		//TreatmentEpochRef=design_TreatmentEpochRefType | Washout=design_WashoutType
		public Alternatives getAlternatives() { return cAlternatives; }

		//TreatmentEpochRef=design_TreatmentEpochRefType
		public Assignment getTreatmentEpochRefAssignment_0() { return cTreatmentEpochRefAssignment_0; }

		//design_TreatmentEpochRefType
		public RuleCall getTreatmentEpochRefDesign_TreatmentEpochRefTypeParserRuleCall_0_0() { return cTreatmentEpochRefDesign_TreatmentEpochRefTypeParserRuleCall_0_0; }

		//Washout=design_WashoutType
		public Assignment getWashoutAssignment_1() { return cWashoutAssignment_1; }

		//design_WashoutType
		public RuleCall getWashoutDesign_WashoutTypeParserRuleCall_1_0() { return cWashoutDesign_WashoutTypeParserRuleCall_1_0; }
	}

	public class Design_IdividualsTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_IdividualsType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cIndividualsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cLevelIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLevelIdCt_levelIdParserRuleCall_3_0 = (RuleCall)cLevelIdAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameCt_nameParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Assignment cSymbIdAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSymbIdCt_symbIdParserRuleCall_5_0 = (RuleCall)cSymbIdAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_6_0 = (RuleCall)cAlternatives_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_0 = (RuleCall)cGroup_6_1.eContents().get(0);
		private final Assignment cExprAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cExprCt_RhsParserRuleCall_6_1_1_0 = (RuleCall)cExprAssignment_6_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_6_1_2 = (RuleCall)cGroup_6_1.eContents().get(2);
		private final Keyword cIndividualsKeyword_6_1_3 = (Keyword)cGroup_6_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_4 = (RuleCall)cGroup_6_1.eContents().get(4);
		
		//design_IdividualsType:
		//
		//	TAG_OPEN "Individuals" xmlns+=XS_xmlns* levelId=ct_levelId name=ct_name? symbId=ct_symbId (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Expr=ct_Rhs TAG_OPEN2 "Individuals" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Individuals" xmlns+=XS_xmlns* levelId=ct_levelId name=ct_name? symbId=ct_symbId (TAG_CLOSE2 | TAG_CLOSE
		//
		//Expr=ct_Rhs TAG_OPEN2 "Individuals" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Individuals"
		public Keyword getIndividualsKeyword_1() { return cIndividualsKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//levelId=ct_levelId
		public Assignment getLevelIdAssignment_3() { return cLevelIdAssignment_3; }

		//ct_levelId
		public RuleCall getLevelIdCt_levelIdParserRuleCall_3_0() { return cLevelIdCt_levelIdParserRuleCall_3_0; }

		//name=ct_name?
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ct_name
		public RuleCall getNameCt_nameParserRuleCall_4_0() { return cNameCt_nameParserRuleCall_4_0; }

		//symbId=ct_symbId
		public Assignment getSymbIdAssignment_5() { return cSymbIdAssignment_5; }

		//ct_symbId
		public RuleCall getSymbIdCt_symbIdParserRuleCall_5_0() { return cSymbIdCt_symbIdParserRuleCall_5_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2 "Individuals" TAG_CLOSE
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_6_0() { return cTAG_CLOSE2ParserRuleCall_6_0; }

		//TAG_CLOSE Expr=ct_Rhs TAG_OPEN2 "Individuals" TAG_CLOSE
		public Group getGroup_6_1() { return cGroup_6_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_0() { return cTAG_CLOSEParserRuleCall_6_1_0; }

		//Expr=ct_Rhs
		public Assignment getExprAssignment_6_1_1() { return cExprAssignment_6_1_1; }

		//ct_Rhs
		public RuleCall getExprCt_RhsParserRuleCall_6_1_1_0() { return cExprCt_RhsParserRuleCall_6_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_6_1_2() { return cTAG_OPEN2ParserRuleCall_6_1_2; }

		//"Individuals"
		public Keyword getIndividualsKeyword_6_1_3() { return cIndividualsKeyword_6_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_4() { return cTAG_CLOSEParserRuleCall_6_1_4; }
	}

	public class Design_WashoutTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_WashoutType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDesign_WashoutTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cWashoutKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_1 = (RuleCall)cGroup_4_1.eContents().get(1);
		private final Keyword cWashoutKeyword_4_1_2 = (Keyword)cGroup_4_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		
		//design_WashoutType:
		//
		//	{design_WashoutType} TAG_OPEN "Washout" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Washout" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{design_WashoutType} TAG_OPEN "Washout" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Washout" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{design_WashoutType}
		public Action getDesign_WashoutTypeAction_0() { return cDesign_WashoutTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Washout"
		public Keyword getWashoutKeyword_2() { return cWashoutKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Washout" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE TAG_OPEN2 "Washout" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_1() { return cTAG_OPEN2ParserRuleCall_4_1_1; }

		//"Washout"
		public Keyword getWashoutKeyword_4_1_2() { return cWashoutKeyword_4_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_3() { return cTAG_CLOSEParserRuleCall_4_1_3; }
	}

	public class Design_TreatmentEpohTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_TreatmentEpohType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cTreatmentEpochKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdCt_idParserRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameCt_nameParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final Assignment cTreatmentRefAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cTreatmentRefDesign_TreatmentRefTypeParserRuleCall_5_1_1_0 = (RuleCall)cTreatmentRefAssignment_5_1_1.eContents().get(0);
		private final Assignment cStartAssignment_5_1_2 = (Assignment)cGroup_5_1.eContents().get(2);
		private final RuleCall cStartDesign_StartTypeParserRuleCall_5_1_2_0 = (RuleCall)cStartAssignment_5_1_2.eContents().get(0);
		private final Assignment cEndAssignment_5_1_3 = (Assignment)cGroup_5_1.eContents().get(3);
		private final RuleCall cEndDesign_EndTypeParserRuleCall_5_1_3_0 = (RuleCall)cEndAssignment_5_1_3.eContents().get(0);
		private final Assignment cOccasionAssignment_5_1_4 = (Assignment)cGroup_5_1.eContents().get(4);
		private final RuleCall cOccasionDesign_OccasionTypeParserRuleCall_5_1_4_0 = (RuleCall)cOccasionAssignment_5_1_4.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_5_1_5 = (RuleCall)cGroup_5_1.eContents().get(5);
		private final Keyword cTreatmentEpochKeyword_5_1_6 = (Keyword)cGroup_5_1.eContents().get(6);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_7 = (RuleCall)cGroup_5_1.eContents().get(7);
		
		//design_TreatmentEpohType:
		//
		//	TAG_OPEN "TreatmentEpoch" xmlns+=XS_xmlns* id=ct_id name=ct_name? (TAG_CLOSE2 | TAG_CLOSE
		//
		//	TreatmentRef+=design_TreatmentRefType+ Start=design_StartType? End=design_EndType? Occasion+=design_OccasionType*
		//
		//	TAG_OPEN2 "TreatmentEpoch" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "TreatmentEpoch" xmlns+=XS_xmlns* id=ct_id name=ct_name? (TAG_CLOSE2 | TAG_CLOSE
		//
		//TreatmentRef+=design_TreatmentRefType+ Start=design_StartType? End=design_EndType? Occasion+=design_OccasionType*
		//
		//TAG_OPEN2 "TreatmentEpoch" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"TreatmentEpoch"
		public Keyword getTreatmentEpochKeyword_1() { return cTreatmentEpochKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//id=ct_id
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }

		//ct_id
		public RuleCall getIdCt_idParserRuleCall_3_0() { return cIdCt_idParserRuleCall_3_0; }

		//name=ct_name?
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ct_name
		public RuleCall getNameCt_nameParserRuleCall_4_0() { return cNameCt_nameParserRuleCall_4_0; }

		//TAG_CLOSE2 | TAG_CLOSE TreatmentRef+=design_TreatmentRefType+ Start=design_StartType? End=design_EndType?
		//
		//Occasion+=design_OccasionType* TAG_OPEN2 "TreatmentEpoch" TAG_CLOSE
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_5_0() { return cTAG_CLOSE2ParserRuleCall_5_0; }

		//TAG_CLOSE TreatmentRef+=design_TreatmentRefType+ Start=design_StartType? End=design_EndType?
		//
		//Occasion+=design_OccasionType* TAG_OPEN2 "TreatmentEpoch" TAG_CLOSE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_0() { return cTAG_CLOSEParserRuleCall_5_1_0; }

		//TreatmentRef+=design_TreatmentRefType+
		public Assignment getTreatmentRefAssignment_5_1_1() { return cTreatmentRefAssignment_5_1_1; }

		//design_TreatmentRefType
		public RuleCall getTreatmentRefDesign_TreatmentRefTypeParserRuleCall_5_1_1_0() { return cTreatmentRefDesign_TreatmentRefTypeParserRuleCall_5_1_1_0; }

		//Start=design_StartType?
		public Assignment getStartAssignment_5_1_2() { return cStartAssignment_5_1_2; }

		//design_StartType
		public RuleCall getStartDesign_StartTypeParserRuleCall_5_1_2_0() { return cStartDesign_StartTypeParserRuleCall_5_1_2_0; }

		//End=design_EndType?
		public Assignment getEndAssignment_5_1_3() { return cEndAssignment_5_1_3; }

		//design_EndType
		public RuleCall getEndDesign_EndTypeParserRuleCall_5_1_3_0() { return cEndDesign_EndTypeParserRuleCall_5_1_3_0; }

		//Occasion+=design_OccasionType*
		public Assignment getOccasionAssignment_5_1_4() { return cOccasionAssignment_5_1_4; }

		//design_OccasionType
		public RuleCall getOccasionDesign_OccasionTypeParserRuleCall_5_1_4_0() { return cOccasionDesign_OccasionTypeParserRuleCall_5_1_4_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_5_1_5() { return cTAG_OPEN2ParserRuleCall_5_1_5; }

		//"TreatmentEpoch"
		public Keyword getTreatmentEpochKeyword_5_1_6() { return cTreatmentEpochKeyword_5_1_6; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_7() { return cTAG_CLOSEParserRuleCall_5_1_7; }
	}

	public class Design_OccasionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_OccasionType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cOccasionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cLevelIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLevelIdCt_levelIdParserRuleCall_3_0 = (RuleCall)cLevelIdAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameCt_nameParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Assignment cSymbIdAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSymbIdCt_symbIdParserRuleCall_5_0 = (RuleCall)cSymbIdAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_6_0 = (RuleCall)cAlternatives_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_0 = (RuleCall)cGroup_6_1.eContents().get(0);
		private final Assignment cBeginAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cBeginDesign_BeginTypeParserRuleCall_6_1_1_0 = (RuleCall)cBeginAssignment_6_1_1.eContents().get(0);
		private final Assignment cEndAssignment_6_1_2 = (Assignment)cGroup_6_1.eContents().get(2);
		private final RuleCall cEndDesign_EndTypeParserRuleCall_6_1_2_0 = (RuleCall)cEndAssignment_6_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_6_1_3 = (RuleCall)cGroup_6_1.eContents().get(3);
		private final Keyword cOccasionKeyword_6_1_4 = (Keyword)cGroup_6_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_5 = (RuleCall)cGroup_6_1.eContents().get(5);
		
		//design_OccasionType:
		//
		//	TAG_OPEN "Occasion" xmlns+=XS_xmlns* levelId=ct_levelId name=ct_name? symbId=ct_symbId (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Begin=design_BeginType End=design_EndType TAG_OPEN2 "Occasion" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Occasion" xmlns+=XS_xmlns* levelId=ct_levelId name=ct_name? symbId=ct_symbId (TAG_CLOSE2 | TAG_CLOSE
		//
		//Begin=design_BeginType End=design_EndType TAG_OPEN2 "Occasion" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Occasion"
		public Keyword getOccasionKeyword_1() { return cOccasionKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//levelId=ct_levelId
		public Assignment getLevelIdAssignment_3() { return cLevelIdAssignment_3; }

		//ct_levelId
		public RuleCall getLevelIdCt_levelIdParserRuleCall_3_0() { return cLevelIdCt_levelIdParserRuleCall_3_0; }

		//name=ct_name?
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ct_name
		public RuleCall getNameCt_nameParserRuleCall_4_0() { return cNameCt_nameParserRuleCall_4_0; }

		//symbId=ct_symbId
		public Assignment getSymbIdAssignment_5() { return cSymbIdAssignment_5; }

		//ct_symbId
		public RuleCall getSymbIdCt_symbIdParserRuleCall_5_0() { return cSymbIdCt_symbIdParserRuleCall_5_0; }

		//TAG_CLOSE2 | TAG_CLOSE Begin=design_BeginType End=design_EndType TAG_OPEN2 "Occasion" TAG_CLOSE
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_6_0() { return cTAG_CLOSE2ParserRuleCall_6_0; }

		//TAG_CLOSE Begin=design_BeginType End=design_EndType TAG_OPEN2 "Occasion" TAG_CLOSE
		public Group getGroup_6_1() { return cGroup_6_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_0() { return cTAG_CLOSEParserRuleCall_6_1_0; }

		//Begin=design_BeginType
		public Assignment getBeginAssignment_6_1_1() { return cBeginAssignment_6_1_1; }

		//design_BeginType
		public RuleCall getBeginDesign_BeginTypeParserRuleCall_6_1_1_0() { return cBeginDesign_BeginTypeParserRuleCall_6_1_1_0; }

		//End=design_EndType
		public Assignment getEndAssignment_6_1_2() { return cEndAssignment_6_1_2; }

		//design_EndType
		public RuleCall getEndDesign_EndTypeParserRuleCall_6_1_2_0() { return cEndDesign_EndTypeParserRuleCall_6_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_6_1_3() { return cTAG_OPEN2ParserRuleCall_6_1_3; }

		//"Occasion"
		public Keyword getOccasionKeyword_6_1_4() { return cOccasionKeyword_6_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_5() { return cTAG_CLOSEParserRuleCall_6_1_5; }
	}

	public class Design_BeginTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_BeginType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDesign_BeginTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cBeginKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprCt_ScalarRhsParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cBeginKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//design_BeginType:
		//
		//	{design_BeginType} TAG_OPEN "Begin" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "Begin"
		//
		//	TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{design_BeginType} TAG_OPEN "Begin" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "Begin"
		//
		//TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{design_BeginType}
		public Action getDesign_BeginTypeAction_0() { return cDesign_BeginTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Begin"
		public Keyword getBeginKeyword_2() { return cBeginKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "Begin" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "Begin" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=ct_ScalarRhs
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//ct_ScalarRhs
		public RuleCall getExprCt_ScalarRhsParserRuleCall_4_1_1_0() { return cExprCt_ScalarRhsParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Begin"
		public Keyword getBeginKeyword_4_1_3() { return cBeginKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Design_EndTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_EndType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDesign_EndTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cEndKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprCt_ScalarRhsParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cEndKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//design_EndType:
		//
		//	{design_EndType} TAG_OPEN "End" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "End"
		//
		//	TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{design_EndType} TAG_OPEN "End" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "End" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{design_EndType}
		public Action getDesign_EndTypeAction_0() { return cDesign_EndTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"End"
		public Keyword getEndKeyword_2() { return cEndKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "End" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "End" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=ct_ScalarRhs
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//ct_ScalarRhs
		public RuleCall getExprCt_ScalarRhsParserRuleCall_4_1_1_0() { return cExprCt_ScalarRhsParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"End"
		public Keyword getEndKeyword_4_1_3() { return cEndKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Design_StartTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_StartType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDesign_StartTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cStartKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprCt_ScalarRhsParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cStartKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//design_StartType:
		//
		//	{design_StartType} TAG_OPEN "Start" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "Start"
		//
		//	TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{design_StartType} TAG_OPEN "Start" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "Start"
		//
		//TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{design_StartType}
		public Action getDesign_StartTypeAction_0() { return cDesign_StartTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Start"
		public Keyword getStartKeyword_2() { return cStartKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "Start" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "Start" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=ct_ScalarRhs
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//ct_ScalarRhs
		public RuleCall getExprCt_ScalarRhsParserRuleCall_4_1_1_0() { return cExprCt_ScalarRhsParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Start"
		public Keyword getStartKeyword_4_1_3() { return cStartKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Design_TreatmentRefTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_TreatmentRefType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cTreatmentRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Keyword cIdRefKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cIdRefAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cIdRefMath_BlockNameTypeParserRuleCall_5_0 = (RuleCall)cIdRefAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_6_0 = (RuleCall)cAlternatives_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_0 = (RuleCall)cGroup_6_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_6_1_1 = (RuleCall)cGroup_6_1.eContents().get(1);
		private final Keyword cTreatmentRefKeyword_6_1_2 = (Keyword)cGroup_6_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_3 = (RuleCall)cGroup_6_1.eContents().get(3);
		
		//design_TreatmentRefType:
		//
		//	TAG_OPEN "TreatmentRef" xmlns+=XS_xmlns* "idRef" "=" idRef=Math_BlockNameType (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//	"TreatmentRef" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "TreatmentRef" xmlns+=XS_xmlns* "idRef" "=" idRef=Math_BlockNameType (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//"TreatmentRef" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"TreatmentRef"
		public Keyword getTreatmentRefKeyword_1() { return cTreatmentRefKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//"idRef"
		public Keyword getIdRefKeyword_3() { return cIdRefKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//idRef=Math_BlockNameType
		public Assignment getIdRefAssignment_5() { return cIdRefAssignment_5; }

		//Math_BlockNameType
		public RuleCall getIdRefMath_BlockNameTypeParserRuleCall_5_0() { return cIdRefMath_BlockNameTypeParserRuleCall_5_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "TreatmentRef" TAG_CLOSE
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_6_0() { return cTAG_CLOSE2ParserRuleCall_6_0; }

		//TAG_CLOSE TAG_OPEN2 "TreatmentRef" TAG_CLOSE
		public Group getGroup_6_1() { return cGroup_6_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_0() { return cTAG_CLOSEParserRuleCall_6_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_6_1_1() { return cTAG_OPEN2ParserRuleCall_6_1_1; }

		//"TreatmentRef"
		public Keyword getTreatmentRefKeyword_6_1_2() { return cTreatmentRefKeyword_6_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_3() { return cTAG_CLOSEParserRuleCall_6_1_3; }
	}

	public class Design_TreatmentEpochRefTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_TreatmentEpochRefType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cTreatmentEpochRefKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Keyword cIdRefKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cIdRefAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cIdRefMath_BlockNameTypeParserRuleCall_5_0 = (RuleCall)cIdRefAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_6_0 = (RuleCall)cAlternatives_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_0 = (RuleCall)cGroup_6_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_6_1_1 = (RuleCall)cGroup_6_1.eContents().get(1);
		private final Keyword cTreatmentEpochRefKeyword_6_1_2 = (Keyword)cGroup_6_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_3 = (RuleCall)cGroup_6_1.eContents().get(3);
		
		//design_TreatmentEpochRefType:
		//
		//	TAG_OPEN "TreatmentEpochRef" xmlns+=XS_xmlns* "idRef" "=" idRef=Math_BlockNameType (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//	"TreatmentEpochRef" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "TreatmentEpochRef" xmlns+=XS_xmlns* "idRef" "=" idRef=Math_BlockNameType (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//"TreatmentEpochRef" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"TreatmentEpochRef"
		public Keyword getTreatmentEpochRefKeyword_1() { return cTreatmentEpochRefKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//"idRef"
		public Keyword getIdRefKeyword_3() { return cIdRefKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//idRef=Math_BlockNameType
		public Assignment getIdRefAssignment_5() { return cIdRefAssignment_5; }

		//Math_BlockNameType
		public RuleCall getIdRefMath_BlockNameTypeParserRuleCall_5_0() { return cIdRefMath_BlockNameTypeParserRuleCall_5_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "TreatmentEpochRef" TAG_CLOSE
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_6_0() { return cTAG_CLOSE2ParserRuleCall_6_0; }

		//TAG_CLOSE TAG_OPEN2 "TreatmentEpochRef" TAG_CLOSE
		public Group getGroup_6_1() { return cGroup_6_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_0() { return cTAG_CLOSEParserRuleCall_6_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_6_1_1() { return cTAG_OPEN2ParserRuleCall_6_1_1; }

		//"TreatmentEpochRef"
		public Keyword getTreatmentEpochRefKeyword_6_1_2() { return cTreatmentEpochRefKeyword_6_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_3() { return cTAG_CLOSEParserRuleCall_6_1_3; }
	}

	public class Design_TreatmentTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_TreatmentType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cTreatmentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIdMath_idParserRuleCall_2_0 = (RuleCall)cIdAssignment_2.eContents().get(0);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameCt_nameParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Assignment cXmlnsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_4_0 = (RuleCall)cXmlnsAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final Assignment cDosingRegimenAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cDosingRegimenDesign_DosingRegimenTypeParserRuleCall_5_1_1_0 = (RuleCall)cDosingRegimenAssignment_5_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_5_1_2 = (RuleCall)cGroup_5_1.eContents().get(2);
		private final Keyword cTreatmentKeyword_5_1_3 = (Keyword)cGroup_5_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_4 = (RuleCall)cGroup_5_1.eContents().get(4);
		
		//design_TreatmentType:
		//
		//	TAG_OPEN "Treatment" id=Math_id name=ct_name? xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//	DosingRegimen+=design_DosingRegimenType+ TAG_OPEN2 "Treatment" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Treatment" id=Math_id name=ct_name? xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//DosingRegimen+=design_DosingRegimenType+ TAG_OPEN2 "Treatment" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Treatment"
		public Keyword getTreatmentKeyword_1() { return cTreatmentKeyword_1; }

		//id=Math_id
		public Assignment getIdAssignment_2() { return cIdAssignment_2; }

		//Math_id
		public RuleCall getIdMath_idParserRuleCall_2_0() { return cIdMath_idParserRuleCall_2_0; }

		//name=ct_name?
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ct_name
		public RuleCall getNameCt_nameParserRuleCall_3_0() { return cNameCt_nameParserRuleCall_3_0; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_4() { return cXmlnsAssignment_4; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_4_0() { return cXmlnsXS_xmlnsParserRuleCall_4_0; }

		//TAG_CLOSE2 | TAG_CLOSE DosingRegimen+=design_DosingRegimenType+ TAG_OPEN2 "Treatment" TAG_CLOSE
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_5_0() { return cTAG_CLOSE2ParserRuleCall_5_0; }

		//TAG_CLOSE DosingRegimen+=design_DosingRegimenType+ TAG_OPEN2 "Treatment" TAG_CLOSE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_0() { return cTAG_CLOSEParserRuleCall_5_1_0; }

		//DosingRegimen+=design_DosingRegimenType+
		public Assignment getDosingRegimenAssignment_5_1_1() { return cDosingRegimenAssignment_5_1_1; }

		//design_DosingRegimenType
		public RuleCall getDosingRegimenDesign_DosingRegimenTypeParserRuleCall_5_1_1_0() { return cDosingRegimenDesign_DosingRegimenTypeParserRuleCall_5_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_5_1_2() { return cTAG_OPEN2ParserRuleCall_5_1_2; }

		//"Treatment"
		public Keyword getTreatmentKeyword_5_1_3() { return cTreatmentKeyword_5_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_4() { return cTAG_CLOSEParserRuleCall_5_1_4; }
	}

	public class Design_DosingRegimenTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_DosingRegimenType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDesign_DosingRegimenTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cDosingRegimenKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cBolusAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cBolusDesign_BolusTypeParserRuleCall_4_1_1_0 = (RuleCall)cBolusAssignment_4_1_1.eContents().get(0);
		private final Assignment cInfusionAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cInfusionDesign_InfusionTypeParserRuleCall_4_1_2_0 = (RuleCall)cInfusionAssignment_4_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		private final Keyword cDosingRegimenKeyword_4_1_4 = (Keyword)cGroup_4_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_5 = (RuleCall)cGroup_4_1.eContents().get(5);
		
		//design_DosingRegimenType:
		//
		//	{design_DosingRegimenType} TAG_OPEN "DosingRegimen" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Bolus=design_BolusType?
		//
		//	Infusion=design_InfusionType? TAG_OPEN2 "DosingRegimen" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{design_DosingRegimenType} TAG_OPEN "DosingRegimen" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Bolus=design_BolusType?
		//
		//Infusion=design_InfusionType? TAG_OPEN2 "DosingRegimen" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{design_DosingRegimenType}
		public Action getDesign_DosingRegimenTypeAction_0() { return cDesign_DosingRegimenTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"DosingRegimen"
		public Keyword getDosingRegimenKeyword_2() { return cDosingRegimenKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Bolus=design_BolusType? Infusion=design_InfusionType? TAG_OPEN2 "DosingRegimen" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Bolus=design_BolusType? Infusion=design_InfusionType? TAG_OPEN2 "DosingRegimen" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Bolus=design_BolusType?
		public Assignment getBolusAssignment_4_1_1() { return cBolusAssignment_4_1_1; }

		//design_BolusType
		public RuleCall getBolusDesign_BolusTypeParserRuleCall_4_1_1_0() { return cBolusDesign_BolusTypeParserRuleCall_4_1_1_0; }

		//Infusion=design_InfusionType?
		public Assignment getInfusionAssignment_4_1_2() { return cInfusionAssignment_4_1_2; }

		//design_InfusionType
		public RuleCall getInfusionDesign_InfusionTypeParserRuleCall_4_1_2_0() { return cInfusionDesign_InfusionTypeParserRuleCall_4_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_3() { return cTAG_OPEN2ParserRuleCall_4_1_3; }

		//"DosingRegimen"
		public Keyword getDosingRegimenKeyword_4_1_4() { return cDosingRegimenKeyword_4_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_5() { return cTAG_CLOSEParserRuleCall_4_1_5; }
	}

	public class Design_InfusionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_InfusionType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDesign_InfusionTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cInfusionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cDoseAmountAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cDoseAmountDesign_DoseAmountTypeParserRuleCall_4_1_1_0 = (RuleCall)cDoseAmountAssignment_4_1_1.eContents().get(0);
		private final Assignment cSteadyStateAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cSteadyStateDesign_SteadyStateTypeParserRuleCall_4_1_2_0 = (RuleCall)cSteadyStateAssignment_4_1_2.eContents().get(0);
		private final Assignment cDosingTimesAssignment_4_1_3 = (Assignment)cGroup_4_1.eContents().get(3);
		private final RuleCall cDosingTimesDesign_DosingTimesTypeParserRuleCall_4_1_3_0 = (RuleCall)cDosingTimesAssignment_4_1_3.eContents().get(0);
		private final Assignment cDurationAssignment_4_1_4 = (Assignment)cGroup_4_1.eContents().get(4);
		private final RuleCall cDurationDesign_DurationTypeParserRuleCall_4_1_4_0 = (RuleCall)cDurationAssignment_4_1_4.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_5 = (RuleCall)cGroup_4_1.eContents().get(5);
		private final Keyword cInfusionKeyword_4_1_6 = (Keyword)cGroup_4_1.eContents().get(6);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_7 = (RuleCall)cGroup_4_1.eContents().get(7);
		
		//design_InfusionType:
		//
		//	{design_InfusionType} TAG_OPEN "Infusion" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE DoseAmount=design_DoseAmountType
		//
		//	SteadyState=design_SteadyStateType? DosingTimes=design_DosingTimesType? Duration=design_DurationType TAG_OPEN2
		//
		//	"Infusion" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{design_InfusionType} TAG_OPEN "Infusion" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE DoseAmount=design_DoseAmountType
		//
		//SteadyState=design_SteadyStateType? DosingTimes=design_DosingTimesType? Duration=design_DurationType TAG_OPEN2
		//
		//"Infusion" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{design_InfusionType}
		public Action getDesign_InfusionTypeAction_0() { return cDesign_InfusionTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Infusion"
		public Keyword getInfusionKeyword_2() { return cInfusionKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE DoseAmount=design_DoseAmountType SteadyState=design_SteadyStateType?
		//
		//DosingTimes=design_DosingTimesType? Duration=design_DurationType TAG_OPEN2 "Infusion" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE DoseAmount=design_DoseAmountType SteadyState=design_SteadyStateType? DosingTimes=design_DosingTimesType?
		//
		//Duration=design_DurationType TAG_OPEN2 "Infusion" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//DoseAmount=design_DoseAmountType
		public Assignment getDoseAmountAssignment_4_1_1() { return cDoseAmountAssignment_4_1_1; }

		//design_DoseAmountType
		public RuleCall getDoseAmountDesign_DoseAmountTypeParserRuleCall_4_1_1_0() { return cDoseAmountDesign_DoseAmountTypeParserRuleCall_4_1_1_0; }

		//SteadyState=design_SteadyStateType?
		public Assignment getSteadyStateAssignment_4_1_2() { return cSteadyStateAssignment_4_1_2; }

		//design_SteadyStateType
		public RuleCall getSteadyStateDesign_SteadyStateTypeParserRuleCall_4_1_2_0() { return cSteadyStateDesign_SteadyStateTypeParserRuleCall_4_1_2_0; }

		//DosingTimes=design_DosingTimesType?
		public Assignment getDosingTimesAssignment_4_1_3() { return cDosingTimesAssignment_4_1_3; }

		//design_DosingTimesType
		public RuleCall getDosingTimesDesign_DosingTimesTypeParserRuleCall_4_1_3_0() { return cDosingTimesDesign_DosingTimesTypeParserRuleCall_4_1_3_0; }

		//Duration=design_DurationType
		public Assignment getDurationAssignment_4_1_4() { return cDurationAssignment_4_1_4; }

		//design_DurationType
		public RuleCall getDurationDesign_DurationTypeParserRuleCall_4_1_4_0() { return cDurationDesign_DurationTypeParserRuleCall_4_1_4_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_5() { return cTAG_OPEN2ParserRuleCall_4_1_5; }

		//"Infusion"
		public Keyword getInfusionKeyword_4_1_6() { return cInfusionKeyword_4_1_6; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_7() { return cTAG_CLOSEParserRuleCall_4_1_7; }
	}

	public class Design_DurationTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_DurationType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDesign_DurationTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cDurationKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprDesign_DosingVariableTypeParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cDurationKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//design_DurationType:
		//
		//	{design_DurationType} TAG_OPEN "Duration" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=design_DosingVariableType
		//
		//	TAG_OPEN2 "Duration" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{design_DurationType} TAG_OPEN "Duration" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=design_DosingVariableType
		//
		//TAG_OPEN2 "Duration" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{design_DurationType}
		public Action getDesign_DurationTypeAction_0() { return cDesign_DurationTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Duration"
		public Keyword getDurationKeyword_2() { return cDurationKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=design_DosingVariableType TAG_OPEN2 "Duration" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=design_DosingVariableType TAG_OPEN2 "Duration" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=design_DosingVariableType
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//design_DosingVariableType
		public RuleCall getExprDesign_DosingVariableTypeParserRuleCall_4_1_1_0() { return cExprDesign_DosingVariableTypeParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Duration"
		public Keyword getDurationKeyword_4_1_3() { return cDurationKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Design_BolusTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_BolusType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDesign_BolusTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cBolusKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cDoseAmountAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cDoseAmountDesign_DoseAmountTypeParserRuleCall_4_1_1_0 = (RuleCall)cDoseAmountAssignment_4_1_1.eContents().get(0);
		private final Assignment cSteadyStateAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cSteadyStateDesign_SteadyStateTypeParserRuleCall_4_1_2_0 = (RuleCall)cSteadyStateAssignment_4_1_2.eContents().get(0);
		private final Assignment cDosingTimesAssignment_4_1_3 = (Assignment)cGroup_4_1.eContents().get(3);
		private final RuleCall cDosingTimesDesign_DosingTimesTypeParserRuleCall_4_1_3_0 = (RuleCall)cDosingTimesAssignment_4_1_3.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		private final Keyword cBolusKeyword_4_1_5 = (Keyword)cGroup_4_1.eContents().get(5);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_6 = (RuleCall)cGroup_4_1.eContents().get(6);
		
		//design_BolusType:
		//
		//	{design_BolusType} TAG_OPEN "Bolus" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE DoseAmount=design_DoseAmountType
		//
		//	SteadyState=design_SteadyStateType? DosingTimes=design_DosingTimesType? TAG_OPEN2 "Bolus" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{design_BolusType} TAG_OPEN "Bolus" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE DoseAmount=design_DoseAmountType
		//
		//SteadyState=design_SteadyStateType? DosingTimes=design_DosingTimesType? TAG_OPEN2 "Bolus" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{design_BolusType}
		public Action getDesign_BolusTypeAction_0() { return cDesign_BolusTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Bolus"
		public Keyword getBolusKeyword_2() { return cBolusKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE DoseAmount=design_DoseAmountType SteadyState=design_SteadyStateType?
		//
		//DosingTimes=design_DosingTimesType? TAG_OPEN2 "Bolus" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE DoseAmount=design_DoseAmountType SteadyState=design_SteadyStateType? DosingTimes=design_DosingTimesType?
		//
		//TAG_OPEN2 "Bolus" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//DoseAmount=design_DoseAmountType
		public Assignment getDoseAmountAssignment_4_1_1() { return cDoseAmountAssignment_4_1_1; }

		//design_DoseAmountType
		public RuleCall getDoseAmountDesign_DoseAmountTypeParserRuleCall_4_1_1_0() { return cDoseAmountDesign_DoseAmountTypeParserRuleCall_4_1_1_0; }

		//SteadyState=design_SteadyStateType?
		public Assignment getSteadyStateAssignment_4_1_2() { return cSteadyStateAssignment_4_1_2; }

		//design_SteadyStateType
		public RuleCall getSteadyStateDesign_SteadyStateTypeParserRuleCall_4_1_2_0() { return cSteadyStateDesign_SteadyStateTypeParserRuleCall_4_1_2_0; }

		//DosingTimes=design_DosingTimesType?
		public Assignment getDosingTimesAssignment_4_1_3() { return cDosingTimesAssignment_4_1_3; }

		//design_DosingTimesType
		public RuleCall getDosingTimesDesign_DosingTimesTypeParserRuleCall_4_1_3_0() { return cDosingTimesDesign_DosingTimesTypeParserRuleCall_4_1_3_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_4() { return cTAG_OPEN2ParserRuleCall_4_1_4; }

		//"Bolus"
		public Keyword getBolusKeyword_4_1_5() { return cBolusKeyword_4_1_5; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_6() { return cTAG_CLOSEParserRuleCall_4_1_6; }
	}

	public class Design_DosingTimesTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_DosingTimesType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDesign_DosingTimesTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cDosingTimesKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprDesign_DosingTimesTypeContentParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cDosingTimesKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//design_DosingTimesType:
		//
		//	{design_DosingTimesType} TAG_OPEN "DosingTimes" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Expr+=design_DosingTimesTypeContent+ TAG_OPEN2 "DosingTimes" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{design_DosingTimesType} TAG_OPEN "DosingTimes" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//Expr+=design_DosingTimesTypeContent+ TAG_OPEN2 "DosingTimes" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{design_DosingTimesType}
		public Action getDesign_DosingTimesTypeAction_0() { return cDesign_DosingTimesTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"DosingTimes"
		public Keyword getDosingTimesKeyword_2() { return cDosingTimesKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr+=design_DosingTimesTypeContent+ TAG_OPEN2 "DosingTimes" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr+=design_DosingTimesTypeContent+ TAG_OPEN2 "DosingTimes" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr+=design_DosingTimesTypeContent+
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//design_DosingTimesTypeContent
		public RuleCall getExprDesign_DosingTimesTypeContentParserRuleCall_4_1_1_0() { return cExprDesign_DosingTimesTypeContentParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"DosingTimes"
		public Keyword getDosingTimesKeyword_4_1_3() { return cDosingTimesKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Design_DosingTimesTypeContentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_DosingTimesTypeContent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cSequenceAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cSequenceCt_SequenceTypeParserRuleCall_0_0 = (RuleCall)cSequenceAssignment_0.eContents().get(0);
		private final Assignment cScalarAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cScalarMath_ScalarTypeParserRuleCall_1_0 = (RuleCall)cScalarAssignment_1.eContents().get(0);
		
		//design_DosingTimesTypeContent:
		//
		//	Sequence=ct_SequenceType | Scalar=Math_ScalarType;
		public ParserRule getRule() { return rule; }

		//Sequence=ct_SequenceType | Scalar=Math_ScalarType
		public Alternatives getAlternatives() { return cAlternatives; }

		//Sequence=ct_SequenceType
		public Assignment getSequenceAssignment_0() { return cSequenceAssignment_0; }

		//ct_SequenceType
		public RuleCall getSequenceCt_SequenceTypeParserRuleCall_0_0() { return cSequenceCt_SequenceTypeParserRuleCall_0_0; }

		//Scalar=Math_ScalarType
		public Assignment getScalarAssignment_1() { return cScalarAssignment_1; }

		//Math_ScalarType
		public RuleCall getScalarMath_ScalarTypeParserRuleCall_1_0() { return cScalarMath_ScalarTypeParserRuleCall_1_0; }
	}

	public class Design_SteadyStateTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_SteadyStateType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDesign_SteadyStateTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cSteadyStateKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cDosingStartAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cDosingStartDesign_DosingStartTypeParserRuleCall_4_1_1_0 = (RuleCall)cDosingStartAssignment_4_1_1.eContents().get(0);
		private final Assignment cDosingPeriodAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cDosingPeriodDesign_DosingPeriodTypeParserRuleCall_4_1_2_0 = (RuleCall)cDosingPeriodAssignment_4_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		private final Keyword cSteadyStateKeyword_4_1_4 = (Keyword)cGroup_4_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_5 = (RuleCall)cGroup_4_1.eContents().get(5);
		
		//design_SteadyStateType:
		//
		//	{design_SteadyStateType} TAG_OPEN "SteadyState" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//	DosingStart=design_DosingStartType DosingPeriod=design_DosingPeriodType TAG_OPEN2 "SteadyState" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{design_SteadyStateType} TAG_OPEN "SteadyState" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//DosingStart=design_DosingStartType DosingPeriod=design_DosingPeriodType TAG_OPEN2 "SteadyState" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{design_SteadyStateType}
		public Action getDesign_SteadyStateTypeAction_0() { return cDesign_SteadyStateTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"SteadyState"
		public Keyword getSteadyStateKeyword_2() { return cSteadyStateKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE DosingStart=design_DosingStartType DosingPeriod=design_DosingPeriodType TAG_OPEN2 "SteadyState"
		//
		//TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE DosingStart=design_DosingStartType DosingPeriod=design_DosingPeriodType TAG_OPEN2 "SteadyState" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//DosingStart=design_DosingStartType
		public Assignment getDosingStartAssignment_4_1_1() { return cDosingStartAssignment_4_1_1; }

		//design_DosingStartType
		public RuleCall getDosingStartDesign_DosingStartTypeParserRuleCall_4_1_1_0() { return cDosingStartDesign_DosingStartTypeParserRuleCall_4_1_1_0; }

		//DosingPeriod=design_DosingPeriodType
		public Assignment getDosingPeriodAssignment_4_1_2() { return cDosingPeriodAssignment_4_1_2; }

		//design_DosingPeriodType
		public RuleCall getDosingPeriodDesign_DosingPeriodTypeParserRuleCall_4_1_2_0() { return cDosingPeriodDesign_DosingPeriodTypeParserRuleCall_4_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_3() { return cTAG_OPEN2ParserRuleCall_4_1_3; }

		//"SteadyState"
		public Keyword getSteadyStateKeyword_4_1_4() { return cSteadyStateKeyword_4_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_5() { return cTAG_CLOSEParserRuleCall_4_1_5; }
	}

	public class Design_DosingStartTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_DosingStartType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDesign_DosingStartTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cDosingStartKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprDesign_DosingVariableTypeParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cDosingStartKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//design_DosingStartType:
		//
		//	{design_DosingStartType} TAG_OPEN "DosingStart" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Expr=design_DosingVariableType TAG_OPEN2 "DosingStart" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{design_DosingStartType} TAG_OPEN "DosingStart" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=design_DosingVariableType
		//
		//TAG_OPEN2 "DosingStart" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{design_DosingStartType}
		public Action getDesign_DosingStartTypeAction_0() { return cDesign_DosingStartTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"DosingStart"
		public Keyword getDosingStartKeyword_2() { return cDosingStartKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=design_DosingVariableType TAG_OPEN2 "DosingStart" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=design_DosingVariableType TAG_OPEN2 "DosingStart" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=design_DosingVariableType
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//design_DosingVariableType
		public RuleCall getExprDesign_DosingVariableTypeParserRuleCall_4_1_1_0() { return cExprDesign_DosingVariableTypeParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"DosingStart"
		public Keyword getDosingStartKeyword_4_1_3() { return cDosingStartKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Design_DosingPeriodTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_DosingPeriodType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDesign_DosingPeriodTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cDosingPeriodKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprDesign_DosingVariableTypeParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cDosingPeriodKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//design_DosingPeriodType:
		//
		//	{design_DosingPeriodType} TAG_OPEN "DosingPeriod" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Expr=design_DosingVariableType? TAG_OPEN2 "DosingPeriod" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{design_DosingPeriodType} TAG_OPEN "DosingPeriod" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//Expr=design_DosingVariableType? TAG_OPEN2 "DosingPeriod" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{design_DosingPeriodType}
		public Action getDesign_DosingPeriodTypeAction_0() { return cDesign_DosingPeriodTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"DosingPeriod"
		public Keyword getDosingPeriodKeyword_2() { return cDosingPeriodKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=design_DosingVariableType? TAG_OPEN2 "DosingPeriod" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=design_DosingVariableType? TAG_OPEN2 "DosingPeriod" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=design_DosingVariableType?
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//design_DosingVariableType
		public RuleCall getExprDesign_DosingVariableTypeParserRuleCall_4_1_1_0() { return cExprDesign_DosingVariableTypeParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"DosingPeriod"
		public Keyword getDosingPeriodKeyword_4_1_3() { return cDosingPeriodKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Design_DoseAmountTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_DoseAmountType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDesign_DoseAmountTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cDoseAmountKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprDesign_DosingVariableTypeParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cDoseAmountKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//design_DoseAmountType:
		//
		//	{design_DoseAmountType} TAG_OPEN "DoseAmount" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Expr=design_DosingVariableType? TAG_OPEN2 "DoseAmount" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{design_DoseAmountType} TAG_OPEN "DoseAmount" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=design_DosingVariableType?
		//
		//TAG_OPEN2 "DoseAmount" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{design_DoseAmountType}
		public Action getDesign_DoseAmountTypeAction_0() { return cDesign_DoseAmountTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"DoseAmount"
		public Keyword getDoseAmountKeyword_2() { return cDoseAmountKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=design_DosingVariableType? TAG_OPEN2 "DoseAmount" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=design_DosingVariableType? TAG_OPEN2 "DoseAmount" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=design_DosingVariableType?
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//design_DosingVariableType
		public RuleCall getExprDesign_DosingVariableTypeParserRuleCall_4_1_1_0() { return cExprDesign_DosingVariableTypeParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"DoseAmount"
		public Keyword getDoseAmountKeyword_4_1_3() { return cDoseAmountKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Design_DosingVariableTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_DosingVariableType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cExprAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cExprDesign_DosingVariableTypeContentParserRuleCall_0_0 = (RuleCall)cExprAssignment_0.eContents().get(0);
		private final Assignment cAmountAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAmountDesign_AmountTypeParserRuleCall_1_0 = (RuleCall)cAmountAssignment_1.eContents().get(0);
		
		//design_DosingVariableType:
		//
		//	Expr=design_DosingVariableTypeContent Amount=design_AmountType?;
		public ParserRule getRule() { return rule; }

		//Expr=design_DosingVariableTypeContent Amount=design_AmountType?
		public Group getGroup() { return cGroup; }

		//Expr=design_DosingVariableTypeContent
		public Assignment getExprAssignment_0() { return cExprAssignment_0; }

		//design_DosingVariableTypeContent
		public RuleCall getExprDesign_DosingVariableTypeContentParserRuleCall_0_0() { return cExprDesign_DosingVariableTypeContentParserRuleCall_0_0; }

		//Amount=design_AmountType?
		public Assignment getAmountAssignment_1() { return cAmountAssignment_1; }

		//design_AmountType
		public RuleCall getAmountDesign_AmountTypeParserRuleCall_1_0() { return cAmountDesign_AmountTypeParserRuleCall_1_0; }
	}

	public class Design_DosingVariableTypeContentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_DosingVariableTypeContent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cDoseVarAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cDoseVarDesign_DoseVarTypeParserRuleCall_0_0 = (RuleCall)cDoseVarAssignment_0.eContents().get(0);
		private final Assignment cTargetVarAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cTargetVarDesign_TargetVarTypeParserRuleCall_1_0 = (RuleCall)cTargetVarAssignment_1.eContents().get(0);
		
		//design_DosingVariableTypeContent:
		//
		//	DoseVar=design_DoseVarType | TargetVar=design_TargetVarType;
		public ParserRule getRule() { return rule; }

		//DoseVar=design_DoseVarType | TargetVar=design_TargetVarType
		public Alternatives getAlternatives() { return cAlternatives; }

		//DoseVar=design_DoseVarType
		public Assignment getDoseVarAssignment_0() { return cDoseVarAssignment_0; }

		//design_DoseVarType
		public RuleCall getDoseVarDesign_DoseVarTypeParserRuleCall_0_0() { return cDoseVarDesign_DoseVarTypeParserRuleCall_0_0; }

		//TargetVar=design_TargetVarType
		public Assignment getTargetVarAssignment_1() { return cTargetVarAssignment_1; }

		//design_TargetVarType
		public RuleCall getTargetVarDesign_TargetVarTypeParserRuleCall_1_0() { return cTargetVarDesign_TargetVarTypeParserRuleCall_1_0; }
	}

	public class Design_AmountTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_AmountType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDesign_AmountTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cAmountKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprCt_RhsParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cAmountKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//design_AmountType:
		//
		//	{design_AmountType} TAG_OPEN "Amount" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2 "Amount"
		//
		//	TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{design_AmountType} TAG_OPEN "Amount" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2 "Amount" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{design_AmountType}
		public Action getDesign_AmountTypeAction_0() { return cDesign_AmountTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Amount"
		public Keyword getAmountKeyword_2() { return cAmountKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2 "Amount" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=ct_Rhs TAG_OPEN2 "Amount" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=ct_Rhs
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//ct_Rhs
		public RuleCall getExprCt_RhsParserRuleCall_4_1_1_0() { return cExprCt_RhsParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Amount"
		public Keyword getAmountKeyword_4_1_3() { return cAmountKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Design_TargetVarTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_TargetVarType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cTargetVarKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cBlockAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBlockMath_blockParserRuleCall_3_0 = (RuleCall)cBlockAssignment_3.eContents().get(0);
		private final Assignment cSymbIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSymbIdMath_symbIdParserRuleCall_4_0 = (RuleCall)cSymbIdAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_5_1_1 = (RuleCall)cGroup_5_1.eContents().get(1);
		private final Keyword cTargetVarKeyword_5_1_2 = (Keyword)cGroup_5_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_3 = (RuleCall)cGroup_5_1.eContents().get(3);
		
		//design_TargetVarType:
		//
		//	TAG_OPEN "TargetVar" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//	"TargetVar" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "TargetVar" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "TargetVar"
		//
		//TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"TargetVar"
		public Keyword getTargetVarKeyword_1() { return cTargetVarKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//block=Math_block?
		public Assignment getBlockAssignment_3() { return cBlockAssignment_3; }

		//Math_block
		public RuleCall getBlockMath_blockParserRuleCall_3_0() { return cBlockMath_blockParserRuleCall_3_0; }

		//symbId=Math_symbId
		public Assignment getSymbIdAssignment_4() { return cSymbIdAssignment_4; }

		//Math_symbId
		public RuleCall getSymbIdMath_symbIdParserRuleCall_4_0() { return cSymbIdMath_symbIdParserRuleCall_4_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "TargetVar" TAG_CLOSE
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_5_0() { return cTAG_CLOSE2ParserRuleCall_5_0; }

		//TAG_CLOSE TAG_OPEN2 "TargetVar" TAG_CLOSE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_0() { return cTAG_CLOSEParserRuleCall_5_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_5_1_1() { return cTAG_OPEN2ParserRuleCall_5_1_1; }

		//"TargetVar"
		public Keyword getTargetVarKeyword_5_1_2() { return cTargetVarKeyword_5_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_3() { return cTAG_CLOSEParserRuleCall_5_1_3; }
	}

	public class Design_DoseVarTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "design_DoseVarType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDoseVarKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cBlockAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBlockMath_blockParserRuleCall_3_0 = (RuleCall)cBlockAssignment_3.eContents().get(0);
		private final Assignment cSymbIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSymbIdMath_symbIdParserRuleCall_4_0 = (RuleCall)cSymbIdAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_5_1_1 = (RuleCall)cGroup_5_1.eContents().get(1);
		private final Keyword cDoseVarKeyword_5_1_2 = (Keyword)cGroup_5_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_3 = (RuleCall)cGroup_5_1.eContents().get(3);
		
		//design_DoseVarType:
		//
		//	TAG_OPEN "DoseVar" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "DoseVar"
		//
		//	TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "DoseVar" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "DoseVar"
		//
		//TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"DoseVar"
		public Keyword getDoseVarKeyword_1() { return cDoseVarKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//block=Math_block?
		public Assignment getBlockAssignment_3() { return cBlockAssignment_3; }

		//Math_block
		public RuleCall getBlockMath_blockParserRuleCall_3_0() { return cBlockMath_blockParserRuleCall_3_0; }

		//symbId=Math_symbId
		public Assignment getSymbIdAssignment_4() { return cSymbIdAssignment_4; }

		//Math_symbId
		public RuleCall getSymbIdMath_symbIdParserRuleCall_4_0() { return cSymbIdMath_symbIdParserRuleCall_4_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "DoseVar" TAG_CLOSE
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_5_0() { return cTAG_CLOSE2ParserRuleCall_5_0; }

		//TAG_CLOSE TAG_OPEN2 "DoseVar" TAG_CLOSE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_0() { return cTAG_CLOSEParserRuleCall_5_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_5_1_1() { return cTAG_OPEN2ParserRuleCall_5_1_1; }

		//"DoseVar"
		public Keyword getDoseVarKeyword_5_1_2() { return cDoseVarKeyword_5_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_3() { return cTAG_CLOSEParserRuleCall_5_1_3; }
	}

	public class Uncert_DistributionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uncert_DistributionType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cDistributionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cWrittenVersionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cWrittenVersionCt_writtenVersionParserRuleCall_3_0 = (RuleCall)cWrittenVersionAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprUncert_DistributionTypeContentParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cDistributionKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		////////////////////////////////////////////////////////////////////////////////////////////////////////////
		//
		//// ***Uncertainty***
		//
		///////////////////////////////////////////////////////////////////////////////////////////////////////////
		//
		//uncert_DistributionType:
		//
		//	TAG_OPEN "Distribution" xmlns+=XS_xmlns* writtenVersion=ct_writtenVersion (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Expr=uncert_DistributionTypeContent TAG_OPEN2 "Distribution" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Distribution" xmlns+=XS_xmlns* writtenVersion=ct_writtenVersion (TAG_CLOSE2 | TAG_CLOSE
		//
		//Expr=uncert_DistributionTypeContent TAG_OPEN2 "Distribution" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Distribution"
		public Keyword getDistributionKeyword_1() { return cDistributionKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//writtenVersion=ct_writtenVersion
		public Assignment getWrittenVersionAssignment_3() { return cWrittenVersionAssignment_3; }

		//ct_writtenVersion
		public RuleCall getWrittenVersionCt_writtenVersionParserRuleCall_3_0() { return cWrittenVersionCt_writtenVersionParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=uncert_DistributionTypeContent TAG_OPEN2 "Distribution" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=uncert_DistributionTypeContent TAG_OPEN2 "Distribution" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=uncert_DistributionTypeContent
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//uncert_DistributionTypeContent
		public RuleCall getExprUncert_DistributionTypeContentParserRuleCall_4_1_1_0() { return cExprUncert_DistributionTypeContentParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Distribution"
		public Keyword getDistributionKeyword_4_1_3() { return cDistributionKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Uncert_DistributionTypeContentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uncert_DistributionTypeContent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cNormalAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cNormalUncert_NormalParserRuleCall_0_0 = (RuleCall)cNormalAssignment_0.eContents().get(0);
		private final Assignment cPDFAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cPDFUncert_PDFParserRuleCall_1_0 = (RuleCall)cPDFAssignment_1.eContents().get(0);
		private final Assignment cPoisonAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cPoisonUncert_PoisonParserRuleCall_2_0 = (RuleCall)cPoisonAssignment_2.eContents().get(0);
		private final Assignment cStudentAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cStudentUncert_Student_tParserRuleCall_3_0 = (RuleCall)cStudentAssignment_3.eContents().get(0);
		private final Assignment cUniformAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cUniformUncert_UniformParserRuleCall_4_0 = (RuleCall)cUniformAssignment_4.eContents().get(0);
		
		//uncert_DistributionTypeContent:
		//
		//	Normal=uncert_Normal | PDF=uncert_PDF | Poison=uncert_Poison | Student=uncert_Student_t | Uniform=uncert_Uniform;
		public ParserRule getRule() { return rule; }

		//Normal=uncert_Normal | PDF=uncert_PDF | Poison=uncert_Poison | Student=uncert_Student_t | Uniform=uncert_Uniform
		public Alternatives getAlternatives() { return cAlternatives; }

		//Normal=uncert_Normal
		public Assignment getNormalAssignment_0() { return cNormalAssignment_0; }

		//uncert_Normal
		public RuleCall getNormalUncert_NormalParserRuleCall_0_0() { return cNormalUncert_NormalParserRuleCall_0_0; }

		//PDF=uncert_PDF
		public Assignment getPDFAssignment_1() { return cPDFAssignment_1; }

		//uncert_PDF
		public RuleCall getPDFUncert_PDFParserRuleCall_1_0() { return cPDFUncert_PDFParserRuleCall_1_0; }

		//Poison=uncert_Poison
		public Assignment getPoisonAssignment_2() { return cPoisonAssignment_2; }

		//uncert_Poison
		public RuleCall getPoisonUncert_PoisonParserRuleCall_2_0() { return cPoisonUncert_PoisonParserRuleCall_2_0; }

		//Student=uncert_Student_t
		public Assignment getStudentAssignment_3() { return cStudentAssignment_3; }

		//uncert_Student_t
		public RuleCall getStudentUncert_Student_tParserRuleCall_3_0() { return cStudentUncert_Student_tParserRuleCall_3_0; }

		//Uniform=uncert_Uniform
		public Assignment getUniformAssignment_4() { return cUniformAssignment_4; }

		//uncert_Uniform
		public RuleCall getUniformUncert_UniformParserRuleCall_4_0() { return cUniformUncert_UniformParserRuleCall_4_0; }
	}

	public class Uncert_NormalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uncert_Normal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUncert_NormalAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cNormalKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cMeanAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cMeanUncert_MeanParserRuleCall_4_1_1_0 = (RuleCall)cMeanAssignment_4_1_1.eContents().get(0);
		private final Assignment cStdDevAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cStdDevUncert_StdDevParserRuleCall_4_1_2_0 = (RuleCall)cStdDevAssignment_4_1_2.eContents().get(0);
		private final Assignment cVarianceAssignment_4_1_3 = (Assignment)cGroup_4_1.eContents().get(3);
		private final RuleCall cVarianceUncert_VarianceParserRuleCall_4_1_3_0 = (RuleCall)cVarianceAssignment_4_1_3.eContents().get(0);
		private final Assignment cCoefficientOfVarianceAssignment_4_1_4 = (Assignment)cGroup_4_1.eContents().get(4);
		private final RuleCall cCoefficientOfVarianceUncert_CoefficientOfVarianceParserRuleCall_4_1_4_0 = (RuleCall)cCoefficientOfVarianceAssignment_4_1_4.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_5 = (RuleCall)cGroup_4_1.eContents().get(5);
		private final Keyword cNormalKeyword_4_1_6 = (Keyword)cGroup_4_1.eContents().get(6);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_7 = (RuleCall)cGroup_4_1.eContents().get(7);
		
		//uncert_Normal:
		//
		//	{uncert_Normal} TAG_OPEN "Normal" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Mean=uncert_Mean StdDev=uncert_StdDev?
		//
		//	Variance=uncert_Variance? CoefficientOfVariance=uncert_CoefficientOfVariance? TAG_OPEN2 "Normal" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{uncert_Normal} TAG_OPEN "Normal" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Mean=uncert_Mean StdDev=uncert_StdDev?
		//
		//Variance=uncert_Variance? CoefficientOfVariance=uncert_CoefficientOfVariance? TAG_OPEN2 "Normal" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{uncert_Normal}
		public Action getUncert_NormalAction_0() { return cUncert_NormalAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Normal"
		public Keyword getNormalKeyword_2() { return cNormalKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Mean=uncert_Mean StdDev=uncert_StdDev? Variance=uncert_Variance?
		//
		//CoefficientOfVariance=uncert_CoefficientOfVariance? TAG_OPEN2 "Normal" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Mean=uncert_Mean StdDev=uncert_StdDev? Variance=uncert_Variance?
		//
		//CoefficientOfVariance=uncert_CoefficientOfVariance? TAG_OPEN2 "Normal" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Mean=uncert_Mean
		public Assignment getMeanAssignment_4_1_1() { return cMeanAssignment_4_1_1; }

		//uncert_Mean
		public RuleCall getMeanUncert_MeanParserRuleCall_4_1_1_0() { return cMeanUncert_MeanParserRuleCall_4_1_1_0; }

		//StdDev=uncert_StdDev?
		public Assignment getStdDevAssignment_4_1_2() { return cStdDevAssignment_4_1_2; }

		//uncert_StdDev
		public RuleCall getStdDevUncert_StdDevParserRuleCall_4_1_2_0() { return cStdDevUncert_StdDevParserRuleCall_4_1_2_0; }

		//Variance=uncert_Variance?
		public Assignment getVarianceAssignment_4_1_3() { return cVarianceAssignment_4_1_3; }

		//uncert_Variance
		public RuleCall getVarianceUncert_VarianceParserRuleCall_4_1_3_0() { return cVarianceUncert_VarianceParserRuleCall_4_1_3_0; }

		//CoefficientOfVariance=uncert_CoefficientOfVariance?
		public Assignment getCoefficientOfVarianceAssignment_4_1_4() { return cCoefficientOfVarianceAssignment_4_1_4; }

		//uncert_CoefficientOfVariance
		public RuleCall getCoefficientOfVarianceUncert_CoefficientOfVarianceParserRuleCall_4_1_4_0() { return cCoefficientOfVarianceUncert_CoefficientOfVarianceParserRuleCall_4_1_4_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_5() { return cTAG_OPEN2ParserRuleCall_4_1_5; }

		//"Normal"
		public Keyword getNormalKeyword_4_1_6() { return cNormalKeyword_4_1_6; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_7() { return cTAG_CLOSEParserRuleCall_4_1_7; }
	}

	public class Uncert_CoefficientOfVarianceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uncert_CoefficientOfVariance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUncert_CoefficientOfVarianceAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cCoefficientOfVarianceKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprUncert_DistributionParamTypeParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cCoefficientOfVarianceKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//uncert_CoefficientOfVariance:
		//
		//	{uncert_CoefficientOfVariance} TAG_OPEN "CoefficientOfVariance" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Expr=uncert_DistributionParamType TAG_OPEN2 "CoefficientOfVariance" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{uncert_CoefficientOfVariance} TAG_OPEN "CoefficientOfVariance" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//Expr=uncert_DistributionParamType TAG_OPEN2 "CoefficientOfVariance" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{uncert_CoefficientOfVariance}
		public Action getUncert_CoefficientOfVarianceAction_0() { return cUncert_CoefficientOfVarianceAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"CoefficientOfVariance"
		public Keyword getCoefficientOfVarianceKeyword_2() { return cCoefficientOfVarianceKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=uncert_DistributionParamType TAG_OPEN2 "CoefficientOfVariance" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=uncert_DistributionParamType TAG_OPEN2 "CoefficientOfVariance" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=uncert_DistributionParamType
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//uncert_DistributionParamType
		public RuleCall getExprUncert_DistributionParamTypeParserRuleCall_4_1_1_0() { return cExprUncert_DistributionParamTypeParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"CoefficientOfVariance"
		public Keyword getCoefficientOfVarianceKeyword_4_1_3() { return cCoefficientOfVarianceKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Uncert_StdDevElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uncert_StdDev");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUncert_StdDevAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cStdDevKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprUncert_DistributionParamTypeParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cStdDevKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//uncert_StdDev:
		//
		//	{uncert_StdDev} TAG_OPEN "StdDev" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr+=uncert_DistributionParamType*
		//
		//	TAG_OPEN2 "StdDev" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{uncert_StdDev} TAG_OPEN "StdDev" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr+=uncert_DistributionParamType* TAG_OPEN2
		//
		//"StdDev" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{uncert_StdDev}
		public Action getUncert_StdDevAction_0() { return cUncert_StdDevAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"StdDev"
		public Keyword getStdDevKeyword_2() { return cStdDevKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr+=uncert_DistributionParamType* TAG_OPEN2 "StdDev" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr+=uncert_DistributionParamType* TAG_OPEN2 "StdDev" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr+=uncert_DistributionParamType*
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//uncert_DistributionParamType
		public RuleCall getExprUncert_DistributionParamTypeParserRuleCall_4_1_1_0() { return cExprUncert_DistributionParamTypeParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"StdDev"
		public Keyword getStdDevKeyword_4_1_3() { return cStdDevKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Uncert_DistributionParamTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uncert_DistributionParamType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cEquationAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cEquationMath_EquationTypeParserRuleCall_0_0 = (RuleCall)cEquationAssignment_0.eContents().get(0);
		private final Assignment cScalarAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cScalarMath_ScalarTypeParserRuleCall_1_0 = (RuleCall)cScalarAssignment_1.eContents().get(0);
		private final Assignment cVarAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cVarMath_VarTypeParserRuleCall_2_0 = (RuleCall)cVarAssignment_2.eContents().get(0);
		
		//uncert_DistributionParamType:
		//
		//	Equation=Math_EquationType | Scalar=Math_ScalarType | Var=Math_VarType;
		public ParserRule getRule() { return rule; }

		//Equation=Math_EquationType | Scalar=Math_ScalarType | Var=Math_VarType
		public Alternatives getAlternatives() { return cAlternatives; }

		//Equation=Math_EquationType
		public Assignment getEquationAssignment_0() { return cEquationAssignment_0; }

		//Math_EquationType
		public RuleCall getEquationMath_EquationTypeParserRuleCall_0_0() { return cEquationMath_EquationTypeParserRuleCall_0_0; }

		//Scalar=Math_ScalarType
		public Assignment getScalarAssignment_1() { return cScalarAssignment_1; }

		//Math_ScalarType
		public RuleCall getScalarMath_ScalarTypeParserRuleCall_1_0() { return cScalarMath_ScalarTypeParserRuleCall_1_0; }

		//Var=Math_VarType
		public Assignment getVarAssignment_2() { return cVarAssignment_2; }

		//Math_VarType
		public RuleCall getVarMath_VarTypeParserRuleCall_2_0() { return cVarMath_VarTypeParserRuleCall_2_0; }
	}

	public class Uncert_MeanParamTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uncert_MeanParamType");
		private final Assignment cExprAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cExprUncert_DistributionParamTypeParserRuleCall_0 = (RuleCall)cExprAssignment.eContents().get(0);
		
		//uncert_MeanParamType:
		//
		//	Expr=uncert_DistributionParamType;
		public ParserRule getRule() { return rule; }

		//Expr=uncert_DistributionParamType
		public Assignment getExprAssignment() { return cExprAssignment; }

		//uncert_DistributionParamType
		public RuleCall getExprUncert_DistributionParamTypeParserRuleCall_0() { return cExprUncert_DistributionParamTypeParserRuleCall_0; }
	}

	public class Uncert_MeanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uncert_Mean");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUncert_MeanAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cMeanKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprUncert_MeanParamTypeParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cMeanKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//uncert_Mean:
		//
		//	{uncert_Mean} TAG_OPEN "Mean" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=uncert_MeanParamType TAG_OPEN2 "Mean"
		//
		//	TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{uncert_Mean} TAG_OPEN "Mean" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=uncert_MeanParamType TAG_OPEN2 "Mean"
		//
		//TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{uncert_Mean}
		public Action getUncert_MeanAction_0() { return cUncert_MeanAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Mean"
		public Keyword getMeanKeyword_2() { return cMeanKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=uncert_MeanParamType TAG_OPEN2 "Mean" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=uncert_MeanParamType TAG_OPEN2 "Mean" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=uncert_MeanParamType
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//uncert_MeanParamType
		public RuleCall getExprUncert_MeanParamTypeParserRuleCall_4_1_1_0() { return cExprUncert_MeanParamTypeParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Mean"
		public Keyword getMeanKeyword_4_1_3() { return cMeanKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Uncert_VarianceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uncert_Variance");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUncert_VarianceAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cVarianceKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprUncert_DistributionParamTypeParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cVarianceKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//uncert_Variance:
		//
		//	{uncert_Variance} TAG_OPEN "Variance" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=uncert_DistributionParamType
		//
		//	TAG_OPEN2 "Variance" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{uncert_Variance} TAG_OPEN "Variance" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=uncert_DistributionParamType
		//
		//TAG_OPEN2 "Variance" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{uncert_Variance}
		public Action getUncert_VarianceAction_0() { return cUncert_VarianceAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Variance"
		public Keyword getVarianceKeyword_2() { return cVarianceKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=uncert_DistributionParamType TAG_OPEN2 "Variance" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=uncert_DistributionParamType TAG_OPEN2 "Variance" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=uncert_DistributionParamType
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//uncert_DistributionParamType
		public RuleCall getExprUncert_DistributionParamTypeParserRuleCall_4_1_1_0() { return cExprUncert_DistributionParamTypeParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Variance"
		public Keyword getVarianceKeyword_4_1_3() { return cVarianceKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Uncert_PDFElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uncert_PDF");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUncert_PDFAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cPDFKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cFunctionParameterAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cFunctionParameterUncert_ParameterDefinitionTypeParserRuleCall_4_1_1_0 = (RuleCall)cFunctionParameterAssignment_4_1_1.eContents().get(0);
		private final Assignment cEquationAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cEquationMath_EquationTypeParserRuleCall_4_1_2_0 = (RuleCall)cEquationAssignment_4_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		private final Keyword cPDFKeyword_4_1_4 = (Keyword)cGroup_4_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_5 = (RuleCall)cGroup_4_1.eContents().get(5);
		
		//uncert_PDF:
		//
		//	{uncert_PDF} TAG_OPEN "PDF" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//	FunctionParameter+=uncert_ParameterDefinitionType* Equation=Math_EquationType TAG_OPEN2 "PDF" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{uncert_PDF} TAG_OPEN "PDF" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE FunctionParameter+=uncert_ParameterDefinitionType*
		//
		//Equation=Math_EquationType TAG_OPEN2 "PDF" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{uncert_PDF}
		public Action getUncert_PDFAction_0() { return cUncert_PDFAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"PDF"
		public Keyword getPDFKeyword_2() { return cPDFKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE FunctionParameter+=uncert_ParameterDefinitionType* Equation=Math_EquationType TAG_OPEN2 "PDF"
		//
		//TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE FunctionParameter+=uncert_ParameterDefinitionType* Equation=Math_EquationType TAG_OPEN2 "PDF" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//FunctionParameter+=uncert_ParameterDefinitionType*
		public Assignment getFunctionParameterAssignment_4_1_1() { return cFunctionParameterAssignment_4_1_1; }

		//uncert_ParameterDefinitionType
		public RuleCall getFunctionParameterUncert_ParameterDefinitionTypeParserRuleCall_4_1_1_0() { return cFunctionParameterUncert_ParameterDefinitionTypeParserRuleCall_4_1_1_0; }

		//Equation=Math_EquationType
		public Assignment getEquationAssignment_4_1_2() { return cEquationAssignment_4_1_2; }

		//Math_EquationType
		public RuleCall getEquationMath_EquationTypeParserRuleCall_4_1_2_0() { return cEquationMath_EquationTypeParserRuleCall_4_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_3() { return cTAG_OPEN2ParserRuleCall_4_1_3; }

		//"PDF"
		public Keyword getPDFKeyword_4_1_4() { return cPDFKeyword_4_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_5() { return cTAG_CLOSEParserRuleCall_4_1_5; }
	}

	public class Uncert_ParameterDefinitionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uncert_ParameterDefinitionType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFunctionParameterKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdMath_idParserRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameCt_nameParserRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_5_1_1 = (RuleCall)cGroup_5_1.eContents().get(1);
		private final Keyword cFunctionParameterKeyword_5_1_2 = (Keyword)cGroup_5_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_3 = (RuleCall)cGroup_5_1.eContents().get(3);
		
		//uncert_ParameterDefinitionType:
		//
		//	TAG_OPEN "FunctionParameter" xmlns+=XS_xmlns* id=Math_id name=ct_name? (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//	"FunctionParameter" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "FunctionParameter" xmlns+=XS_xmlns* id=Math_id name=ct_name? (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//"FunctionParameter" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"FunctionParameter"
		public Keyword getFunctionParameterKeyword_1() { return cFunctionParameterKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//id=Math_id
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }

		//Math_id
		public RuleCall getIdMath_idParserRuleCall_3_0() { return cIdMath_idParserRuleCall_3_0; }

		//name=ct_name?
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }

		//ct_name
		public RuleCall getNameCt_nameParserRuleCall_4_0() { return cNameCt_nameParserRuleCall_4_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "FunctionParameter" TAG_CLOSE
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_5_0() { return cTAG_CLOSE2ParserRuleCall_5_0; }

		//TAG_CLOSE TAG_OPEN2 "FunctionParameter" TAG_CLOSE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_0() { return cTAG_CLOSEParserRuleCall_5_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_5_1_1() { return cTAG_OPEN2ParserRuleCall_5_1_1; }

		//"FunctionParameter"
		public Keyword getFunctionParameterKeyword_5_1_2() { return cFunctionParameterKeyword_5_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_3() { return cTAG_CLOSEParserRuleCall_5_1_3; }
	}

	public class Uncert_PoisonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uncert_Poison");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUncert_PoisonAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cPoisonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cRateAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cRateUncert_RateParserRuleCall_4_1_1_0 = (RuleCall)cRateAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cPoisonKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//uncert_Poison:
		//
		//	{uncert_Poison} TAG_OPEN "Poison" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Rate=uncert_Rate TAG_OPEN2 "Poison"
		//
		//	TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{uncert_Poison} TAG_OPEN "Poison" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Rate=uncert_Rate TAG_OPEN2 "Poison"
		//
		//TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{uncert_Poison}
		public Action getUncert_PoisonAction_0() { return cUncert_PoisonAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Poison"
		public Keyword getPoisonKeyword_2() { return cPoisonKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Rate=uncert_Rate TAG_OPEN2 "Poison" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Rate=uncert_Rate TAG_OPEN2 "Poison" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Rate=uncert_Rate
		public Assignment getRateAssignment_4_1_1() { return cRateAssignment_4_1_1; }

		//uncert_Rate
		public RuleCall getRateUncert_RateParserRuleCall_4_1_1_0() { return cRateUncert_RateParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Poison"
		public Keyword getPoisonKeyword_4_1_3() { return cPoisonKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Uncert_RateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uncert_Rate");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUncert_RateAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cRateKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprUncert_DistributionParamTypeParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cRateKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//uncert_Rate:
		//
		//	{uncert_Rate} TAG_OPEN "Rate" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=uncert_DistributionParamType TAG_OPEN2
		//
		//	"Rate" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{uncert_Rate} TAG_OPEN "Rate" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=uncert_DistributionParamType TAG_OPEN2
		//
		//"Rate" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{uncert_Rate}
		public Action getUncert_RateAction_0() { return cUncert_RateAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Rate"
		public Keyword getRateKeyword_2() { return cRateKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=uncert_DistributionParamType TAG_OPEN2 "Rate" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=uncert_DistributionParamType TAG_OPEN2 "Rate" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=uncert_DistributionParamType
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//uncert_DistributionParamType
		public RuleCall getExprUncert_DistributionParamTypeParserRuleCall_4_1_1_0() { return cExprUncert_DistributionParamTypeParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Rate"
		public Keyword getRateKeyword_4_1_3() { return cRateKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Uncert_Student_tElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uncert_Student_t");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUncert_Student_tAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cStudentTKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cLocationAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cLocationUncert_LocationParserRuleCall_4_1_1_0 = (RuleCall)cLocationAssignment_4_1_1.eContents().get(0);
		private final Assignment cScaleAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cScaleUncert_ScaleParserRuleCall_4_1_2_0 = (RuleCall)cScaleAssignment_4_1_2.eContents().get(0);
		private final Assignment cDegreesOfFreedomAssignment_4_1_3 = (Assignment)cGroup_4_1.eContents().get(3);
		private final RuleCall cDegreesOfFreedomUncertDegreesOfFreedomParserRuleCall_4_1_3_0 = (RuleCall)cDegreesOfFreedomAssignment_4_1_3.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		private final Keyword cStudentTKeyword_4_1_5 = (Keyword)cGroup_4_1.eContents().get(5);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_6 = (RuleCall)cGroup_4_1.eContents().get(6);
		
		//uncert_Student_t:
		//
		//	{uncert_Student_t} TAG_OPEN "Student-t" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Location=uncert_Location
		//
		//	Scale=uncert_Scale DegreesOfFreedom=uncertDegreesOfFreedom TAG_OPEN2 "Student-t" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{uncert_Student_t} TAG_OPEN "Student-t" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Location=uncert_Location
		//
		//Scale=uncert_Scale DegreesOfFreedom=uncertDegreesOfFreedom TAG_OPEN2 "Student-t" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{uncert_Student_t}
		public Action getUncert_Student_tAction_0() { return cUncert_Student_tAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Student-t"
		public Keyword getStudentTKeyword_2() { return cStudentTKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Location=uncert_Location Scale=uncert_Scale DegreesOfFreedom=uncertDegreesOfFreedom TAG_OPEN2
		//
		//"Student-t" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Location=uncert_Location Scale=uncert_Scale DegreesOfFreedom=uncertDegreesOfFreedom TAG_OPEN2 "Student-t"
		//
		//TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Location=uncert_Location
		public Assignment getLocationAssignment_4_1_1() { return cLocationAssignment_4_1_1; }

		//uncert_Location
		public RuleCall getLocationUncert_LocationParserRuleCall_4_1_1_0() { return cLocationUncert_LocationParserRuleCall_4_1_1_0; }

		//Scale=uncert_Scale
		public Assignment getScaleAssignment_4_1_2() { return cScaleAssignment_4_1_2; }

		//uncert_Scale
		public RuleCall getScaleUncert_ScaleParserRuleCall_4_1_2_0() { return cScaleUncert_ScaleParserRuleCall_4_1_2_0; }

		//DegreesOfFreedom=uncertDegreesOfFreedom
		public Assignment getDegreesOfFreedomAssignment_4_1_3() { return cDegreesOfFreedomAssignment_4_1_3; }

		//uncertDegreesOfFreedom
		public RuleCall getDegreesOfFreedomUncertDegreesOfFreedomParserRuleCall_4_1_3_0() { return cDegreesOfFreedomUncertDegreesOfFreedomParserRuleCall_4_1_3_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_4() { return cTAG_OPEN2ParserRuleCall_4_1_4; }

		//"Student-t"
		public Keyword getStudentTKeyword_4_1_5() { return cStudentTKeyword_4_1_5; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_6() { return cTAG_CLOSEParserRuleCall_4_1_6; }
	}

	public class UncertDegreesOfFreedomElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uncertDegreesOfFreedom");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUncertDegreesOfFreedomAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cDegreesOfFreedomKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprUncert_DistributionParamTypeParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cDegreesOfFreedomKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//uncertDegreesOfFreedom:
		//
		//	{uncertDegreesOfFreedom} TAG_OPEN "DegreesOfFreedom" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Expr=uncert_DistributionParamType TAG_OPEN2 "DegreesOfFreedom" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{uncertDegreesOfFreedom} TAG_OPEN "DegreesOfFreedom" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
		//
		//Expr=uncert_DistributionParamType TAG_OPEN2 "DegreesOfFreedom" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{uncertDegreesOfFreedom}
		public Action getUncertDegreesOfFreedomAction_0() { return cUncertDegreesOfFreedomAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"DegreesOfFreedom"
		public Keyword getDegreesOfFreedomKeyword_2() { return cDegreesOfFreedomKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=uncert_DistributionParamType TAG_OPEN2 "DegreesOfFreedom" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=uncert_DistributionParamType TAG_OPEN2 "DegreesOfFreedom" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=uncert_DistributionParamType
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//uncert_DistributionParamType
		public RuleCall getExprUncert_DistributionParamTypeParserRuleCall_4_1_1_0() { return cExprUncert_DistributionParamTypeParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"DegreesOfFreedom"
		public Keyword getDegreesOfFreedomKeyword_4_1_3() { return cDegreesOfFreedomKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Uncert_ScaleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uncert_Scale");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUncert_ScaleAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cScaleKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprUncert_DistributionParamTypeParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cScaleKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//uncert_Scale:
		//
		//	{uncert_Scale} TAG_OPEN "Scale" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=uncert_DistributionParamType TAG_OPEN2
		//
		//	"Scale" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{uncert_Scale} TAG_OPEN "Scale" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=uncert_DistributionParamType TAG_OPEN2
		//
		//"Scale" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{uncert_Scale}
		public Action getUncert_ScaleAction_0() { return cUncert_ScaleAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Scale"
		public Keyword getScaleKeyword_2() { return cScaleKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=uncert_DistributionParamType TAG_OPEN2 "Scale" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=uncert_DistributionParamType TAG_OPEN2 "Scale" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=uncert_DistributionParamType
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//uncert_DistributionParamType
		public RuleCall getExprUncert_DistributionParamTypeParserRuleCall_4_1_1_0() { return cExprUncert_DistributionParamTypeParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Scale"
		public Keyword getScaleKeyword_4_1_3() { return cScaleKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Uncert_LocationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uncert_Location");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUncert_LocationAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cLocationKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprUncert_DistributionParamTypeParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cLocationKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//uncert_Location:
		//
		//	{uncert_Location} TAG_OPEN "Location" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=uncert_DistributionParamType
		//
		//	TAG_OPEN2 "Location" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{uncert_Location} TAG_OPEN "Location" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=uncert_DistributionParamType
		//
		//TAG_OPEN2 "Location" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{uncert_Location}
		public Action getUncert_LocationAction_0() { return cUncert_LocationAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Location"
		public Keyword getLocationKeyword_2() { return cLocationKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=uncert_DistributionParamType TAG_OPEN2 "Location" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=uncert_DistributionParamType TAG_OPEN2 "Location" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=uncert_DistributionParamType
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//uncert_DistributionParamType
		public RuleCall getExprUncert_DistributionParamTypeParserRuleCall_4_1_1_0() { return cExprUncert_DistributionParamTypeParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Location"
		public Keyword getLocationKeyword_4_1_3() { return cLocationKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Uncert_UniformElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "uncert_Uniform");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cUncert_UniformAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cUniformKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_1 = (RuleCall)cGroup_4_1.eContents().get(1);
		private final Keyword cUniformKeyword_4_1_2 = (Keyword)cGroup_4_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		
		//uncert_Uniform:
		//
		//	{uncert_Uniform} TAG_OPEN "Uniform" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Uniform" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{uncert_Uniform} TAG_OPEN "Uniform" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Uniform" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{uncert_Uniform}
		public Action getUncert_UniformAction_0() { return cUncert_UniformAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Uniform"
		public Keyword getUniformKeyword_2() { return cUniformKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Uniform" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE TAG_OPEN2 "Uniform" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_1() { return cTAG_OPEN2ParserRuleCall_4_1_1; }

		//"Uniform"
		public Keyword getUniformKeyword_4_1_2() { return cUniformKeyword_4_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_3() { return cTAG_CLOSEParserRuleCall_4_1_3; }
	}

	public class Math_EquationTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_EquationType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMath_EquationTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cEquationKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Assignment cWrittenVersionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cWrittenVersionCt_writtenVersionParserRuleCall_4_0 = (RuleCall)cWrittenVersionAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final Assignment cExprAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cExprMath_EquationTypeContentParserRuleCall_5_1_1_0 = (RuleCall)cExprAssignment_5_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_5_1_2 = (RuleCall)cGroup_5_1.eContents().get(2);
		private final Keyword cEquationKeyword_5_1_3 = (Keyword)cGroup_5_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_4 = (RuleCall)cGroup_5_1.eContents().get(4);
		
		//// ***************************************************************************************************
		//
		//// ***Math***
		//
		//// ***************************************************************************************************
		//
		//Math_EquationType:
		//
		//	{Math_EquationType} TAG_OPEN "Equation" xmlns+=XS_xmlns* writtenVersion=ct_writtenVersion (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Expr=Math_EquationTypeContent TAG_OPEN2 "Equation" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{Math_EquationType} TAG_OPEN "Equation" xmlns+=XS_xmlns* writtenVersion=ct_writtenVersion (TAG_CLOSE2 | TAG_CLOSE
		//
		//Expr=Math_EquationTypeContent TAG_OPEN2 "Equation" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{Math_EquationType}
		public Action getMath_EquationTypeAction_0() { return cMath_EquationTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Equation"
		public Keyword getEquationKeyword_2() { return cEquationKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//writtenVersion=ct_writtenVersion
		public Assignment getWrittenVersionAssignment_4() { return cWrittenVersionAssignment_4; }

		//ct_writtenVersion
		public RuleCall getWrittenVersionCt_writtenVersionParserRuleCall_4_0() { return cWrittenVersionCt_writtenVersionParserRuleCall_4_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=Math_EquationTypeContent TAG_OPEN2 "Equation" TAG_CLOSE
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_5_0() { return cTAG_CLOSE2ParserRuleCall_5_0; }

		//TAG_CLOSE Expr=Math_EquationTypeContent TAG_OPEN2 "Equation" TAG_CLOSE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_0() { return cTAG_CLOSEParserRuleCall_5_1_0; }

		//Expr=Math_EquationTypeContent
		public Assignment getExprAssignment_5_1_1() { return cExprAssignment_5_1_1; }

		//Math_EquationTypeContent
		public RuleCall getExprMath_EquationTypeContentParserRuleCall_5_1_1_0() { return cExprMath_EquationTypeContentParserRuleCall_5_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_5_1_2() { return cTAG_OPEN2ParserRuleCall_5_1_2; }

		//"Equation"
		public Keyword getEquationKeyword_5_1_3() { return cEquationKeyword_5_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_4() { return cTAG_CLOSEParserRuleCall_5_1_4; }
	}

	public class Math_EquationTypeContentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_EquationTypeContent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cMath_EquationTypeContentAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Assignment cScalarAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cScalarMath_ScalarTypeParserRuleCall_0_1_0 = (RuleCall)cScalarAssignment_0_1.eContents().get(0);
		private final Assignment cVarAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cVarMath_VarTypeParserRuleCall_1_0 = (RuleCall)cVarAssignment_1.eContents().get(0);
		private final Assignment cBinopAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cBinopMath_BinopTypeParserRuleCall_2_0 = (RuleCall)cBinopAssignment_2.eContents().get(0);
		private final Assignment cUniopAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cUniopMath_UniopTypeParserRuleCall_3_0 = (RuleCall)cUniopAssignment_3.eContents().get(0);
		private final Assignment cPiecewiseAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cPiecewiseMath_PiecewiseTypeParserRuleCall_4_0 = (RuleCall)cPiecewiseAssignment_4.eContents().get(0);
		
		//Math_EquationTypeContent:
		//
		//	{Math_EquationTypeContent} Scalar=Math_ScalarType | Var=Math_VarType | Binop=Math_BinopType | Uniop=Math_UniopType |
		//
		//	Piecewise=Math_PiecewiseType;
		public ParserRule getRule() { return rule; }

		//{Math_EquationTypeContent} Scalar=Math_ScalarType | Var=Math_VarType | Binop=Math_BinopType | Uniop=Math_UniopType |
		//
		//Piecewise=Math_PiecewiseType
		public Alternatives getAlternatives() { return cAlternatives; }

		//{Math_EquationTypeContent} Scalar=Math_ScalarType
		public Group getGroup_0() { return cGroup_0; }

		//{Math_EquationTypeContent}
		public Action getMath_EquationTypeContentAction_0_0() { return cMath_EquationTypeContentAction_0_0; }

		//Scalar=Math_ScalarType
		public Assignment getScalarAssignment_0_1() { return cScalarAssignment_0_1; }

		//Math_ScalarType
		public RuleCall getScalarMath_ScalarTypeParserRuleCall_0_1_0() { return cScalarMath_ScalarTypeParserRuleCall_0_1_0; }

		//Var=Math_VarType
		public Assignment getVarAssignment_1() { return cVarAssignment_1; }

		//Math_VarType
		public RuleCall getVarMath_VarTypeParserRuleCall_1_0() { return cVarMath_VarTypeParserRuleCall_1_0; }

		//Binop=Math_BinopType
		public Assignment getBinopAssignment_2() { return cBinopAssignment_2; }

		//Math_BinopType
		public RuleCall getBinopMath_BinopTypeParserRuleCall_2_0() { return cBinopMath_BinopTypeParserRuleCall_2_0; }

		//Uniop=Math_UniopType
		public Assignment getUniopAssignment_3() { return cUniopAssignment_3; }

		//Math_UniopType
		public RuleCall getUniopMath_UniopTypeParserRuleCall_3_0() { return cUniopMath_UniopTypeParserRuleCall_3_0; }

		//Piecewise=Math_PiecewiseType
		public Assignment getPiecewiseAssignment_4() { return cPiecewiseAssignment_4; }

		//Math_PiecewiseType
		public RuleCall getPiecewiseMath_PiecewiseTypeParserRuleCall_4_0() { return cPiecewiseMath_PiecewiseTypeParserRuleCall_4_0; }
	}

	public class Math_ScalarTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_ScalarType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMath_ScalarTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cScalarKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Assignment cValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cValueCt_Decimal_ValueParserRuleCall_4_0 = (RuleCall)cValueAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_5_1_1 = (RuleCall)cGroup_5_1.eContents().get(1);
		private final Keyword cScalarKeyword_5_1_2 = (Keyword)cGroup_5_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_3 = (RuleCall)cGroup_5_1.eContents().get(3);
		
		//Math_ScalarType:
		//
		//	{Math_ScalarType} TAG_OPEN "Scalar" xmlns+=XS_xmlns* value=ct_Decimal_Value (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//	"Scalar" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{Math_ScalarType} TAG_OPEN "Scalar" xmlns+=XS_xmlns* value=ct_Decimal_Value (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Scalar"
		//
		//TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{Math_ScalarType}
		public Action getMath_ScalarTypeAction_0() { return cMath_ScalarTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Scalar"
		public Keyword getScalarKeyword_2() { return cScalarKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//value=ct_Decimal_Value
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//ct_Decimal_Value
		public RuleCall getValueCt_Decimal_ValueParserRuleCall_4_0() { return cValueCt_Decimal_ValueParserRuleCall_4_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Scalar" TAG_CLOSE
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_5_0() { return cTAG_CLOSE2ParserRuleCall_5_0; }

		//TAG_CLOSE TAG_OPEN2 "Scalar" TAG_CLOSE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_0() { return cTAG_CLOSEParserRuleCall_5_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_5_1_1() { return cTAG_OPEN2ParserRuleCall_5_1_1; }

		//"Scalar"
		public Keyword getScalarKeyword_5_1_2() { return cScalarKeyword_5_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_3() { return cTAG_CLOSEParserRuleCall_5_1_3; }
	}

	public class Math_VarTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_VarType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMath_VarTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cVarKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Assignment cBlockAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cBlockMath_blockParserRuleCall_4_0 = (RuleCall)cBlockAssignment_4.eContents().get(0);
		private final Assignment cSymbIdAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSymbIdMath_symbIdParserRuleCall_5_0 = (RuleCall)cSymbIdAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_6_0 = (RuleCall)cAlternatives_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_0 = (RuleCall)cGroup_6_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_6_1_1 = (RuleCall)cGroup_6_1.eContents().get(1);
		private final Keyword cVarKeyword_6_1_2 = (Keyword)cGroup_6_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_3 = (RuleCall)cGroup_6_1.eContents().get(3);
		
		//Math_VarType:
		//
		//	{Math_VarType} TAG_OPEN "Var" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//	"Var" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{Math_VarType} TAG_OPEN "Var" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//"Var" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{Math_VarType}
		public Action getMath_VarTypeAction_0() { return cMath_VarTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Var"
		public Keyword getVarKeyword_2() { return cVarKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//block=Math_block?
		public Assignment getBlockAssignment_4() { return cBlockAssignment_4; }

		//Math_block
		public RuleCall getBlockMath_blockParserRuleCall_4_0() { return cBlockMath_blockParserRuleCall_4_0; }

		//symbId=Math_symbId
		public Assignment getSymbIdAssignment_5() { return cSymbIdAssignment_5; }

		//Math_symbId
		public RuleCall getSymbIdMath_symbIdParserRuleCall_5_0() { return cSymbIdMath_symbIdParserRuleCall_5_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Var" TAG_CLOSE
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_6_0() { return cTAG_CLOSE2ParserRuleCall_6_0; }

		//TAG_CLOSE TAG_OPEN2 "Var" TAG_CLOSE
		public Group getGroup_6_1() { return cGroup_6_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_0() { return cTAG_CLOSEParserRuleCall_6_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_6_1_1() { return cTAG_OPEN2ParserRuleCall_6_1_1; }

		//"Var"
		public Keyword getVarKeyword_6_1_2() { return cVarKeyword_6_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_3() { return cTAG_CLOSEParserRuleCall_6_1_3; }
	}

	public class Math_BinopTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_BinopType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMath_BinopTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cBinopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Keyword cOpKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cEqualsSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cOpAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cOpMath_BinopNameParserRuleCall_6_0 = (RuleCall)cOpAssignment_6.eContents().get(0);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_7_0 = (RuleCall)cAlternatives_7.eContents().get(0);
		private final Group cGroup_7_1 = (Group)cAlternatives_7.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_7_1_0 = (RuleCall)cGroup_7_1.eContents().get(0);
		private final Assignment cLeftExprAssignment_7_1_1 = (Assignment)cGroup_7_1.eContents().get(1);
		private final RuleCall cLeftExprMath_ExprTypeParserRuleCall_7_1_1_0 = (RuleCall)cLeftExprAssignment_7_1_1.eContents().get(0);
		private final Assignment cRightExprAssignment_7_1_2 = (Assignment)cGroup_7_1.eContents().get(2);
		private final RuleCall cRightExprMath_ExprTypeParserRuleCall_7_1_2_0 = (RuleCall)cRightExprAssignment_7_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_7_1_3 = (RuleCall)cGroup_7_1.eContents().get(3);
		private final Keyword cBinopKeyword_7_1_4 = (Keyword)cGroup_7_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_7_1_5 = (RuleCall)cGroup_7_1.eContents().get(5);
		
		//Math_BinopType:
		//
		//	{Math_BinopType} TAG_OPEN "Binop" xmlns+=XS_xmlns* "op" "=" op=Math_BinopName (TAG_CLOSE2 | TAG_CLOSE
		//
		//	LeftExpr=Math_ExprType RightExpr=Math_ExprType TAG_OPEN2 "Binop" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{Math_BinopType} TAG_OPEN "Binop" xmlns+=XS_xmlns* "op" "=" op=Math_BinopName (TAG_CLOSE2 | TAG_CLOSE
		//
		//LeftExpr=Math_ExprType RightExpr=Math_ExprType TAG_OPEN2 "Binop" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{Math_BinopType}
		public Action getMath_BinopTypeAction_0() { return cMath_BinopTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Binop"
		public Keyword getBinopKeyword_2() { return cBinopKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//"op"
		public Keyword getOpKeyword_4() { return cOpKeyword_4; }

		//"="
		public Keyword getEqualsSignKeyword_5() { return cEqualsSignKeyword_5; }

		//op=Math_BinopName
		public Assignment getOpAssignment_6() { return cOpAssignment_6; }

		//Math_BinopName
		public RuleCall getOpMath_BinopNameParserRuleCall_6_0() { return cOpMath_BinopNameParserRuleCall_6_0; }

		//TAG_CLOSE2 | TAG_CLOSE LeftExpr=Math_ExprType RightExpr=Math_ExprType TAG_OPEN2 "Binop" TAG_CLOSE
		public Alternatives getAlternatives_7() { return cAlternatives_7; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_7_0() { return cTAG_CLOSE2ParserRuleCall_7_0; }

		//TAG_CLOSE LeftExpr=Math_ExprType RightExpr=Math_ExprType TAG_OPEN2 "Binop" TAG_CLOSE
		public Group getGroup_7_1() { return cGroup_7_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_7_1_0() { return cTAG_CLOSEParserRuleCall_7_1_0; }

		//LeftExpr=Math_ExprType
		public Assignment getLeftExprAssignment_7_1_1() { return cLeftExprAssignment_7_1_1; }

		//Math_ExprType
		public RuleCall getLeftExprMath_ExprTypeParserRuleCall_7_1_1_0() { return cLeftExprMath_ExprTypeParserRuleCall_7_1_1_0; }

		//RightExpr=Math_ExprType
		public Assignment getRightExprAssignment_7_1_2() { return cRightExprAssignment_7_1_2; }

		//Math_ExprType
		public RuleCall getRightExprMath_ExprTypeParserRuleCall_7_1_2_0() { return cRightExprMath_ExprTypeParserRuleCall_7_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_7_1_3() { return cTAG_OPEN2ParserRuleCall_7_1_3; }

		//"Binop"
		public Keyword getBinopKeyword_7_1_4() { return cBinopKeyword_7_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_7_1_5() { return cTAG_CLOSEParserRuleCall_7_1_5; }
	}

	public class Math_UniopTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_UniopType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMath_UniopTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cUniopKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Keyword cOpKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cEqualsSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cOpAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cOpMath_UniopNameParserRuleCall_6_0 = (RuleCall)cOpAssignment_6.eContents().get(0);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_7_0 = (RuleCall)cAlternatives_7.eContents().get(0);
		private final Group cGroup_7_1 = (Group)cAlternatives_7.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_7_1_0 = (RuleCall)cGroup_7_1.eContents().get(0);
		private final Assignment cExprAssignment_7_1_1 = (Assignment)cGroup_7_1.eContents().get(1);
		private final RuleCall cExprMath_ExprTypeParserRuleCall_7_1_1_0 = (RuleCall)cExprAssignment_7_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_7_1_2 = (RuleCall)cGroup_7_1.eContents().get(2);
		private final Keyword cUniopKeyword_7_1_3 = (Keyword)cGroup_7_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_7_1_4 = (RuleCall)cGroup_7_1.eContents().get(4);
		
		//Math_UniopType:
		//
		//	{Math_UniopType} TAG_OPEN "Uniop" xmlns+=XS_xmlns* "op" "=" op=Math_UniopName (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Expr=Math_ExprType TAG_OPEN2 "Uniop" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{Math_UniopType} TAG_OPEN "Uniop" xmlns+=XS_xmlns* "op" "=" op=Math_UniopName (TAG_CLOSE2 | TAG_CLOSE Expr=Math_ExprType
		//
		//TAG_OPEN2 "Uniop" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{Math_UniopType}
		public Action getMath_UniopTypeAction_0() { return cMath_UniopTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Uniop"
		public Keyword getUniopKeyword_2() { return cUniopKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//"op"
		public Keyword getOpKeyword_4() { return cOpKeyword_4; }

		//"="
		public Keyword getEqualsSignKeyword_5() { return cEqualsSignKeyword_5; }

		//op=Math_UniopName
		public Assignment getOpAssignment_6() { return cOpAssignment_6; }

		//Math_UniopName
		public RuleCall getOpMath_UniopNameParserRuleCall_6_0() { return cOpMath_UniopNameParserRuleCall_6_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=Math_ExprType TAG_OPEN2 "Uniop" TAG_CLOSE
		public Alternatives getAlternatives_7() { return cAlternatives_7; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_7_0() { return cTAG_CLOSE2ParserRuleCall_7_0; }

		//TAG_CLOSE Expr=Math_ExprType TAG_OPEN2 "Uniop" TAG_CLOSE
		public Group getGroup_7_1() { return cGroup_7_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_7_1_0() { return cTAG_CLOSEParserRuleCall_7_1_0; }

		//Expr=Math_ExprType
		public Assignment getExprAssignment_7_1_1() { return cExprAssignment_7_1_1; }

		//Math_ExprType
		public RuleCall getExprMath_ExprTypeParserRuleCall_7_1_1_0() { return cExprMath_ExprTypeParserRuleCall_7_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_7_1_2() { return cTAG_OPEN2ParserRuleCall_7_1_2; }

		//"Uniop"
		public Keyword getUniopKeyword_7_1_3() { return cUniopKeyword_7_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_7_1_4() { return cTAG_CLOSEParserRuleCall_7_1_4; }
	}

	public class Math_ExprTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_ExprType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cMath_ExprTypeAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Assignment cScalarAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cScalarMath_ScalarTypeParserRuleCall_0_1_0 = (RuleCall)cScalarAssignment_0_1.eContents().get(0);
		private final Assignment cVarAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cVarMath_VarTypeParserRuleCall_1_0 = (RuleCall)cVarAssignment_1.eContents().get(0);
		private final Assignment cUniopAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cUniopMath_UniopTypeParserRuleCall_2_0 = (RuleCall)cUniopAssignment_2.eContents().get(0);
		private final Assignment cBinopAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cBinopMath_BinopTypeParserRuleCall_3_0 = (RuleCall)cBinopAssignment_3.eContents().get(0);
		private final Assignment cConstantAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cConstantMath_ConstantTypeParserRuleCall_4_0 = (RuleCall)cConstantAssignment_4.eContents().get(0);
		private final Assignment cFunctionCallAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cFunctionCallMath_FunctionCallTypeParserRuleCall_5_0 = (RuleCall)cFunctionCallAssignment_5.eContents().get(0);
		
		//Math_ExprType:
		//
		//	{Math_ExprType} Scalar=Math_ScalarType | Var=Math_VarType | Uniop=Math_UniopType | Binop=Math_BinopType |
		//
		//	Constant=Math_ConstantType | FunctionCall=Math_FunctionCallType;
		public ParserRule getRule() { return rule; }

		//{Math_ExprType} Scalar=Math_ScalarType | Var=Math_VarType | Uniop=Math_UniopType | Binop=Math_BinopType |
		//
		//Constant=Math_ConstantType | FunctionCall=Math_FunctionCallType
		public Alternatives getAlternatives() { return cAlternatives; }

		//{Math_ExprType} Scalar=Math_ScalarType
		public Group getGroup_0() { return cGroup_0; }

		//{Math_ExprType}
		public Action getMath_ExprTypeAction_0_0() { return cMath_ExprTypeAction_0_0; }

		//Scalar=Math_ScalarType
		public Assignment getScalarAssignment_0_1() { return cScalarAssignment_0_1; }

		//Math_ScalarType
		public RuleCall getScalarMath_ScalarTypeParserRuleCall_0_1_0() { return cScalarMath_ScalarTypeParserRuleCall_0_1_0; }

		//Var=Math_VarType
		public Assignment getVarAssignment_1() { return cVarAssignment_1; }

		//Math_VarType
		public RuleCall getVarMath_VarTypeParserRuleCall_1_0() { return cVarMath_VarTypeParserRuleCall_1_0; }

		//Uniop=Math_UniopType
		public Assignment getUniopAssignment_2() { return cUniopAssignment_2; }

		//Math_UniopType
		public RuleCall getUniopMath_UniopTypeParserRuleCall_2_0() { return cUniopMath_UniopTypeParserRuleCall_2_0; }

		//Binop=Math_BinopType
		public Assignment getBinopAssignment_3() { return cBinopAssignment_3; }

		//Math_BinopType
		public RuleCall getBinopMath_BinopTypeParserRuleCall_3_0() { return cBinopMath_BinopTypeParserRuleCall_3_0; }

		//Constant=Math_ConstantType
		public Assignment getConstantAssignment_4() { return cConstantAssignment_4; }

		//Math_ConstantType
		public RuleCall getConstantMath_ConstantTypeParserRuleCall_4_0() { return cConstantMath_ConstantTypeParserRuleCall_4_0; }

		//FunctionCall=Math_FunctionCallType
		public Assignment getFunctionCallAssignment_5() { return cFunctionCallAssignment_5; }

		//Math_FunctionCallType
		public RuleCall getFunctionCallMath_FunctionCallTypeParserRuleCall_5_0() { return cFunctionCallMath_FunctionCallTypeParserRuleCall_5_0; }
	}

	public class Math_ConstantTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_ConstantType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMath_ConstantTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cConstantKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Keyword cOpKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cEqualsSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cOpAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cOpMath_ConstantNameParserRuleCall_6_0 = (RuleCall)cOpAssignment_6.eContents().get(0);
		private final Alternatives cAlternatives_7 = (Alternatives)cGroup.eContents().get(7);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_7_0 = (RuleCall)cAlternatives_7.eContents().get(0);
		private final Group cGroup_7_1 = (Group)cAlternatives_7.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_7_1_0 = (RuleCall)cGroup_7_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_7_1_1 = (RuleCall)cGroup_7_1.eContents().get(1);
		private final Keyword cConstantKeyword_7_1_2 = (Keyword)cGroup_7_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_7_1_3 = (RuleCall)cGroup_7_1.eContents().get(3);
		
		//Math_ConstantType:
		//
		//	{Math_ConstantType} TAG_OPEN "Constant" xmlns+=XS_xmlns* "op" "=" op=Math_ConstantName (TAG_CLOSE2 | TAG_CLOSE
		//
		//	TAG_OPEN2 "Constant" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{Math_ConstantType} TAG_OPEN "Constant" xmlns+=XS_xmlns* "op" "=" op=Math_ConstantName (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//"Constant" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{Math_ConstantType}
		public Action getMath_ConstantTypeAction_0() { return cMath_ConstantTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Constant"
		public Keyword getConstantKeyword_2() { return cConstantKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//"op"
		public Keyword getOpKeyword_4() { return cOpKeyword_4; }

		//"="
		public Keyword getEqualsSignKeyword_5() { return cEqualsSignKeyword_5; }

		//op=Math_ConstantName
		public Assignment getOpAssignment_6() { return cOpAssignment_6; }

		//Math_ConstantName
		public RuleCall getOpMath_ConstantNameParserRuleCall_6_0() { return cOpMath_ConstantNameParserRuleCall_6_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Constant" TAG_CLOSE
		public Alternatives getAlternatives_7() { return cAlternatives_7; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_7_0() { return cTAG_CLOSE2ParserRuleCall_7_0; }

		//TAG_CLOSE TAG_OPEN2 "Constant" TAG_CLOSE
		public Group getGroup_7_1() { return cGroup_7_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_7_1_0() { return cTAG_CLOSEParserRuleCall_7_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_7_1_1() { return cTAG_OPEN2ParserRuleCall_7_1_1; }

		//"Constant"
		public Keyword getConstantKeyword_7_1_2() { return cConstantKeyword_7_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_7_1_3() { return cTAG_CLOSEParserRuleCall_7_1_3; }
	}

	public class Math_FunctionCallTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_FunctionCallType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMath_FunctionCallTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cFunctionCallKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cFunctionnameAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cFunctionnameMath_VarTypeParserRuleCall_4_1_1_0 = (RuleCall)cFunctionnameAssignment_4_1_1.eContents().get(0);
		private final Assignment cFunctionArgumentsAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cFunctionArgumentsMath_FunctionArgumentTypeParserRuleCall_4_1_2_0 = (RuleCall)cFunctionArgumentsAssignment_4_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		private final Keyword cFunctionCallKeyword_4_1_4 = (Keyword)cGroup_4_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_5 = (RuleCall)cGroup_4_1.eContents().get(5);
		
		//Math_FunctionCallType:
		//
		//	{Math_FunctionCallType} TAG_OPEN "FunctionCall" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Functionname=Math_VarType
		//
		//	FunctionArguments+=Math_FunctionArgumentType* TAG_OPEN2 "FunctionCall" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{Math_FunctionCallType} TAG_OPEN "FunctionCall" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Functionname=Math_VarType
		//
		//FunctionArguments+=Math_FunctionArgumentType* TAG_OPEN2 "FunctionCall" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{Math_FunctionCallType}
		public Action getMath_FunctionCallTypeAction_0() { return cMath_FunctionCallTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"FunctionCall"
		public Keyword getFunctionCallKeyword_2() { return cFunctionCallKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Functionname=Math_VarType FunctionArguments+=Math_FunctionArgumentType* TAG_OPEN2 "FunctionCall"
		//
		//TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Functionname=Math_VarType FunctionArguments+=Math_FunctionArgumentType* TAG_OPEN2 "FunctionCall" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Functionname=Math_VarType
		public Assignment getFunctionnameAssignment_4_1_1() { return cFunctionnameAssignment_4_1_1; }

		//Math_VarType
		public RuleCall getFunctionnameMath_VarTypeParserRuleCall_4_1_1_0() { return cFunctionnameMath_VarTypeParserRuleCall_4_1_1_0; }

		//FunctionArguments+=Math_FunctionArgumentType*
		public Assignment getFunctionArgumentsAssignment_4_1_2() { return cFunctionArgumentsAssignment_4_1_2; }

		//Math_FunctionArgumentType
		public RuleCall getFunctionArgumentsMath_FunctionArgumentTypeParserRuleCall_4_1_2_0() { return cFunctionArgumentsMath_FunctionArgumentTypeParserRuleCall_4_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_3() { return cTAG_OPEN2ParserRuleCall_4_1_3; }

		//"FunctionCall"
		public Keyword getFunctionCallKeyword_4_1_4() { return cFunctionCallKeyword_4_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_5() { return cTAG_CLOSEParserRuleCall_4_1_5; }
	}

	public class Math_FunctionArgumentTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_FunctionArgumentType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFunctionArgumentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cSymbIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSymbIdMath_symbIdParserRuleCall_3_0 = (RuleCall)cSymbIdAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprMath_FuncExprTypeParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cFunctionArgumentKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//Math_FunctionArgumentType:
		//
		//	TAG_OPEN "FunctionArgument" xmlns+=XS_xmlns* symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE Expr=Math_FuncExprType
		//
		//	TAG_OPEN2 "FunctionArgument" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "FunctionArgument" xmlns+=XS_xmlns* symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE Expr=Math_FuncExprType TAG_OPEN2
		//
		//"FunctionArgument" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"FunctionArgument"
		public Keyword getFunctionArgumentKeyword_1() { return cFunctionArgumentKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//symbId=Math_symbId
		public Assignment getSymbIdAssignment_3() { return cSymbIdAssignment_3; }

		//Math_symbId
		public RuleCall getSymbIdMath_symbIdParserRuleCall_3_0() { return cSymbIdMath_symbIdParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=Math_FuncExprType TAG_OPEN2 "FunctionArgument" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=Math_FuncExprType TAG_OPEN2 "FunctionArgument" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=Math_FuncExprType
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//Math_FuncExprType
		public RuleCall getExprMath_FuncExprTypeParserRuleCall_4_1_1_0() { return cExprMath_FuncExprTypeParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"FunctionArgument"
		public Keyword getFunctionArgumentKeyword_4_1_3() { return cFunctionArgumentKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Math_FuncExprTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_FuncExprType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cEquationAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cEquationMath_EquationTypeParserRuleCall_0_0 = (RuleCall)cEquationAssignment_0.eContents().get(0);
		private final Assignment cScalarAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cScalarMath_ScalarTypeParserRuleCall_1_0 = (RuleCall)cScalarAssignment_1.eContents().get(0);
		private final Assignment cConstantAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cConstantMath_ConstantTypeParserRuleCall_2_0 = (RuleCall)cConstantAssignment_2.eContents().get(0);
		private final Assignment cVarAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cVarMath_VarTypeParserRuleCall_3_0 = (RuleCall)cVarAssignment_3.eContents().get(0);
		
		//Math_FuncExprType:
		//
		//	Equation=Math_EquationType | Scalar=Math_ScalarType | Constant=Math_ConstantType | Var=Math_VarType;
		public ParserRule getRule() { return rule; }

		//Equation=Math_EquationType | Scalar=Math_ScalarType | Constant=Math_ConstantType | Var=Math_VarType
		public Alternatives getAlternatives() { return cAlternatives; }

		//Equation=Math_EquationType
		public Assignment getEquationAssignment_0() { return cEquationAssignment_0; }

		//Math_EquationType
		public RuleCall getEquationMath_EquationTypeParserRuleCall_0_0() { return cEquationMath_EquationTypeParserRuleCall_0_0; }

		//Scalar=Math_ScalarType
		public Assignment getScalarAssignment_1() { return cScalarAssignment_1; }

		//Math_ScalarType
		public RuleCall getScalarMath_ScalarTypeParserRuleCall_1_0() { return cScalarMath_ScalarTypeParserRuleCall_1_0; }

		//Constant=Math_ConstantType
		public Assignment getConstantAssignment_2() { return cConstantAssignment_2; }

		//Math_ConstantType
		public RuleCall getConstantMath_ConstantTypeParserRuleCall_2_0() { return cConstantMath_ConstantTypeParserRuleCall_2_0; }

		//Var=Math_VarType
		public Assignment getVarAssignment_3() { return cVarAssignment_3; }

		//Math_VarType
		public RuleCall getVarMath_VarTypeParserRuleCall_3_0() { return cVarMath_VarTypeParserRuleCall_3_0; }
	}

	public class Math_PiecewiseTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_PiecewiseType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMath_PiecewiseTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cPiecewiseKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cPiecewiseAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cPiecewiseMath_PieceTypeParserRuleCall_4_1_1_0 = (RuleCall)cPiecewiseAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cPiecewiseKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//Math_PiecewiseType:
		//
		//	{Math_PiecewiseType} TAG_OPEN "Piecewise" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Piecewise+=Math_PieceType*
		//
		//	TAG_OPEN2 "Piecewise" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{Math_PiecewiseType} TAG_OPEN "Piecewise" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Piecewise+=Math_PieceType* TAG_OPEN2
		//
		//"Piecewise" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{Math_PiecewiseType}
		public Action getMath_PiecewiseTypeAction_0() { return cMath_PiecewiseTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Piecewise"
		public Keyword getPiecewiseKeyword_2() { return cPiecewiseKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Piecewise+=Math_PieceType* TAG_OPEN2 "Piecewise" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Piecewise+=Math_PieceType* TAG_OPEN2 "Piecewise" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Piecewise+=Math_PieceType*
		public Assignment getPiecewiseAssignment_4_1_1() { return cPiecewiseAssignment_4_1_1; }

		//Math_PieceType
		public RuleCall getPiecewiseMath_PieceTypeParserRuleCall_4_1_1_0() { return cPiecewiseMath_PieceTypeParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Piecewise"
		public Keyword getPiecewiseKeyword_4_1_3() { return cPiecewiseKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Math_PieceTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_PieceType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMath_PieceTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cPieceKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cContentAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cContentMath_ExprTypeParserRuleCall_4_1_1_0 = (RuleCall)cContentAssignment_4_1_1.eContents().get(0);
		private final Assignment cConditionAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cConditionMath_ConditionTypeParserRuleCall_4_1_2_0 = (RuleCall)cConditionAssignment_4_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		private final Keyword cPieceKeyword_4_1_4 = (Keyword)cGroup_4_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_5 = (RuleCall)cGroup_4_1.eContents().get(5);
		
		//Math_PieceType:
		//
		//	{Math_PieceType} TAG_OPEN "Piece" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Content=Math_ExprType
		//
		//	Condition=Math_ConditionType TAG_OPEN2 "Piece" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{Math_PieceType} TAG_OPEN "Piece" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Content=Math_ExprType
		//
		//Condition=Math_ConditionType TAG_OPEN2 "Piece" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{Math_PieceType}
		public Action getMath_PieceTypeAction_0() { return cMath_PieceTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Piece"
		public Keyword getPieceKeyword_2() { return cPieceKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Content=Math_ExprType Condition=Math_ConditionType TAG_OPEN2 "Piece" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Content=Math_ExprType Condition=Math_ConditionType TAG_OPEN2 "Piece" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Content=Math_ExprType
		public Assignment getContentAssignment_4_1_1() { return cContentAssignment_4_1_1; }

		//Math_ExprType
		public RuleCall getContentMath_ExprTypeParserRuleCall_4_1_1_0() { return cContentMath_ExprTypeParserRuleCall_4_1_1_0; }

		//Condition=Math_ConditionType
		public Assignment getConditionAssignment_4_1_2() { return cConditionAssignment_4_1_2; }

		//Math_ConditionType
		public RuleCall getConditionMath_ConditionTypeParserRuleCall_4_1_2_0() { return cConditionMath_ConditionTypeParserRuleCall_4_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_3() { return cTAG_OPEN2ParserRuleCall_4_1_3; }

		//"Piece"
		public Keyword getPieceKeyword_4_1_4() { return cPieceKeyword_4_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_5() { return cTAG_CLOSEParserRuleCall_4_1_5; }
	}

	public class Math_ConditionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_ConditionType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cConditionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cWrittenVersionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cWrittenVersionCt_writtenVersionParserRuleCall_3_0 = (RuleCall)cWrittenVersionAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprMath_LogicBaseTypeParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cConditionKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//Math_ConditionType:
		//
		//	TAG_OPEN "Condition" xmlns+=XS_xmlns* writtenVersion=ct_writtenVersion (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Expr=Math_LogicBaseType TAG_OPEN2 "Condition" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Condition" xmlns+=XS_xmlns* writtenVersion=ct_writtenVersion (TAG_CLOSE2 | TAG_CLOSE Expr=Math_LogicBaseType
		//
		//TAG_OPEN2 "Condition" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Condition"
		public Keyword getConditionKeyword_1() { return cConditionKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//writtenVersion=ct_writtenVersion
		public Assignment getWrittenVersionAssignment_3() { return cWrittenVersionAssignment_3; }

		//ct_writtenVersion
		public RuleCall getWrittenVersionCt_writtenVersionParserRuleCall_3_0() { return cWrittenVersionCt_writtenVersionParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=Math_LogicBaseType TAG_OPEN2 "Condition" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=Math_LogicBaseType TAG_OPEN2 "Condition" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=Math_LogicBaseType
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//Math_LogicBaseType
		public RuleCall getExprMath_LogicBaseTypeParserRuleCall_4_1_1_0() { return cExprMath_LogicBaseTypeParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Condition"
		public Keyword getConditionKeyword_4_1_3() { return cConditionKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Math_LogicBaseTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_LogicBaseType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cLogicBinopTypeAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cLogicBinopTypeMath_LogicBinopTypeParserRuleCall_0_0 = (RuleCall)cLogicBinopTypeAssignment_0.eContents().get(0);
		private final Assignment cLogicUniopTypeAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cLogicUniopTypeMath_LogicUniopTypeParserRuleCall_1_0 = (RuleCall)cLogicUniopTypeAssignment_1.eContents().get(0);
		private final Assignment cTrueAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cTrueMath_TRUEParserRuleCall_2_0 = (RuleCall)cTrueAssignment_2.eContents().get(0);
		private final Assignment cFalseAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cFalseMath_FALSEParserRuleCall_3_0 = (RuleCall)cFalseAssignment_3.eContents().get(0);
		private final Assignment cOtherwiseAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cOtherwiseMath_OtherwiseParserRuleCall_4_0 = (RuleCall)cOtherwiseAssignment_4.eContents().get(0);
		
		//Math_LogicBaseType:
		//
		//	LogicBinopType=Math_LogicBinopType | LogicUniopType=Math_LogicUniopType | True=Math_TRUE | False=Math_FALSE |
		//
		//	Otherwise=Math_Otherwise;
		public ParserRule getRule() { return rule; }

		//LogicBinopType=Math_LogicBinopType | LogicUniopType=Math_LogicUniopType | True=Math_TRUE | False=Math_FALSE |
		//
		//Otherwise=Math_Otherwise
		public Alternatives getAlternatives() { return cAlternatives; }

		//LogicBinopType=Math_LogicBinopType
		public Assignment getLogicBinopTypeAssignment_0() { return cLogicBinopTypeAssignment_0; }

		//Math_LogicBinopType
		public RuleCall getLogicBinopTypeMath_LogicBinopTypeParserRuleCall_0_0() { return cLogicBinopTypeMath_LogicBinopTypeParserRuleCall_0_0; }

		//LogicUniopType=Math_LogicUniopType
		public Assignment getLogicUniopTypeAssignment_1() { return cLogicUniopTypeAssignment_1; }

		//Math_LogicUniopType
		public RuleCall getLogicUniopTypeMath_LogicUniopTypeParserRuleCall_1_0() { return cLogicUniopTypeMath_LogicUniopTypeParserRuleCall_1_0; }

		//True=Math_TRUE
		public Assignment getTrueAssignment_2() { return cTrueAssignment_2; }

		//Math_TRUE
		public RuleCall getTrueMath_TRUEParserRuleCall_2_0() { return cTrueMath_TRUEParserRuleCall_2_0; }

		//False=Math_FALSE
		public Assignment getFalseAssignment_3() { return cFalseAssignment_3; }

		//Math_FALSE
		public RuleCall getFalseMath_FALSEParserRuleCall_3_0() { return cFalseMath_FALSEParserRuleCall_3_0; }

		//Otherwise=Math_Otherwise
		public Assignment getOtherwiseAssignment_4() { return cOtherwiseAssignment_4; }

		//Math_Otherwise
		public RuleCall getOtherwiseMath_OtherwiseParserRuleCall_4_0() { return cOtherwiseMath_OtherwiseParserRuleCall_4_0; }
	}

	public class Math_OtherwiseElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_Otherwise");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMath_OtherwiseAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cOtherwiseKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_1 = (RuleCall)cGroup_4_1.eContents().get(1);
		private final Keyword cOtherwiseKeyword_4_1_2 = (Keyword)cGroup_4_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		
		//Math_Otherwise:
		//
		//	{Math_Otherwise} TAG_OPEN "Otherwise" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Otherwise" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{Math_Otherwise} TAG_OPEN "Otherwise" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Otherwise" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{Math_Otherwise}
		public Action getMath_OtherwiseAction_0() { return cMath_OtherwiseAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Otherwise"
		public Keyword getOtherwiseKeyword_2() { return cOtherwiseKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Otherwise" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE TAG_OPEN2 "Otherwise" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_1() { return cTAG_OPEN2ParserRuleCall_4_1_1; }

		//"Otherwise"
		public Keyword getOtherwiseKeyword_4_1_2() { return cOtherwiseKeyword_4_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_3() { return cTAG_CLOSEParserRuleCall_4_1_3; }
	}

	public class Math_LogicExprTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_LogicExprType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cMath_LogicBaseTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final Assignment cScalarAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cScalarMath_ScalarTypeParserRuleCall_1_0 = (RuleCall)cScalarAssignment_1.eContents().get(0);
		private final Assignment cConstantAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cConstantMath_ConstantTypeParserRuleCall_2_0 = (RuleCall)cConstantAssignment_2.eContents().get(0);
		private final Assignment cVarAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cVarMath_VarTypeParserRuleCall_3_0 = (RuleCall)cVarAssignment_3.eContents().get(0);
		private final Assignment cUniopAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cUniopMath_UniopTypeParserRuleCall_4_0 = (RuleCall)cUniopAssignment_4.eContents().get(0);
		private final Assignment cBinopAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cBinopMath_BinopTypeParserRuleCall_5_0 = (RuleCall)cBinopAssignment_5.eContents().get(0);
		private final Assignment cFunctionCallAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final RuleCall cFunctionCallMath_FunctionCallTypeParserRuleCall_6_0 = (RuleCall)cFunctionCallAssignment_6.eContents().get(0);
		private final Assignment cStringAssignment_7 = (Assignment)cAlternatives.eContents().get(7);
		private final RuleCall cStringMath_StringTypeParserRuleCall_7_0 = (RuleCall)cStringAssignment_7.eContents().get(0);
		
		//Math_LogicExprType:
		//
		//	Math_LogicBaseType | Scalar=Math_ScalarType | Constant=Math_ConstantType | Var=Math_VarType | Uniop=Math_UniopType |
		//
		//	Binop=Math_BinopType | FunctionCall=Math_FunctionCallType | String=Math_StringType;
		public ParserRule getRule() { return rule; }

		//Math_LogicBaseType | Scalar=Math_ScalarType | Constant=Math_ConstantType | Var=Math_VarType | Uniop=Math_UniopType |
		//
		//Binop=Math_BinopType | FunctionCall=Math_FunctionCallType | String=Math_StringType
		public Alternatives getAlternatives() { return cAlternatives; }

		//Math_LogicBaseType
		public RuleCall getMath_LogicBaseTypeParserRuleCall_0() { return cMath_LogicBaseTypeParserRuleCall_0; }

		//Scalar=Math_ScalarType
		public Assignment getScalarAssignment_1() { return cScalarAssignment_1; }

		//Math_ScalarType
		public RuleCall getScalarMath_ScalarTypeParserRuleCall_1_0() { return cScalarMath_ScalarTypeParserRuleCall_1_0; }

		//Constant=Math_ConstantType
		public Assignment getConstantAssignment_2() { return cConstantAssignment_2; }

		//Math_ConstantType
		public RuleCall getConstantMath_ConstantTypeParserRuleCall_2_0() { return cConstantMath_ConstantTypeParserRuleCall_2_0; }

		//Var=Math_VarType
		public Assignment getVarAssignment_3() { return cVarAssignment_3; }

		//Math_VarType
		public RuleCall getVarMath_VarTypeParserRuleCall_3_0() { return cVarMath_VarTypeParserRuleCall_3_0; }

		//Uniop=Math_UniopType
		public Assignment getUniopAssignment_4() { return cUniopAssignment_4; }

		//Math_UniopType
		public RuleCall getUniopMath_UniopTypeParserRuleCall_4_0() { return cUniopMath_UniopTypeParserRuleCall_4_0; }

		//Binop=Math_BinopType
		public Assignment getBinopAssignment_5() { return cBinopAssignment_5; }

		//Math_BinopType
		public RuleCall getBinopMath_BinopTypeParserRuleCall_5_0() { return cBinopMath_BinopTypeParserRuleCall_5_0; }

		//FunctionCall=Math_FunctionCallType
		public Assignment getFunctionCallAssignment_6() { return cFunctionCallAssignment_6; }

		//Math_FunctionCallType
		public RuleCall getFunctionCallMath_FunctionCallTypeParserRuleCall_6_0() { return cFunctionCallMath_FunctionCallTypeParserRuleCall_6_0; }

		//String=Math_StringType
		public Assignment getStringAssignment_7() { return cStringAssignment_7; }

		//Math_StringType
		public RuleCall getStringMath_StringTypeParserRuleCall_7_0() { return cStringMath_StringTypeParserRuleCall_7_0; }
	}

	public class Math_StringTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_StringType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cStringKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueCt_String_ValueParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_1 = (RuleCall)cGroup_4_1.eContents().get(1);
		private final Keyword cStringKeyword_4_1_2 = (Keyword)cGroup_4_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		
		//Math_StringType:
		//
		//	TAG_OPEN "String" xmlns+=XS_xmlns* value=ct_String_Value (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "String" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "String" xmlns+=XS_xmlns* value=ct_String_Value (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "String" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"String"
		public Keyword getStringKeyword_1() { return cStringKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//value=ct_String_Value
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//ct_String_Value
		public RuleCall getValueCt_String_ValueParserRuleCall_3_0() { return cValueCt_String_ValueParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "String" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE TAG_OPEN2 "String" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_1() { return cTAG_OPEN2ParserRuleCall_4_1_1; }

		//"String"
		public Keyword getStringKeyword_4_1_2() { return cStringKeyword_4_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_3() { return cTAG_CLOSEParserRuleCall_4_1_3; }
	}

	public class Math_TRUEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_TRUE");
		private final Assignment cTrueAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cTrueAlternatives_0 = (Alternatives)cTrueAssignment.eContents().get(0);
		private final Keyword cTrueTrueKeyword_0_0 = (Keyword)cTrueAlternatives_0.eContents().get(0);
		private final Keyword cTrueTrueKeyword_0_1 = (Keyword)cTrueAlternatives_0.eContents().get(1);
		private final Keyword cTrueTRUEKeyword_0_2 = (Keyword)cTrueAlternatives_0.eContents().get(2);
		
		//Math_TRUE:
		//
		//	true=("\"True\"" | "\"true\"" | "\"TRUE\"");
		public ParserRule getRule() { return rule; }

		//true=("\"True\"" | "\"true\"" | "\"TRUE\"")
		public Assignment getTrueAssignment() { return cTrueAssignment; }

		//"\"True\"" | "\"true\"" | "\"TRUE\""
		public Alternatives getTrueAlternatives_0() { return cTrueAlternatives_0; }

		//"\"True\""
		public Keyword getTrueTrueKeyword_0_0() { return cTrueTrueKeyword_0_0; }

		//"\"true\""
		public Keyword getTrueTrueKeyword_0_1() { return cTrueTrueKeyword_0_1; }

		//"\"TRUE\""
		public Keyword getTrueTRUEKeyword_0_2() { return cTrueTRUEKeyword_0_2; }
	}

	public class Math_FALSEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_FALSE");
		private final Assignment cFalseAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cFalseAlternatives_0 = (Alternatives)cFalseAssignment.eContents().get(0);
		private final Keyword cFalseFalseKeyword_0_0 = (Keyword)cFalseAlternatives_0.eContents().get(0);
		private final Keyword cFalseFalseKeyword_0_1 = (Keyword)cFalseAlternatives_0.eContents().get(1);
		private final Keyword cFalseFALSEKeyword_0_2 = (Keyword)cFalseAlternatives_0.eContents().get(2);
		
		//Math_FALSE:
		//
		//	false=("\"False\"" | "\"false\"" | "\"FALSE\"");
		public ParserRule getRule() { return rule; }

		//false=("\"False\"" | "\"false\"" | "\"FALSE\"")
		public Assignment getFalseAssignment() { return cFalseAssignment; }

		//"\"False\"" | "\"false\"" | "\"FALSE\""
		public Alternatives getFalseAlternatives_0() { return cFalseAlternatives_0; }

		//"\"False\""
		public Keyword getFalseFalseKeyword_0_0() { return cFalseFalseKeyword_0_0; }

		//"\"false\""
		public Keyword getFalseFalseKeyword_0_1() { return cFalseFalseKeyword_0_1; }

		//"\"FALSE\""
		public Keyword getFalseFALSEKeyword_0_2() { return cFalseFALSEKeyword_0_2; }
	}

	public class Math_LogicBinopTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_LogicBinopType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cLogicBinopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Keyword cOpKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cOpAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOpMath_LogicBinopNameParserRuleCall_5_0 = (RuleCall)cOpAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_6_0 = (RuleCall)cAlternatives_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_0 = (RuleCall)cGroup_6_1.eContents().get(0);
		private final Assignment cLeftExprAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cLeftExprMath_LogicExprTypeParserRuleCall_6_1_1_0 = (RuleCall)cLeftExprAssignment_6_1_1.eContents().get(0);
		private final Assignment cRightExprAssignment_6_1_2 = (Assignment)cGroup_6_1.eContents().get(2);
		private final RuleCall cRightExprMath_LogicExprTypeParserRuleCall_6_1_2_0 = (RuleCall)cRightExprAssignment_6_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_6_1_3 = (RuleCall)cGroup_6_1.eContents().get(3);
		private final Keyword cLogicBinopKeyword_6_1_4 = (Keyword)cGroup_6_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_5 = (RuleCall)cGroup_6_1.eContents().get(5);
		
		//Math_LogicBinopType:
		//
		//	TAG_OPEN "LogicBinop" xmlns+=XS_xmlns* "op" "=" op=Math_LogicBinopName (TAG_CLOSE2 | TAG_CLOSE
		//
		//	LeftExpr=Math_LogicExprType RightExpr=Math_LogicExprType TAG_OPEN2 "LogicBinop" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "LogicBinop" xmlns+=XS_xmlns* "op" "=" op=Math_LogicBinopName (TAG_CLOSE2 | TAG_CLOSE
		//
		//LeftExpr=Math_LogicExprType RightExpr=Math_LogicExprType TAG_OPEN2 "LogicBinop" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"LogicBinop"
		public Keyword getLogicBinopKeyword_1() { return cLogicBinopKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//"op"
		public Keyword getOpKeyword_3() { return cOpKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//op=Math_LogicBinopName
		public Assignment getOpAssignment_5() { return cOpAssignment_5; }

		//Math_LogicBinopName
		public RuleCall getOpMath_LogicBinopNameParserRuleCall_5_0() { return cOpMath_LogicBinopNameParserRuleCall_5_0; }

		//TAG_CLOSE2 | TAG_CLOSE LeftExpr=Math_LogicExprType RightExpr=Math_LogicExprType TAG_OPEN2 "LogicBinop" TAG_CLOSE
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_6_0() { return cTAG_CLOSE2ParserRuleCall_6_0; }

		//TAG_CLOSE LeftExpr=Math_LogicExprType RightExpr=Math_LogicExprType TAG_OPEN2 "LogicBinop" TAG_CLOSE
		public Group getGroup_6_1() { return cGroup_6_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_0() { return cTAG_CLOSEParserRuleCall_6_1_0; }

		//LeftExpr=Math_LogicExprType
		public Assignment getLeftExprAssignment_6_1_1() { return cLeftExprAssignment_6_1_1; }

		//Math_LogicExprType
		public RuleCall getLeftExprMath_LogicExprTypeParserRuleCall_6_1_1_0() { return cLeftExprMath_LogicExprTypeParserRuleCall_6_1_1_0; }

		//RightExpr=Math_LogicExprType
		public Assignment getRightExprAssignment_6_1_2() { return cRightExprAssignment_6_1_2; }

		//Math_LogicExprType
		public RuleCall getRightExprMath_LogicExprTypeParserRuleCall_6_1_2_0() { return cRightExprMath_LogicExprTypeParserRuleCall_6_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_6_1_3() { return cTAG_OPEN2ParserRuleCall_6_1_3; }

		//"LogicBinop"
		public Keyword getLogicBinopKeyword_6_1_4() { return cLogicBinopKeyword_6_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_5() { return cTAG_CLOSEParserRuleCall_6_1_5; }
	}

	public class Math_LogicUniopTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_LogicUniopType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cLogicUniopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Keyword cOpKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cOpAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cOpMath_LogicUniopNameParserRuleCall_5_0 = (RuleCall)cOpAssignment_5.eContents().get(0);
		private final Alternatives cAlternatives_6 = (Alternatives)cGroup.eContents().get(6);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_6_0 = (RuleCall)cAlternatives_6.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cAlternatives_6.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_0 = (RuleCall)cGroup_6_1.eContents().get(0);
		private final Assignment cExprAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cExprMath_LogicExprTypeParserRuleCall_6_1_1_0 = (RuleCall)cExprAssignment_6_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_6_1_2 = (RuleCall)cGroup_6_1.eContents().get(2);
		private final Keyword cLogicUniopKeyword_6_1_3 = (Keyword)cGroup_6_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_6_1_4 = (RuleCall)cGroup_6_1.eContents().get(4);
		
		//Math_LogicUniopType:
		//
		//	TAG_OPEN "LogicUniop" xmlns+=XS_xmlns* "op" "=" op=Math_LogicUniopName (TAG_CLOSE2 | TAG_CLOSE
		//
		//	Expr=Math_LogicExprType TAG_OPEN2 "LogicUniop" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "LogicUniop" xmlns+=XS_xmlns* "op" "=" op=Math_LogicUniopName (TAG_CLOSE2 | TAG_CLOSE Expr=Math_LogicExprType
		//
		//TAG_OPEN2 "LogicUniop" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"LogicUniop"
		public Keyword getLogicUniopKeyword_1() { return cLogicUniopKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//"op"
		public Keyword getOpKeyword_3() { return cOpKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//op=Math_LogicUniopName
		public Assignment getOpAssignment_5() { return cOpAssignment_5; }

		//Math_LogicUniopName
		public RuleCall getOpMath_LogicUniopNameParserRuleCall_5_0() { return cOpMath_LogicUniopNameParserRuleCall_5_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=Math_LogicExprType TAG_OPEN2 "LogicUniop" TAG_CLOSE
		public Alternatives getAlternatives_6() { return cAlternatives_6; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_6_0() { return cTAG_CLOSE2ParserRuleCall_6_0; }

		//TAG_CLOSE Expr=Math_LogicExprType TAG_OPEN2 "LogicUniop" TAG_CLOSE
		public Group getGroup_6_1() { return cGroup_6_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_0() { return cTAG_CLOSEParserRuleCall_6_1_0; }

		//Expr=Math_LogicExprType
		public Assignment getExprAssignment_6_1_1() { return cExprAssignment_6_1_1; }

		//Math_LogicExprType
		public RuleCall getExprMath_LogicExprTypeParserRuleCall_6_1_1_0() { return cExprMath_LogicExprTypeParserRuleCall_6_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_6_1_2() { return cTAG_OPEN2ParserRuleCall_6_1_2; }

		//"LogicUniop"
		public Keyword getLogicUniopKeyword_6_1_3() { return cLogicUniopKeyword_6_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_6_1_4() { return cTAG_CLOSEParserRuleCall_6_1_4; }
	}

	public class Math_BinopNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_BinopName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cBinopnameAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cBinopnamePlusKeyword_0_0 = (Keyword)cBinopnameAssignment_0.eContents().get(0);
		private final Assignment cMinusAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cMinusMinusKeyword_1_0 = (Keyword)cMinusAssignment_1.eContents().get(0);
		private final Assignment cTimesAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cTimesTimesKeyword_2_0 = (Keyword)cTimesAssignment_2.eContents().get(0);
		private final Assignment cDivideAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final Keyword cDivideDivideKeyword_3_0 = (Keyword)cDivideAssignment_3.eContents().get(0);
		private final Assignment cPowerAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final Keyword cPowerPowerKeyword_4_0 = (Keyword)cPowerAssignment_4.eContents().get(0);
		private final Assignment cLogAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final Keyword cLogLogKeyword_5_0 = (Keyword)cLogAssignment_5.eContents().get(0);
		private final Assignment cRootAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final Keyword cRootRootKeyword_6_0 = (Keyword)cRootAssignment_6.eContents().get(0);
		
		////Add symbols
		//
		//Math_BinopName:
		//
		//	binopname="\"plus\"" | minus="\"minus\"" | times="\"times\"" | divide="\"divide\"" | power="\"power\"" |
		//
		//	log="\"log\"" | root="\"root\"";
		public ParserRule getRule() { return rule; }

		//binopname="\"plus\"" | minus="\"minus\"" | times="\"times\"" | divide="\"divide\"" | power="\"power\"" | log="\"log\"" |
		//
		//root="\"root\""
		public Alternatives getAlternatives() { return cAlternatives; }

		//binopname="\"plus\""
		public Assignment getBinopnameAssignment_0() { return cBinopnameAssignment_0; }

		//"\"plus\""
		public Keyword getBinopnamePlusKeyword_0_0() { return cBinopnamePlusKeyword_0_0; }

		//minus="\"minus\""
		public Assignment getMinusAssignment_1() { return cMinusAssignment_1; }

		//"\"minus\""
		public Keyword getMinusMinusKeyword_1_0() { return cMinusMinusKeyword_1_0; }

		//times="\"times\""
		public Assignment getTimesAssignment_2() { return cTimesAssignment_2; }

		//"\"times\""
		public Keyword getTimesTimesKeyword_2_0() { return cTimesTimesKeyword_2_0; }

		//divide="\"divide\""
		public Assignment getDivideAssignment_3() { return cDivideAssignment_3; }

		//"\"divide\""
		public Keyword getDivideDivideKeyword_3_0() { return cDivideDivideKeyword_3_0; }

		//power="\"power\""
		public Assignment getPowerAssignment_4() { return cPowerAssignment_4; }

		//"\"power\""
		public Keyword getPowerPowerKeyword_4_0() { return cPowerPowerKeyword_4_0; }

		//log="\"log\""
		public Assignment getLogAssignment_5() { return cLogAssignment_5; }

		//"\"log\""
		public Keyword getLogLogKeyword_5_0() { return cLogLogKeyword_5_0; }

		//root="\"root\""
		public Assignment getRootAssignment_6() { return cRootAssignment_6; }

		//"\"root\""
		public Keyword getRootRootKeyword_6_0() { return cRootRootKeyword_6_0; }
	}

	public class Math_UniopNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_UniopName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cExpAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cExpExpKeyword_0_0 = (Keyword)cExpAssignment_0.eContents().get(0);
		private final Assignment cLnAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cLnLnKeyword_1_0 = (Keyword)cLnAssignment_1.eContents().get(0);
		private final Assignment cMinusAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cMinusMinusKeyword_2_0 = (Keyword)cMinusAssignment_2.eContents().get(0);
		private final Assignment cFactorialAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final Keyword cFactorialFactorialKeyword_3_0 = (Keyword)cFactorialAssignment_3.eContents().get(0);
		private final Assignment cSinAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final Keyword cSinSinKeyword_4_0 = (Keyword)cSinAssignment_4.eContents().get(0);
		private final Assignment cCosAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final Keyword cCosCosKeyword_5_0 = (Keyword)cCosAssignment_5.eContents().get(0);
		private final Assignment cTanAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final Keyword cTanTanKeyword_6_0 = (Keyword)cTanAssignment_6.eContents().get(0);
		private final Assignment cSecAssignment_7 = (Assignment)cAlternatives.eContents().get(7);
		private final Keyword cSecSecKeyword_7_0 = (Keyword)cSecAssignment_7.eContents().get(0);
		private final Assignment cCscAssignment_8 = (Assignment)cAlternatives.eContents().get(8);
		private final Keyword cCscCscKeyword_8_0 = (Keyword)cCscAssignment_8.eContents().get(0);
		private final Assignment cCotAssignment_9 = (Assignment)cAlternatives.eContents().get(9);
		private final Keyword cCotCotKeyword_9_0 = (Keyword)cCotAssignment_9.eContents().get(0);
		private final Assignment cSinhAssignment_10 = (Assignment)cAlternatives.eContents().get(10);
		private final Keyword cSinhSinhKeyword_10_0 = (Keyword)cSinhAssignment_10.eContents().get(0);
		private final Assignment cCschAssignment_11 = (Assignment)cAlternatives.eContents().get(11);
		private final Keyword cCschCschKeyword_11_0 = (Keyword)cCschAssignment_11.eContents().get(0);
		private final Assignment cCothAssignment_12 = (Assignment)cAlternatives.eContents().get(12);
		private final Keyword cCothCothKeyword_12_0 = (Keyword)cCothAssignment_12.eContents().get(0);
		private final Assignment cArcsinAssignment_13 = (Assignment)cAlternatives.eContents().get(13);
		private final Keyword cArcsinArcsinKeyword_13_0 = (Keyword)cArcsinAssignment_13.eContents().get(0);
		private final Assignment cArccosAssignment_14 = (Assignment)cAlternatives.eContents().get(14);
		private final Keyword cArccosArccosKeyword_14_0 = (Keyword)cArccosAssignment_14.eContents().get(0);
		private final Assignment cArctanAssignment_15 = (Assignment)cAlternatives.eContents().get(15);
		private final Keyword cArctanArctanKeyword_15_0 = (Keyword)cArctanAssignment_15.eContents().get(0);
		private final Assignment cArcsecAssignment_16 = (Assignment)cAlternatives.eContents().get(16);
		private final Keyword cArcsecArcsecKeyword_16_0 = (Keyword)cArcsecAssignment_16.eContents().get(0);
		private final Assignment cArccscAssignment_17 = (Assignment)cAlternatives.eContents().get(17);
		private final Keyword cArccscArccscKeyword_17_0 = (Keyword)cArccscAssignment_17.eContents().get(0);
		private final Assignment cArccotAssignment_18 = (Assignment)cAlternatives.eContents().get(18);
		private final Keyword cArccotArccotKeyword_18_0 = (Keyword)cArccotAssignment_18.eContents().get(0);
		private final Assignment cArcsinhAssignment_19 = (Assignment)cAlternatives.eContents().get(19);
		private final Keyword cArcsinhArcsinhKeyword_19_0 = (Keyword)cArcsinhAssignment_19.eContents().get(0);
		private final Assignment cArccoshAssignment_20 = (Assignment)cAlternatives.eContents().get(20);
		private final Keyword cArccoshArccoshKeyword_20_0 = (Keyword)cArccoshAssignment_20.eContents().get(0);
		private final Assignment cArctanhAssignment_21 = (Assignment)cAlternatives.eContents().get(21);
		private final Keyword cArctanhArctanhKeyword_21_0 = (Keyword)cArctanhAssignment_21.eContents().get(0);
		private final Assignment cArcsechAssignment_22 = (Assignment)cAlternatives.eContents().get(22);
		private final Keyword cArcsechArcsechKeyword_22_0 = (Keyword)cArcsechAssignment_22.eContents().get(0);
		private final Assignment cArccschAssignment_23 = (Assignment)cAlternatives.eContents().get(23);
		private final Keyword cArccschArccschKeyword_23_0 = (Keyword)cArccschAssignment_23.eContents().get(0);
		private final Assignment cArccothAssignment_24 = (Assignment)cAlternatives.eContents().get(24);
		private final Keyword cArccothArccothKeyword_24_0 = (Keyword)cArccothAssignment_24.eContents().get(0);
		private final Assignment cFloorAssignment_25 = (Assignment)cAlternatives.eContents().get(25);
		private final Keyword cFloorFloorKeyword_25_0 = (Keyword)cFloorAssignment_25.eContents().get(0);
		private final Assignment cAbsAssignment_26 = (Assignment)cAlternatives.eContents().get(26);
		private final Keyword cAbsAbsKeyword_26_0 = (Keyword)cAbsAssignment_26.eContents().get(0);
		private final Assignment cCeilingAssignment_27 = (Assignment)cAlternatives.eContents().get(27);
		private final Keyword cCeilingCeilingKeyword_27_0 = (Keyword)cCeilingAssignment_27.eContents().get(0);
		private final Assignment cLogitAssignment_28 = (Assignment)cAlternatives.eContents().get(28);
		private final Keyword cLogitLogitKeyword_28_0 = (Keyword)cLogitAssignment_28.eContents().get(0);
		
		//Math_UniopName:
		//
		//	exp="\"exp\"" | ln="\"ln\"" | minus="\"minus\"" | factorial="\"factorial\"" | sin="\"sin\"" | cos="\"cos\"" |
		//
		//	tan="\"tan\"" | sec="\"sec\"" | csc="\"csc\"" | cot="\"cot\"" | sinh="\"sinh\"" | csch="\"csch\"" | coth="\"coth\"" |
		//
		//	arcsin="\"arcsin\"" | arccos="\"arccos\"" | arctan="\"arctan\"" | arcsec="\"arcsec\"" | arccsc="\"arccsc\"" |
		//
		//	arccot="\"arccot\"" | arcsinh="\"arcsinh\"" | arccosh="\"arccosh\"" | arctanh="\"arctanh\"" | arcsech="\"arcsech\"" |
		//
		//	arccsch="\"arccsch\"" | arccoth="\"arccoth\"" | floor="\"floor\"" | abs="\"abs\"" | ceiling="\"ceiling\"" |
		//
		//	logit="\"logit\"";
		public ParserRule getRule() { return rule; }

		//exp="\"exp\"" | ln="\"ln\"" | minus="\"minus\"" | factorial="\"factorial\"" | sin="\"sin\"" | cos="\"cos\"" |
		//
		//tan="\"tan\"" | sec="\"sec\"" | csc="\"csc\"" | cot="\"cot\"" | sinh="\"sinh\"" | csch="\"csch\"" | coth="\"coth\"" |
		//
		//arcsin="\"arcsin\"" | arccos="\"arccos\"" | arctan="\"arctan\"" | arcsec="\"arcsec\"" | arccsc="\"arccsc\"" |
		//
		//arccot="\"arccot\"" | arcsinh="\"arcsinh\"" | arccosh="\"arccosh\"" | arctanh="\"arctanh\"" | arcsech="\"arcsech\"" |
		//
		//arccsch="\"arccsch\"" | arccoth="\"arccoth\"" | floor="\"floor\"" | abs="\"abs\"" | ceiling="\"ceiling\"" |
		//
		//logit="\"logit\""
		public Alternatives getAlternatives() { return cAlternatives; }

		//exp="\"exp\""
		public Assignment getExpAssignment_0() { return cExpAssignment_0; }

		//"\"exp\""
		public Keyword getExpExpKeyword_0_0() { return cExpExpKeyword_0_0; }

		//ln="\"ln\""
		public Assignment getLnAssignment_1() { return cLnAssignment_1; }

		//"\"ln\""
		public Keyword getLnLnKeyword_1_0() { return cLnLnKeyword_1_0; }

		//minus="\"minus\""
		public Assignment getMinusAssignment_2() { return cMinusAssignment_2; }

		//"\"minus\""
		public Keyword getMinusMinusKeyword_2_0() { return cMinusMinusKeyword_2_0; }

		//factorial="\"factorial\""
		public Assignment getFactorialAssignment_3() { return cFactorialAssignment_3; }

		//"\"factorial\""
		public Keyword getFactorialFactorialKeyword_3_0() { return cFactorialFactorialKeyword_3_0; }

		//sin="\"sin\""
		public Assignment getSinAssignment_4() { return cSinAssignment_4; }

		//"\"sin\""
		public Keyword getSinSinKeyword_4_0() { return cSinSinKeyword_4_0; }

		//cos="\"cos\""
		public Assignment getCosAssignment_5() { return cCosAssignment_5; }

		//"\"cos\""
		public Keyword getCosCosKeyword_5_0() { return cCosCosKeyword_5_0; }

		//tan="\"tan\""
		public Assignment getTanAssignment_6() { return cTanAssignment_6; }

		//"\"tan\""
		public Keyword getTanTanKeyword_6_0() { return cTanTanKeyword_6_0; }

		//sec="\"sec\""
		public Assignment getSecAssignment_7() { return cSecAssignment_7; }

		//"\"sec\""
		public Keyword getSecSecKeyword_7_0() { return cSecSecKeyword_7_0; }

		//csc="\"csc\""
		public Assignment getCscAssignment_8() { return cCscAssignment_8; }

		//"\"csc\""
		public Keyword getCscCscKeyword_8_0() { return cCscCscKeyword_8_0; }

		//cot="\"cot\""
		public Assignment getCotAssignment_9() { return cCotAssignment_9; }

		//"\"cot\""
		public Keyword getCotCotKeyword_9_0() { return cCotCotKeyword_9_0; }

		//sinh="\"sinh\""
		public Assignment getSinhAssignment_10() { return cSinhAssignment_10; }

		//"\"sinh\""
		public Keyword getSinhSinhKeyword_10_0() { return cSinhSinhKeyword_10_0; }

		//csch="\"csch\""
		public Assignment getCschAssignment_11() { return cCschAssignment_11; }

		//"\"csch\""
		public Keyword getCschCschKeyword_11_0() { return cCschCschKeyword_11_0; }

		//coth="\"coth\""
		public Assignment getCothAssignment_12() { return cCothAssignment_12; }

		//"\"coth\""
		public Keyword getCothCothKeyword_12_0() { return cCothCothKeyword_12_0; }

		//arcsin="\"arcsin\""
		public Assignment getArcsinAssignment_13() { return cArcsinAssignment_13; }

		//"\"arcsin\""
		public Keyword getArcsinArcsinKeyword_13_0() { return cArcsinArcsinKeyword_13_0; }

		//arccos="\"arccos\""
		public Assignment getArccosAssignment_14() { return cArccosAssignment_14; }

		//"\"arccos\""
		public Keyword getArccosArccosKeyword_14_0() { return cArccosArccosKeyword_14_0; }

		//arctan="\"arctan\""
		public Assignment getArctanAssignment_15() { return cArctanAssignment_15; }

		//"\"arctan\""
		public Keyword getArctanArctanKeyword_15_0() { return cArctanArctanKeyword_15_0; }

		//arcsec="\"arcsec\""
		public Assignment getArcsecAssignment_16() { return cArcsecAssignment_16; }

		//"\"arcsec\""
		public Keyword getArcsecArcsecKeyword_16_0() { return cArcsecArcsecKeyword_16_0; }

		//arccsc="\"arccsc\""
		public Assignment getArccscAssignment_17() { return cArccscAssignment_17; }

		//"\"arccsc\""
		public Keyword getArccscArccscKeyword_17_0() { return cArccscArccscKeyword_17_0; }

		//arccot="\"arccot\""
		public Assignment getArccotAssignment_18() { return cArccotAssignment_18; }

		//"\"arccot\""
		public Keyword getArccotArccotKeyword_18_0() { return cArccotArccotKeyword_18_0; }

		//arcsinh="\"arcsinh\""
		public Assignment getArcsinhAssignment_19() { return cArcsinhAssignment_19; }

		//"\"arcsinh\""
		public Keyword getArcsinhArcsinhKeyword_19_0() { return cArcsinhArcsinhKeyword_19_0; }

		//arccosh="\"arccosh\""
		public Assignment getArccoshAssignment_20() { return cArccoshAssignment_20; }

		//"\"arccosh\""
		public Keyword getArccoshArccoshKeyword_20_0() { return cArccoshArccoshKeyword_20_0; }

		//arctanh="\"arctanh\""
		public Assignment getArctanhAssignment_21() { return cArctanhAssignment_21; }

		//"\"arctanh\""
		public Keyword getArctanhArctanhKeyword_21_0() { return cArctanhArctanhKeyword_21_0; }

		//arcsech="\"arcsech\""
		public Assignment getArcsechAssignment_22() { return cArcsechAssignment_22; }

		//"\"arcsech\""
		public Keyword getArcsechArcsechKeyword_22_0() { return cArcsechArcsechKeyword_22_0; }

		//arccsch="\"arccsch\""
		public Assignment getArccschAssignment_23() { return cArccschAssignment_23; }

		//"\"arccsch\""
		public Keyword getArccschArccschKeyword_23_0() { return cArccschArccschKeyword_23_0; }

		//arccoth="\"arccoth\""
		public Assignment getArccothAssignment_24() { return cArccothAssignment_24; }

		//"\"arccoth\""
		public Keyword getArccothArccothKeyword_24_0() { return cArccothArccothKeyword_24_0; }

		//floor="\"floor\""
		public Assignment getFloorAssignment_25() { return cFloorAssignment_25; }

		//"\"floor\""
		public Keyword getFloorFloorKeyword_25_0() { return cFloorFloorKeyword_25_0; }

		//abs="\"abs\""
		public Assignment getAbsAssignment_26() { return cAbsAssignment_26; }

		//"\"abs\""
		public Keyword getAbsAbsKeyword_26_0() { return cAbsAbsKeyword_26_0; }

		//ceiling="\"ceiling\""
		public Assignment getCeilingAssignment_27() { return cCeilingAssignment_27; }

		//"\"ceiling\""
		public Keyword getCeilingCeilingKeyword_27_0() { return cCeilingCeilingKeyword_27_0; }

		//logit="\"logit\""
		public Assignment getLogitAssignment_28() { return cLogitAssignment_28; }

		//"\"logit\""
		public Keyword getLogitLogitKeyword_28_0() { return cLogitLogitKeyword_28_0; }
	}

	public class Math_LogicUniopNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_LogicUniopName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cIsDefinedAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cIsDefinedIsDefinedKeyword_0_0 = (Keyword)cIsDefinedAssignment_0.eContents().get(0);
		private final Assignment cNotAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cNotNotKeyword_1_0 = (Keyword)cNotAssignment_1.eContents().get(0);
		
		//Math_LogicUniopName:
		//
		//	isDefined="\"isDefined\"" | not="\"not\"";
		public ParserRule getRule() { return rule; }

		//isDefined="\"isDefined\"" | not="\"not\""
		public Alternatives getAlternatives() { return cAlternatives; }

		//isDefined="\"isDefined\""
		public Assignment getIsDefinedAssignment_0() { return cIsDefinedAssignment_0; }

		//"\"isDefined\""
		public Keyword getIsDefinedIsDefinedKeyword_0_0() { return cIsDefinedIsDefinedKeyword_0_0; }

		//not="\"not\""
		public Assignment getNotAssignment_1() { return cNotAssignment_1; }

		//"\"not\""
		public Keyword getNotNotKeyword_1_0() { return cNotNotKeyword_1_0; }
	}

	public class Math_LogicBinopNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_LogicBinopName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cLtAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cLtLtKeyword_0_0 = (Keyword)cLtAssignment_0.eContents().get(0);
		private final Assignment cLeqAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cLeqLeqKeyword_1_0 = (Keyword)cLeqAssignment_1.eContents().get(0);
		private final Assignment cGtAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cGtGtKeyword_2_0 = (Keyword)cGtAssignment_2.eContents().get(0);
		private final Assignment cGeqAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final Keyword cGeqGeqKeyword_3_0 = (Keyword)cGeqAssignment_3.eContents().get(0);
		private final Assignment cEqAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final Keyword cEqEqKeyword_4_0 = (Keyword)cEqAssignment_4.eContents().get(0);
		private final Assignment cNeqAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final Keyword cNeqNeqKeyword_5_0 = (Keyword)cNeqAssignment_5.eContents().get(0);
		private final Assignment cAndAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final Keyword cAndAndKeyword_6_0 = (Keyword)cAndAssignment_6.eContents().get(0);
		private final Assignment cOrAssignment_7 = (Assignment)cAlternatives.eContents().get(7);
		private final Keyword cOrOrKeyword_7_0 = (Keyword)cOrAssignment_7.eContents().get(0);
		private final Assignment cXorAssignment_8 = (Assignment)cAlternatives.eContents().get(8);
		private final Keyword cXorXorKeyword_8_0 = (Keyword)cXorAssignment_8.eContents().get(0);
		
		//Math_LogicBinopName:
		//
		//	lt="\"lt\"" | leq="\"leq\"" | gt="\"gt\"" | geq="\"geq\"" | eq="\"eq\"" | neq="\"neq\"" | and="\"and\"" | or="\"or\""
		//
		//	| xor="\"xor\"";
		public ParserRule getRule() { return rule; }

		//lt="\"lt\"" | leq="\"leq\"" | gt="\"gt\"" | geq="\"geq\"" | eq="\"eq\"" | neq="\"neq\"" | and="\"and\"" | or="\"or\"" |
		//
		//xor="\"xor\""
		public Alternatives getAlternatives() { return cAlternatives; }

		//lt="\"lt\""
		public Assignment getLtAssignment_0() { return cLtAssignment_0; }

		//"\"lt\""
		public Keyword getLtLtKeyword_0_0() { return cLtLtKeyword_0_0; }

		//leq="\"leq\""
		public Assignment getLeqAssignment_1() { return cLeqAssignment_1; }

		//"\"leq\""
		public Keyword getLeqLeqKeyword_1_0() { return cLeqLeqKeyword_1_0; }

		//gt="\"gt\""
		public Assignment getGtAssignment_2() { return cGtAssignment_2; }

		//"\"gt\""
		public Keyword getGtGtKeyword_2_0() { return cGtGtKeyword_2_0; }

		//geq="\"geq\""
		public Assignment getGeqAssignment_3() { return cGeqAssignment_3; }

		//"\"geq\""
		public Keyword getGeqGeqKeyword_3_0() { return cGeqGeqKeyword_3_0; }

		//eq="\"eq\""
		public Assignment getEqAssignment_4() { return cEqAssignment_4; }

		//"\"eq\""
		public Keyword getEqEqKeyword_4_0() { return cEqEqKeyword_4_0; }

		//neq="\"neq\""
		public Assignment getNeqAssignment_5() { return cNeqAssignment_5; }

		//"\"neq\""
		public Keyword getNeqNeqKeyword_5_0() { return cNeqNeqKeyword_5_0; }

		//and="\"and\""
		public Assignment getAndAssignment_6() { return cAndAssignment_6; }

		//"\"and\""
		public Keyword getAndAndKeyword_6_0() { return cAndAndKeyword_6_0; }

		//or="\"or\""
		public Assignment getOrAssignment_7() { return cOrAssignment_7; }

		//"\"or\""
		public Keyword getOrOrKeyword_7_0() { return cOrOrKeyword_7_0; }

		//xor="\"xor\""
		public Assignment getXorAssignment_8() { return cXorAssignment_8; }

		//"\"xor\""
		public Keyword getXorXorKeyword_8_0() { return cXorXorKeyword_8_0; }
	}

	public class Math_ConstantNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_ConstantName");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cNotanumberAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cNotanumberNotanumberKeyword_0_0 = (Keyword)cNotanumberAssignment_0.eContents().get(0);
		private final Assignment cPiAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cPiPiKeyword_1_0 = (Keyword)cPiAssignment_1.eContents().get(0);
		private final Assignment cExponentialeAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cExponentialeExponentialeKeyword_2_0 = (Keyword)cExponentialeAssignment_2.eContents().get(0);
		private final Assignment cInfinityAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final Keyword cInfinityInfinityKeyword_3_0 = (Keyword)cInfinityAssignment_3.eContents().get(0);
		
		//Math_ConstantName:
		//
		//	notanumber="\"notanumber\"" | pi="\"pi\"" | exponentiale="\"exponentiale\"" | infinity="\"infinity\"";
		public ParserRule getRule() { return rule; }

		//notanumber="\"notanumber\"" | pi="\"pi\"" | exponentiale="\"exponentiale\"" | infinity="\"infinity\""
		public Alternatives getAlternatives() { return cAlternatives; }

		//notanumber="\"notanumber\""
		public Assignment getNotanumberAssignment_0() { return cNotanumberAssignment_0; }

		//"\"notanumber\""
		public Keyword getNotanumberNotanumberKeyword_0_0() { return cNotanumberNotanumberKeyword_0_0; }

		//pi="\"pi\""
		public Assignment getPiAssignment_1() { return cPiAssignment_1; }

		//"\"pi\""
		public Keyword getPiPiKeyword_1_0() { return cPiPiKeyword_1_0; }

		//exponentiale="\"exponentiale\""
		public Assignment getExponentialeAssignment_2() { return cExponentialeAssignment_2; }

		//"\"exponentiale\""
		public Keyword getExponentialeExponentialeKeyword_2_0() { return cExponentialeExponentialeKeyword_2_0; }

		//infinity="\"infinity\""
		public Assignment getInfinityAssignment_3() { return cInfinityAssignment_3; }

		//"\"infinity\""
		public Keyword getInfinityInfinityKeyword_3_0() { return cInfinityInfinityKeyword_3_0; }
	}

	public class Math_symbIdElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_symbId");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSymbIdKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSymbIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSymbIdMath_SymbolNameTypeParserRuleCall_2_0 = (RuleCall)cSymbIdAssignment_2.eContents().get(0);
		
		//Math_symbId:
		//
		//	"symbId" "=" symbId=Math_SymbolNameType;
		public ParserRule getRule() { return rule; }

		//"symbId" "=" symbId=Math_SymbolNameType
		public Group getGroup() { return cGroup; }

		//"symbId"
		public Keyword getSymbIdKeyword_0() { return cSymbIdKeyword_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//symbId=Math_SymbolNameType
		public Assignment getSymbIdAssignment_2() { return cSymbIdAssignment_2; }

		//Math_SymbolNameType
		public RuleCall getSymbIdMath_SymbolNameTypeParserRuleCall_2_0() { return cSymbIdMath_SymbolNameTypeParserRuleCall_2_0; }
	}

	public class Math_idElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_id");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIdKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIdMath_BlockNameTypeParserRuleCall_2_0 = (RuleCall)cIdAssignment_2.eContents().get(0);
		
		//Math_id:
		//
		//	"id" "=" id=Math_BlockNameType;
		public ParserRule getRule() { return rule; }

		//"id" "=" id=Math_BlockNameType
		public Group getGroup() { return cGroup; }

		//"id"
		public Keyword getIdKeyword_0() { return cIdKeyword_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//id=Math_BlockNameType
		public Assignment getIdAssignment_2() { return cIdAssignment_2; }

		//Math_BlockNameType
		public RuleCall getIdMath_BlockNameTypeParserRuleCall_2_0() { return cIdMath_BlockNameTypeParserRuleCall_2_0; }
	}

	public class Math_blockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_block");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBlockKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cBlockAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBlockMath_BlockNameTypeParserRuleCall_2_0 = (RuleCall)cBlockAssignment_2.eContents().get(0);
		
		//Math_block:
		//
		//	"block" "=" block=Math_BlockNameType;
		public ParserRule getRule() { return rule; }

		//"block" "=" block=Math_BlockNameType
		public Group getGroup() { return cGroup; }

		//"block"
		public Keyword getBlockKeyword_0() { return cBlockKeyword_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//block=Math_BlockNameType
		public Assignment getBlockAssignment_2() { return cBlockAssignment_2; }

		//Math_BlockNameType
		public RuleCall getBlockMath_BlockNameTypeParserRuleCall_2_0() { return cBlockMath_BlockNameTypeParserRuleCall_2_0; }
	}

	public class Math_SymbolNameTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_SymbolNameType");
		private final RuleCall cXS_NAMEParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Math_SymbolNameType:
		//
		//	XS_NAME;
		public ParserRule getRule() { return rule; }

		//XS_NAME
		public RuleCall getXS_NAMEParserRuleCall() { return cXS_NAMEParserRuleCall; }
	}

	public class Math_EstimationOperationTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_EstimationOperationType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cEstPopAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cEstPopEstPopKeyword_0_0 = (Keyword)cEstPopAssignment_0.eContents().get(0);
		private final Assignment cEstFIMAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cEstFIMEstFIMKeyword_1_0 = (Keyword)cEstFIMAssignment_1.eContents().get(0);
		private final Assignment cEstIndivAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cEstIndivEstIndivKeyword_2_0 = (Keyword)cEstIndivAssignment_2.eContents().get(0);
		
		//Math_EstimationOperationType:
		//
		//	estPop="\"estPop\"" | estFIM="\"estFIM\"" | estIndiv="\"estIndiv\"";
		public ParserRule getRule() { return rule; }

		//estPop="\"estPop\"" | estFIM="\"estFIM\"" | estIndiv="\"estIndiv\""
		public Alternatives getAlternatives() { return cAlternatives; }

		//estPop="\"estPop\""
		public Assignment getEstPopAssignment_0() { return cEstPopAssignment_0; }

		//"\"estPop\""
		public Keyword getEstPopEstPopKeyword_0_0() { return cEstPopEstPopKeyword_0_0; }

		//estFIM="\"estFIM\""
		public Assignment getEstFIMAssignment_1() { return cEstFIMAssignment_1; }

		//"\"estFIM\""
		public Keyword getEstFIMEstFIMKeyword_1_0() { return cEstFIMEstFIMKeyword_1_0; }

		//estIndiv="\"estIndiv\""
		public Assignment getEstIndivAssignment_2() { return cEstIndivAssignment_2; }

		//"\"estIndiv\""
		public Keyword getEstIndivEstIndivKeyword_2_0() { return cEstIndivEstIndivKeyword_2_0; }
	}

	public class Math_BlockNameTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Math_BlockNameType");
		private final RuleCall cXS_NAMEParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Math_BlockNameType:
		//
		//	XS_NAME;
		public ParserRule getRule() { return rule; }

		//XS_NAME
		public RuleCall getXS_NAMEParserRuleCall() { return cXS_NAMEParserRuleCall; }
	}

	public class Ct_ReplicatesTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_ReplicatesType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cReplicatesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cSymbIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSymbIdCt_symbIdParserRuleCall_3_0 = (RuleCall)cSymbIdAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprCt_RhsParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cReplicatesKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		///////////////////////////////////////////////////////////////////////////////////////////////////////////
		//
		//// ***CommonTypes***
		//
		///////////////////////////////////////////////////////////////////////////////////////////////////////////
		//
		//ct_ReplicatesType:
		//
		//	TAG_OPEN "Replicates" xmlns+=XS_xmlns* symbId=ct_symbId (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs? TAG_OPEN2 "Replicates"
		//
		//	TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Replicates" xmlns+=XS_xmlns* symbId=ct_symbId (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs? TAG_OPEN2 "Replicates"
		//
		//TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Replicates"
		public Keyword getReplicatesKeyword_1() { return cReplicatesKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//symbId=ct_symbId
		public Assignment getSymbIdAssignment_3() { return cSymbIdAssignment_3; }

		//ct_symbId
		public RuleCall getSymbIdCt_symbIdParserRuleCall_3_0() { return cSymbIdCt_symbIdParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs? TAG_OPEN2 "Replicates" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=ct_Rhs? TAG_OPEN2 "Replicates" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=ct_Rhs?
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//ct_Rhs
		public RuleCall getExprCt_RhsParserRuleCall_4_1_1_0() { return cExprCt_RhsParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Replicates"
		public Keyword getReplicatesKeyword_4_1_3() { return cReplicatesKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Ct_AnnotationTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_AnnotationType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCt_AnnotationTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cDescriptionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final RuleCall cTAG_CLOSEParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Assignment cDescriptionAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cDescriptionWordParserRuleCall_5_0 = (RuleCall)cDescriptionAssignment_5.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_6 = (RuleCall)cGroup.eContents().get(6);
		private final Keyword cDescriptionKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final RuleCall cTAG_CLOSEParserRuleCall_8 = (RuleCall)cGroup.eContents().get(8);
		
		//ct_AnnotationType:
		//
		//	{ct_AnnotationType} TAG_OPEN "Description" xmlns+=XS_xmlns* TAG_CLOSE Description+=word* TAG_OPEN2 "Description"
		//
		//	TAG_CLOSE;
		public ParserRule getRule() { return rule; }

		//{ct_AnnotationType} TAG_OPEN "Description" xmlns+=XS_xmlns* TAG_CLOSE Description+=word* TAG_OPEN2 "Description"
		//
		//TAG_CLOSE
		public Group getGroup() { return cGroup; }

		//{ct_AnnotationType}
		public Action getCt_AnnotationTypeAction_0() { return cCt_AnnotationTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Description"
		public Keyword getDescriptionKeyword_2() { return cDescriptionKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4() { return cTAG_CLOSEParserRuleCall_4; }

		//Description+=word*
		public Assignment getDescriptionAssignment_5() { return cDescriptionAssignment_5; }

		//word
		public RuleCall getDescriptionWordParserRuleCall_5_0() { return cDescriptionWordParserRuleCall_5_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_6() { return cTAG_OPEN2ParserRuleCall_6; }

		//"Description"
		public Keyword getDescriptionKeyword_7() { return cDescriptionKeyword_7; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_8() { return cTAG_CLOSEParserRuleCall_8; }
	}

	public class Ct_RhsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_Rhs");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cEquationAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cEquationMath_EquationTypeParserRuleCall_0_0 = (RuleCall)cEquationAssignment_0.eContents().get(0);
		private final Assignment cScalarAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cScalarMath_ScalarTypeParserRuleCall_1_0 = (RuleCall)cScalarAssignment_1.eContents().get(0);
		private final Assignment cConstantAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cConstantMath_ConstantTypeParserRuleCall_2_0 = (RuleCall)cConstantAssignment_2.eContents().get(0);
		private final Assignment cStringAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cStringMath_StringTypeParserRuleCall_3_0 = (RuleCall)cStringAssignment_3.eContents().get(0);
		private final Assignment cSequenceAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cSequenceCt_SequenceTypeParserRuleCall_4_0 = (RuleCall)cSequenceAssignment_4.eContents().get(0);
		private final Assignment cVectorAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final RuleCall cVectorCt_VectorTypeParserRuleCall_5_0 = (RuleCall)cVectorAssignment_5.eContents().get(0);
		private final Assignment cFunctionCallAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final RuleCall cFunctionCallMath_FunctionCallTypeParserRuleCall_6_0 = (RuleCall)cFunctionCallAssignment_6.eContents().get(0);
		private final Assignment cDataSetAssignment_7 = (Assignment)cAlternatives.eContents().get(7);
		private final RuleCall cDataSetCt_DataSetTypeParserRuleCall_7_0 = (RuleCall)cDataSetAssignment_7.eContents().get(0);
		private final Assignment cVarAssignment_8 = (Assignment)cAlternatives.eContents().get(8);
		private final RuleCall cVarMath_VarTypeParserRuleCall_8_0 = (RuleCall)cVarAssignment_8.eContents().get(0);
		private final Assignment cDistributionAssignment_9 = (Assignment)cAlternatives.eContents().get(9);
		private final RuleCall cDistributionUncert_DistributionTypeParserRuleCall_9_0 = (RuleCall)cDistributionAssignment_9.eContents().get(0);
		
		//ct_Rhs:
		//
		//	Equation=Math_EquationType | Scalar=Math_ScalarType | Constant=Math_ConstantType | String=Math_StringType |
		//
		//	Sequence=ct_SequenceType | Vector=ct_VectorType | FunctionCall=Math_FunctionCallType | DataSet=ct_DataSetType |
		//
		//	Var=Math_VarType | Distribution=uncert_DistributionType;
		public ParserRule getRule() { return rule; }

		//Equation=Math_EquationType | Scalar=Math_ScalarType | Constant=Math_ConstantType | String=Math_StringType |
		//
		//Sequence=ct_SequenceType | Vector=ct_VectorType | FunctionCall=Math_FunctionCallType | DataSet=ct_DataSetType |
		//
		//Var=Math_VarType | Distribution=uncert_DistributionType
		public Alternatives getAlternatives() { return cAlternatives; }

		//Equation=Math_EquationType
		public Assignment getEquationAssignment_0() { return cEquationAssignment_0; }

		//Math_EquationType
		public RuleCall getEquationMath_EquationTypeParserRuleCall_0_0() { return cEquationMath_EquationTypeParserRuleCall_0_0; }

		//Scalar=Math_ScalarType
		public Assignment getScalarAssignment_1() { return cScalarAssignment_1; }

		//Math_ScalarType
		public RuleCall getScalarMath_ScalarTypeParserRuleCall_1_0() { return cScalarMath_ScalarTypeParserRuleCall_1_0; }

		//Constant=Math_ConstantType
		public Assignment getConstantAssignment_2() { return cConstantAssignment_2; }

		//Math_ConstantType
		public RuleCall getConstantMath_ConstantTypeParserRuleCall_2_0() { return cConstantMath_ConstantTypeParserRuleCall_2_0; }

		//String=Math_StringType
		public Assignment getStringAssignment_3() { return cStringAssignment_3; }

		//Math_StringType
		public RuleCall getStringMath_StringTypeParserRuleCall_3_0() { return cStringMath_StringTypeParserRuleCall_3_0; }

		//Sequence=ct_SequenceType
		public Assignment getSequenceAssignment_4() { return cSequenceAssignment_4; }

		//ct_SequenceType
		public RuleCall getSequenceCt_SequenceTypeParserRuleCall_4_0() { return cSequenceCt_SequenceTypeParserRuleCall_4_0; }

		//Vector=ct_VectorType
		public Assignment getVectorAssignment_5() { return cVectorAssignment_5; }

		//ct_VectorType
		public RuleCall getVectorCt_VectorTypeParserRuleCall_5_0() { return cVectorCt_VectorTypeParserRuleCall_5_0; }

		//FunctionCall=Math_FunctionCallType
		public Assignment getFunctionCallAssignment_6() { return cFunctionCallAssignment_6; }

		//Math_FunctionCallType
		public RuleCall getFunctionCallMath_FunctionCallTypeParserRuleCall_6_0() { return cFunctionCallMath_FunctionCallTypeParserRuleCall_6_0; }

		//DataSet=ct_DataSetType
		public Assignment getDataSetAssignment_7() { return cDataSetAssignment_7; }

		//ct_DataSetType
		public RuleCall getDataSetCt_DataSetTypeParserRuleCall_7_0() { return cDataSetCt_DataSetTypeParserRuleCall_7_0; }

		//Var=Math_VarType
		public Assignment getVarAssignment_8() { return cVarAssignment_8; }

		//Math_VarType
		public RuleCall getVarMath_VarTypeParserRuleCall_8_0() { return cVarMath_VarTypeParserRuleCall_8_0; }

		//Distribution=uncert_DistributionType
		public Assignment getDistributionAssignment_9() { return cDistributionAssignment_9; }

		//uncert_DistributionType
		public RuleCall getDistributionUncert_DistributionTypeParserRuleCall_9_0() { return cDistributionUncert_DistributionTypeParserRuleCall_9_0; }
	}

	public class Ct_DataSetTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_DataSetType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCt_DataSetTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cDataSetKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cDefinitionAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cDefinitionCt_DefinitionTypeParserRuleCall_4_1_1_0 = (RuleCall)cDefinitionAssignment_4_1_1.eContents().get(0);
		private final Assignment cExternalSourceAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cExternalSourceCt_ExternalSourceTypeParserRuleCall_4_1_2_0 = (RuleCall)cExternalSourceAssignment_4_1_2.eContents().get(0);
		private final Assignment cRowAssignment_4_1_3 = (Assignment)cGroup_4_1.eContents().get(3);
		private final RuleCall cRowCt_RowTypeParserRuleCall_4_1_3_0 = (RuleCall)cRowAssignment_4_1_3.eContents().get(0);
		private final Assignment cInternalSourceAssignment_4_1_4 = (Assignment)cGroup_4_1.eContents().get(4);
		private final RuleCall cInternalSourceCt_InternalSourceTypeParserRuleCall_4_1_4_0 = (RuleCall)cInternalSourceAssignment_4_1_4.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_5 = (RuleCall)cGroup_4_1.eContents().get(5);
		private final Keyword cDataSetKeyword_4_1_6 = (Keyword)cGroup_4_1.eContents().get(6);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_7 = (RuleCall)cGroup_4_1.eContents().get(7);
		
		//ct_DataSetType:
		//
		//	{ct_DataSetType} TAG_OPEN "DataSet" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Definition=ct_DefinitionType
		//
		//	ExternalSource+=ct_ExternalSourceType* Row+=ct_RowType* InternalSource+=ct_InternalSourceType* TAG_OPEN2 "DataSet"
		//
		//	TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{ct_DataSetType} TAG_OPEN "DataSet" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Definition=ct_DefinitionType
		//
		//ExternalSource+=ct_ExternalSourceType* Row+=ct_RowType* InternalSource+=ct_InternalSourceType* TAG_OPEN2 "DataSet"
		//
		//TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{ct_DataSetType}
		public Action getCt_DataSetTypeAction_0() { return cCt_DataSetTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"DataSet"
		public Keyword getDataSetKeyword_2() { return cDataSetKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Definition=ct_DefinitionType ExternalSource+=ct_ExternalSourceType* Row+=ct_RowType*
		//
		//InternalSource+=ct_InternalSourceType* TAG_OPEN2 "DataSet" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Definition=ct_DefinitionType ExternalSource+=ct_ExternalSourceType* Row+=ct_RowType*
		//
		//InternalSource+=ct_InternalSourceType* TAG_OPEN2 "DataSet" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Definition=ct_DefinitionType
		public Assignment getDefinitionAssignment_4_1_1() { return cDefinitionAssignment_4_1_1; }

		//ct_DefinitionType
		public RuleCall getDefinitionCt_DefinitionTypeParserRuleCall_4_1_1_0() { return cDefinitionCt_DefinitionTypeParserRuleCall_4_1_1_0; }

		//ExternalSource+=ct_ExternalSourceType*
		public Assignment getExternalSourceAssignment_4_1_2() { return cExternalSourceAssignment_4_1_2; }

		//ct_ExternalSourceType
		public RuleCall getExternalSourceCt_ExternalSourceTypeParserRuleCall_4_1_2_0() { return cExternalSourceCt_ExternalSourceTypeParserRuleCall_4_1_2_0; }

		//Row+=ct_RowType*
		public Assignment getRowAssignment_4_1_3() { return cRowAssignment_4_1_3; }

		//ct_RowType
		public RuleCall getRowCt_RowTypeParserRuleCall_4_1_3_0() { return cRowCt_RowTypeParserRuleCall_4_1_3_0; }

		//InternalSource+=ct_InternalSourceType*
		public Assignment getInternalSourceAssignment_4_1_4() { return cInternalSourceAssignment_4_1_4; }

		//ct_InternalSourceType
		public RuleCall getInternalSourceCt_InternalSourceTypeParserRuleCall_4_1_4_0() { return cInternalSourceCt_InternalSourceTypeParserRuleCall_4_1_4_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_5() { return cTAG_OPEN2ParserRuleCall_4_1_5; }

		//"DataSet"
		public Keyword getDataSetKeyword_4_1_6() { return cDataSetKeyword_4_1_6; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_7() { return cTAG_CLOSEParserRuleCall_4_1_7; }
	}

	public class Ct_DefinitionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_DefinitionType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCt_DefinitionTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cDefinitionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cDefinitionAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cDefinitionCt_ColumnTypeParserRuleCall_4_1_1_0 = (RuleCall)cDefinitionAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cDefinitionKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//ct_DefinitionType:
		//
		//	{ct_DefinitionType} TAG_OPEN "Definition" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Definition+=ct_ColumnType*
		//
		//	TAG_OPEN2 "Definition" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{ct_DefinitionType} TAG_OPEN "Definition" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Definition+=ct_ColumnType* TAG_OPEN2
		//
		//"Definition" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{ct_DefinitionType}
		public Action getCt_DefinitionTypeAction_0() { return cCt_DefinitionTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Definition"
		public Keyword getDefinitionKeyword_2() { return cDefinitionKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Definition+=ct_ColumnType* TAG_OPEN2 "Definition" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Definition+=ct_ColumnType* TAG_OPEN2 "Definition" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Definition+=ct_ColumnType*
		public Assignment getDefinitionAssignment_4_1_1() { return cDefinitionAssignment_4_1_1; }

		//ct_ColumnType
		public RuleCall getDefinitionCt_ColumnTypeParserRuleCall_4_1_1_0() { return cDefinitionCt_ColumnTypeParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Definition"
		public Keyword getDefinitionKeyword_4_1_3() { return cDefinitionKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Ct_DefinitionRhsTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_DefinitionRhsType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCt_DefinitionRhsTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cDefinitionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cDefinitionAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cDefinitionCt_RhsParserRuleCall_4_1_1_0 = (RuleCall)cDefinitionAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cDefinitionKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//ct_DefinitionRhsType:
		//
		//	{ct_DefinitionRhsType} TAG_OPEN "Definition" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Definition=ct_Rhs? TAG_OPEN2
		//
		//	"Definition" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{ct_DefinitionRhsType} TAG_OPEN "Definition" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Definition=ct_Rhs? TAG_OPEN2
		//
		//"Definition" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{ct_DefinitionRhsType}
		public Action getCt_DefinitionRhsTypeAction_0() { return cCt_DefinitionRhsTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Definition"
		public Keyword getDefinitionKeyword_2() { return cDefinitionKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Definition=ct_Rhs? TAG_OPEN2 "Definition" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Definition=ct_Rhs? TAG_OPEN2 "Definition" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Definition=ct_Rhs?
		public Assignment getDefinitionAssignment_4_1_1() { return cDefinitionAssignment_4_1_1; }

		//ct_Rhs
		public RuleCall getDefinitionCt_RhsParserRuleCall_4_1_1_0() { return cDefinitionCt_RhsParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Definition"
		public Keyword getDefinitionKeyword_4_1_3() { return cDefinitionKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Ct_ColumnTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_ColumnType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cColumnKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Keyword cColumnNumKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cColumnNumAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cColumnNumXS_INTParserRuleCall_5_0 = (RuleCall)cColumnNumAssignment_5.eContents().get(0);
		private final Keyword cColumnVarKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cEqualsSignKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cColumnVarAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cColumnVarCt_SymbolNameTypeParserRuleCall_8_0 = (RuleCall)cColumnVarAssignment_8.eContents().get(0);
		private final Alternatives cAlternatives_9 = (Alternatives)cGroup.eContents().get(9);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_9_0 = (RuleCall)cAlternatives_9.eContents().get(0);
		private final Group cGroup_9_1 = (Group)cAlternatives_9.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_9_1_0 = (RuleCall)cGroup_9_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_9_1_1 = (RuleCall)cGroup_9_1.eContents().get(1);
		private final Keyword cColumnKeyword_9_1_2 = (Keyword)cGroup_9_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_9_1_3 = (RuleCall)cGroup_9_1.eContents().get(3);
		
		//ct_ColumnType:
		//
		//	TAG_OPEN "Column" xmlns+=XS_xmlns* "columnNum" "=" columnNum=XS_INT "columnVar" "=" columnVar=ct_SymbolNameType
		//
		//	(TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Column" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Column" xmlns+=XS_xmlns* "columnNum" "=" columnNum=XS_INT "columnVar" "=" columnVar=ct_SymbolNameType
		//
		//(TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Column" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Column"
		public Keyword getColumnKeyword_1() { return cColumnKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//"columnNum"
		public Keyword getColumnNumKeyword_3() { return cColumnNumKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//columnNum=XS_INT
		public Assignment getColumnNumAssignment_5() { return cColumnNumAssignment_5; }

		//XS_INT
		public RuleCall getColumnNumXS_INTParserRuleCall_5_0() { return cColumnNumXS_INTParserRuleCall_5_0; }

		//"columnVar"
		public Keyword getColumnVarKeyword_6() { return cColumnVarKeyword_6; }

		//"="
		public Keyword getEqualsSignKeyword_7() { return cEqualsSignKeyword_7; }

		//columnVar=ct_SymbolNameType
		public Assignment getColumnVarAssignment_8() { return cColumnVarAssignment_8; }

		//ct_SymbolNameType
		public RuleCall getColumnVarCt_SymbolNameTypeParserRuleCall_8_0() { return cColumnVarCt_SymbolNameTypeParserRuleCall_8_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Column" TAG_CLOSE
		public Alternatives getAlternatives_9() { return cAlternatives_9; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_9_0() { return cTAG_CLOSE2ParserRuleCall_9_0; }

		//TAG_CLOSE TAG_OPEN2 "Column" TAG_CLOSE
		public Group getGroup_9_1() { return cGroup_9_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_9_1_0() { return cTAG_CLOSEParserRuleCall_9_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_9_1_1() { return cTAG_OPEN2ParserRuleCall_9_1_1; }

		//"Column"
		public Keyword getColumnKeyword_9_1_2() { return cColumnKeyword_9_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_9_1_3() { return cTAG_CLOSEParserRuleCall_9_1_3; }
	}

	public class Ct_ExternalSourceTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_ExternalSourceType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cExternalSourceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cUnorderedGroup_3.eContents().get(0);
		private final Keyword cFormatKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_0_1 = (Keyword)cGroup_3_0.eContents().get(1);
		private final Assignment cFormatAssignment_3_0_2 = (Assignment)cGroup_3_0.eContents().get(2);
		private final RuleCall cFormatCt_SymbolNameTypeParserRuleCall_3_0_2_0 = (RuleCall)cFormatAssignment_3_0_2.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cUnorderedGroup_3.eContents().get(1);
		private final Keyword cHeaderLineKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Assignment cHeaderLineAssignment_3_1_2 = (Assignment)cGroup_3_1.eContents().get(2);
		private final Alternatives cHeaderLineAlternatives_3_1_2_0 = (Alternatives)cHeaderLineAssignment_3_1_2.eContents().get(0);
		private final RuleCall cHeaderLineMath_TRUEParserRuleCall_3_1_2_0_0 = (RuleCall)cHeaderLineAlternatives_3_1_2_0.eContents().get(0);
		private final RuleCall cHeaderLineMath_FALSEParserRuleCall_3_1_2_0_1 = (RuleCall)cHeaderLineAlternatives_3_1_2_0.eContents().get(1);
		private final Group cGroup_3_2 = (Group)cUnorderedGroup_3.eContents().get(2);
		private final Keyword cIgnoreLineSymbolKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Assignment cIgnoreLineSymbolAssignment_3_2_2 = (Assignment)cGroup_3_2.eContents().get(2);
		private final RuleCall cIgnoreLineSymbolCt_SymbolNameTypeParserRuleCall_3_2_2_0 = (RuleCall)cIgnoreLineSymbolAssignment_3_2_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cUnorderedGroup_3.eContents().get(3);
		private final Keyword cUrlKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Keyword cEqualsSignKeyword_3_3_1 = (Keyword)cGroup_3_3.eContents().get(1);
		private final Assignment cUrlAssignment_3_3_2 = (Assignment)cGroup_3_3.eContents().get(2);
		private final RuleCall cUrlXS_ANY_URIParserRuleCall_3_3_2_0 = (RuleCall)cUrlAssignment_3_3_2.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_1 = (RuleCall)cGroup_4_1.eContents().get(1);
		private final Keyword cExternalSourceKeyword_4_1_2 = (Keyword)cGroup_4_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		
		//ct_ExternalSourceType:
		//
		//	TAG_OPEN "ExternalSource" xmlns+=XS_xmlns* ("format" "=" format=ct_SymbolNameType & ("headerLine" "="
		//
		//	headerLine=(Math_TRUE | Math_FALSE))? & ("ignoreLineSymbol" "=" ignoreLineSymbol=ct_SymbolNameType)? & "url" "="
		//
		//	url=XS_ANY_URI) (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "ExternalSource" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "ExternalSource" xmlns+=XS_xmlns* ("format" "=" format=ct_SymbolNameType & ("headerLine" "="
		//
		//headerLine=(Math_TRUE | Math_FALSE))? & ("ignoreLineSymbol" "=" ignoreLineSymbol=ct_SymbolNameType)? & "url" "="
		//
		//url=XS_ANY_URI) (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "ExternalSource" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"ExternalSource"
		public Keyword getExternalSourceKeyword_1() { return cExternalSourceKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//"format" "=" format=ct_SymbolNameType & ("headerLine" "=" headerLine=(Math_TRUE | Math_FALSE))? & ("ignoreLineSymbol"
		//
		//"=" ignoreLineSymbol=ct_SymbolNameType)? & "url" "=" url=XS_ANY_URI
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }

		//"format" "=" format=ct_SymbolNameType
		public Group getGroup_3_0() { return cGroup_3_0; }

		//"format"
		public Keyword getFormatKeyword_3_0_0() { return cFormatKeyword_3_0_0; }

		//"="
		public Keyword getEqualsSignKeyword_3_0_1() { return cEqualsSignKeyword_3_0_1; }

		//format=ct_SymbolNameType
		public Assignment getFormatAssignment_3_0_2() { return cFormatAssignment_3_0_2; }

		//ct_SymbolNameType
		public RuleCall getFormatCt_SymbolNameTypeParserRuleCall_3_0_2_0() { return cFormatCt_SymbolNameTypeParserRuleCall_3_0_2_0; }

		//("headerLine" "=" headerLine=(Math_TRUE | Math_FALSE))?
		public Group getGroup_3_1() { return cGroup_3_1; }

		//"headerLine"
		public Keyword getHeaderLineKeyword_3_1_0() { return cHeaderLineKeyword_3_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_3_1_1() { return cEqualsSignKeyword_3_1_1; }

		//headerLine=(Math_TRUE | Math_FALSE)
		public Assignment getHeaderLineAssignment_3_1_2() { return cHeaderLineAssignment_3_1_2; }

		//Math_TRUE | Math_FALSE
		public Alternatives getHeaderLineAlternatives_3_1_2_0() { return cHeaderLineAlternatives_3_1_2_0; }

		//Math_TRUE
		public RuleCall getHeaderLineMath_TRUEParserRuleCall_3_1_2_0_0() { return cHeaderLineMath_TRUEParserRuleCall_3_1_2_0_0; }

		//Math_FALSE
		public RuleCall getHeaderLineMath_FALSEParserRuleCall_3_1_2_0_1() { return cHeaderLineMath_FALSEParserRuleCall_3_1_2_0_1; }

		//("ignoreLineSymbol" "=" ignoreLineSymbol=ct_SymbolNameType)?
		public Group getGroup_3_2() { return cGroup_3_2; }

		//"ignoreLineSymbol"
		public Keyword getIgnoreLineSymbolKeyword_3_2_0() { return cIgnoreLineSymbolKeyword_3_2_0; }

		//"="
		public Keyword getEqualsSignKeyword_3_2_1() { return cEqualsSignKeyword_3_2_1; }

		//ignoreLineSymbol=ct_SymbolNameType
		public Assignment getIgnoreLineSymbolAssignment_3_2_2() { return cIgnoreLineSymbolAssignment_3_2_2; }

		//ct_SymbolNameType
		public RuleCall getIgnoreLineSymbolCt_SymbolNameTypeParserRuleCall_3_2_2_0() { return cIgnoreLineSymbolCt_SymbolNameTypeParserRuleCall_3_2_2_0; }

		//"url" "=" url=XS_ANY_URI
		public Group getGroup_3_3() { return cGroup_3_3; }

		//"url"
		public Keyword getUrlKeyword_3_3_0() { return cUrlKeyword_3_3_0; }

		//"="
		public Keyword getEqualsSignKeyword_3_3_1() { return cEqualsSignKeyword_3_3_1; }

		//url=XS_ANY_URI
		public Assignment getUrlAssignment_3_3_2() { return cUrlAssignment_3_3_2; }

		//XS_ANY_URI
		public RuleCall getUrlXS_ANY_URIParserRuleCall_3_3_2_0() { return cUrlXS_ANY_URIParserRuleCall_3_3_2_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "ExternalSource" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE TAG_OPEN2 "ExternalSource" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_1() { return cTAG_OPEN2ParserRuleCall_4_1_1; }

		//"ExternalSource"
		public Keyword getExternalSourceKeyword_4_1_2() { return cExternalSourceKeyword_4_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_3() { return cTAG_CLOSEParserRuleCall_4_1_3; }
	}

	public class Ct_RowTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_RowType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCt_RowTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cRowKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cRowAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cRowCt_RowTypeContentParserRuleCall_4_1_1_0 = (RuleCall)cRowAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cRowKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//ct_RowType:
		//
		//	{ct_RowType} TAG_OPEN "Row" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Row+=ct_RowTypeContent* TAG_OPEN2 "Row"
		//
		//	TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{ct_RowType} TAG_OPEN "Row" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Row+=ct_RowTypeContent* TAG_OPEN2 "Row" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{ct_RowType}
		public Action getCt_RowTypeAction_0() { return cCt_RowTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Row"
		public Keyword getRowKeyword_2() { return cRowKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Row+=ct_RowTypeContent* TAG_OPEN2 "Row" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Row+=ct_RowTypeContent* TAG_OPEN2 "Row" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Row+=ct_RowTypeContent*
		public Assignment getRowAssignment_4_1_1() { return cRowAssignment_4_1_1; }

		//ct_RowTypeContent
		public RuleCall getRowCt_RowTypeContentParserRuleCall_4_1_1_0() { return cRowCt_RowTypeContentParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Row"
		public Keyword getRowKeyword_4_1_3() { return cRowKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Ct_RowTypeContentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_RowTypeContent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cCellAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cCellCt_CellTypeParserRuleCall_0_0 = (RuleCall)cCellAssignment_0.eContents().get(0);
		private final Assignment cNullAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cNullCt_NullCellTypeParserRuleCall_1_0 = (RuleCall)cNullAssignment_1.eContents().get(0);
		
		//ct_RowTypeContent:
		//
		//	Cell=ct_CellType | Null=ct_NullCellType;
		public ParserRule getRule() { return rule; }

		//Cell=ct_CellType | Null=ct_NullCellType
		public Alternatives getAlternatives() { return cAlternatives; }

		//Cell=ct_CellType
		public Assignment getCellAssignment_0() { return cCellAssignment_0; }

		//ct_CellType
		public RuleCall getCellCt_CellTypeParserRuleCall_0_0() { return cCellCt_CellTypeParserRuleCall_0_0; }

		//Null=ct_NullCellType
		public Assignment getNullAssignment_1() { return cNullAssignment_1; }

		//ct_NullCellType
		public RuleCall getNullCt_NullCellTypeParserRuleCall_1_0() { return cNullCt_NullCellTypeParserRuleCall_1_0; }
	}

	public class Ct_NullCellTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_NullCellType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cNullAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cNullNullKeyword_1_0 = (Keyword)cNullAssignment_1.eContents().get(0);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//ct_NullCellType:
		//
		//	TAG_OPEN null="Null" TAG_CLOSE2;
		public ParserRule getRule() { return rule; }

		//TAG_OPEN null="Null" TAG_CLOSE2
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//null="Null"
		public Assignment getNullAssignment_1() { return cNullAssignment_1; }

		//"Null"
		public Keyword getNullNullKeyword_1_0() { return cNullNullKeyword_1_0; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_2() { return cTAG_CLOSE2ParserRuleCall_2; }
	}

	public class Ct_CellTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_CellType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cCellKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueCt_Decimal_ValueParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_1 = (RuleCall)cGroup_4_1.eContents().get(1);
		private final Keyword cCellKeyword_4_1_2 = (Keyword)cGroup_4_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		
		//ct_CellType:
		//
		//	TAG_OPEN "Cell" xmlns+=XS_xmlns* value=ct_Decimal_Value (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Cell" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Cell" xmlns+=XS_xmlns* value=ct_Decimal_Value (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Cell" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Cell"
		public Keyword getCellKeyword_1() { return cCellKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//value=ct_Decimal_Value
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//ct_Decimal_Value
		public RuleCall getValueCt_Decimal_ValueParserRuleCall_3_0() { return cValueCt_Decimal_ValueParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Cell" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE TAG_OPEN2 "Cell" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_1() { return cTAG_OPEN2ParserRuleCall_4_1_1; }

		//"Cell"
		public Keyword getCellKeyword_4_1_2() { return cCellKeyword_4_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_3() { return cTAG_CLOSEParserRuleCall_4_1_3; }
	}

	public class Ct_InternalSourceTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_InternalSourceType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cInternalSourceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Assignment cBlockAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cBlockMath_blockParserRuleCall_3_0 = (RuleCall)cBlockAssignment_3.eContents().get(0);
		private final Assignment cSymbIdAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cSymbIdMath_symbIdParserRuleCall_4_0 = (RuleCall)cSymbIdAssignment_4.eContents().get(0);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_5_0 = (RuleCall)cAlternatives_5.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cAlternatives_5.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_0 = (RuleCall)cGroup_5_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_5_1_1 = (RuleCall)cGroup_5_1.eContents().get(1);
		private final Keyword cInternalSourceKeyword_5_1_2 = (Keyword)cGroup_5_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_5_1_3 = (RuleCall)cGroup_5_1.eContents().get(3);
		
		//ct_InternalSourceType:
		//
		//	TAG_OPEN "InternalSource" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//	"InternalSource" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "InternalSource" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
		//
		//"InternalSource" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"InternalSource"
		public Keyword getInternalSourceKeyword_1() { return cInternalSourceKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//block=Math_block?
		public Assignment getBlockAssignment_3() { return cBlockAssignment_3; }

		//Math_block
		public RuleCall getBlockMath_blockParserRuleCall_3_0() { return cBlockMath_blockParserRuleCall_3_0; }

		//symbId=Math_symbId
		public Assignment getSymbIdAssignment_4() { return cSymbIdAssignment_4; }

		//Math_symbId
		public RuleCall getSymbIdMath_symbIdParserRuleCall_4_0() { return cSymbIdMath_symbIdParserRuleCall_4_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "InternalSource" TAG_CLOSE
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_5_0() { return cTAG_CLOSE2ParserRuleCall_5_0; }

		//TAG_CLOSE TAG_OPEN2 "InternalSource" TAG_CLOSE
		public Group getGroup_5_1() { return cGroup_5_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_0() { return cTAG_CLOSEParserRuleCall_5_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_5_1_1() { return cTAG_OPEN2ParserRuleCall_5_1_1; }

		//"InternalSource"
		public Keyword getInternalSourceKeyword_5_1_2() { return cInternalSourceKeyword_5_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_5_1_3() { return cTAG_CLOSEParserRuleCall_5_1_3; }
	}

	public class Ct_VectorTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_VectorType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCt_VectorTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cVectorKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cScalarAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cScalarMath_ScalarTypeParserRuleCall_4_1_1_0 = (RuleCall)cScalarAssignment_4_1_1.eContents().get(0);
		private final Assignment cSequenceAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cSequenceCt_SequenceTypeParserRuleCall_4_1_2_0 = (RuleCall)cSequenceAssignment_4_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		private final Keyword cVectorKeyword_4_1_4 = (Keyword)cGroup_4_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_5 = (RuleCall)cGroup_4_1.eContents().get(5);
		
		//ct_VectorType:
		//
		//	{ct_VectorType} TAG_OPEN "Vector" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Scalar+=Math_ScalarType?
		//
		//	Sequence+=ct_SequenceType* TAG_OPEN2 "Vector" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{ct_VectorType} TAG_OPEN "Vector" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Scalar+=Math_ScalarType?
		//
		//Sequence+=ct_SequenceType* TAG_OPEN2 "Vector" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{ct_VectorType}
		public Action getCt_VectorTypeAction_0() { return cCt_VectorTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Vector"
		public Keyword getVectorKeyword_2() { return cVectorKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Scalar+=Math_ScalarType? Sequence+=ct_SequenceType* TAG_OPEN2 "Vector" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Scalar+=Math_ScalarType? Sequence+=ct_SequenceType* TAG_OPEN2 "Vector" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Scalar+=Math_ScalarType?
		public Assignment getScalarAssignment_4_1_1() { return cScalarAssignment_4_1_1; }

		//Math_ScalarType
		public RuleCall getScalarMath_ScalarTypeParserRuleCall_4_1_1_0() { return cScalarMath_ScalarTypeParserRuleCall_4_1_1_0; }

		//Sequence+=ct_SequenceType*
		public Assignment getSequenceAssignment_4_1_2() { return cSequenceAssignment_4_1_2; }

		//ct_SequenceType
		public RuleCall getSequenceCt_SequenceTypeParserRuleCall_4_1_2_0() { return cSequenceCt_SequenceTypeParserRuleCall_4_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_3() { return cTAG_OPEN2ParserRuleCall_4_1_3; }

		//"Vector"
		public Keyword getVectorKeyword_4_1_4() { return cVectorKeyword_4_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_5() { return cTAG_CLOSEParserRuleCall_4_1_5; }
	}

	public class Ct_SequenceTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_SequenceType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cSequenceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final Keyword cBeginKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cEqualsSignKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cBeginAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cBeginXS_DECIMALParserRuleCall_5_0 = (RuleCall)cBeginAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cEndKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cEndAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cEndXS_DECIMALParserRuleCall_6_2_0 = (RuleCall)cEndAssignment_6_2.eContents().get(0);
		private final Keyword cStepSizeKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cEqualsSignKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cStepwiseAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cStepwiseXS_DECIMALParserRuleCall_9_0 = (RuleCall)cStepwiseAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cRepetitionsKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Keyword cEqualsSignKeyword_10_1 = (Keyword)cGroup_10.eContents().get(1);
		private final Assignment cRepetitionAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cRepetitionXS_INTParserRuleCall_10_2_0 = (RuleCall)cRepetitionAssignment_10_2.eContents().get(0);
		private final Alternatives cAlternatives_11 = (Alternatives)cGroup.eContents().get(11);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_11_0 = (RuleCall)cAlternatives_11.eContents().get(0);
		private final Group cGroup_11_1 = (Group)cAlternatives_11.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_11_1_0 = (RuleCall)cGroup_11_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_11_1_1 = (RuleCall)cGroup_11_1.eContents().get(1);
		private final Keyword cSequenceKeyword_11_1_2 = (Keyword)cGroup_11_1.eContents().get(2);
		private final RuleCall cTAG_CLOSEParserRuleCall_11_1_3 = (RuleCall)cGroup_11_1.eContents().get(3);
		
		//ct_SequenceType:
		//
		//	TAG_OPEN "Sequence" xmlns+=XS_xmlns* "begin" "=" begin=XS_DECIMAL ("end" "=" end=XS_DECIMAL)? "stepSize" "="
		//
		//	stepwise=XS_DECIMAL ("repetitions" "=" repetition=XS_INT)? (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Sequence" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Sequence" xmlns+=XS_xmlns* "begin" "=" begin=XS_DECIMAL ("end" "=" end=XS_DECIMAL)? "stepSize" "="
		//
		//stepwise=XS_DECIMAL ("repetitions" "=" repetition=XS_INT)? (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Sequence" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Sequence"
		public Keyword getSequenceKeyword_1() { return cSequenceKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//"begin"
		public Keyword getBeginKeyword_3() { return cBeginKeyword_3; }

		//"="
		public Keyword getEqualsSignKeyword_4() { return cEqualsSignKeyword_4; }

		//begin=XS_DECIMAL
		public Assignment getBeginAssignment_5() { return cBeginAssignment_5; }

		//XS_DECIMAL
		public RuleCall getBeginXS_DECIMALParserRuleCall_5_0() { return cBeginXS_DECIMALParserRuleCall_5_0; }

		//("end" "=" end=XS_DECIMAL)?
		public Group getGroup_6() { return cGroup_6; }

		//"end"
		public Keyword getEndKeyword_6_0() { return cEndKeyword_6_0; }

		//"="
		public Keyword getEqualsSignKeyword_6_1() { return cEqualsSignKeyword_6_1; }

		//end=XS_DECIMAL
		public Assignment getEndAssignment_6_2() { return cEndAssignment_6_2; }

		//XS_DECIMAL
		public RuleCall getEndXS_DECIMALParserRuleCall_6_2_0() { return cEndXS_DECIMALParserRuleCall_6_2_0; }

		//"stepSize"
		public Keyword getStepSizeKeyword_7() { return cStepSizeKeyword_7; }

		//"="
		public Keyword getEqualsSignKeyword_8() { return cEqualsSignKeyword_8; }

		//stepwise=XS_DECIMAL
		public Assignment getStepwiseAssignment_9() { return cStepwiseAssignment_9; }

		//XS_DECIMAL
		public RuleCall getStepwiseXS_DECIMALParserRuleCall_9_0() { return cStepwiseXS_DECIMALParserRuleCall_9_0; }

		//("repetitions" "=" repetition=XS_INT)?
		public Group getGroup_10() { return cGroup_10; }

		//"repetitions"
		public Keyword getRepetitionsKeyword_10_0() { return cRepetitionsKeyword_10_0; }

		//"="
		public Keyword getEqualsSignKeyword_10_1() { return cEqualsSignKeyword_10_1; }

		//repetition=XS_INT
		public Assignment getRepetitionAssignment_10_2() { return cRepetitionAssignment_10_2; }

		//XS_INT
		public RuleCall getRepetitionXS_INTParserRuleCall_10_2_0() { return cRepetitionXS_INTParserRuleCall_10_2_0; }

		//TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Sequence" TAG_CLOSE
		public Alternatives getAlternatives_11() { return cAlternatives_11; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_11_0() { return cTAG_CLOSE2ParserRuleCall_11_0; }

		//TAG_CLOSE TAG_OPEN2 "Sequence" TAG_CLOSE
		public Group getGroup_11_1() { return cGroup_11_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_11_1_0() { return cTAG_CLOSEParserRuleCall_11_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_11_1_1() { return cTAG_OPEN2ParserRuleCall_11_1_1; }

		//"Sequence"
		public Keyword getSequenceKeyword_11_1_2() { return cSequenceKeyword_11_1_2; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_11_1_3() { return cTAG_CLOSEParserRuleCall_11_1_3; }
	}

	public class Ct_VariableDefinitionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_VariableDefinitionType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cTAG_OPENParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cVariableKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cXmlnsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_2_0 = (RuleCall)cXmlnsAssignment_2.eContents().get(0);
		private final UnorderedGroup cUnorderedGroup_3 = (UnorderedGroup)cGroup.eContents().get(3);
		private final Assignment cIndependentVarAssignment_3_0 = (Assignment)cUnorderedGroup_3.eContents().get(0);
		private final RuleCall cIndependentVarCt_independentVarParserRuleCall_3_0_0 = (RuleCall)cIndependentVarAssignment_3_0.eContents().get(0);
		private final Assignment cSymbIdAssignment_3_1 = (Assignment)cUnorderedGroup_3.eContents().get(1);
		private final RuleCall cSymbIdCt_symbIdParserRuleCall_3_1_0 = (RuleCall)cSymbIdAssignment_3_1.eContents().get(0);
		private final Assignment cSymbolTypeAssignment_3_2 = (Assignment)cUnorderedGroup_3.eContents().get(2);
		private final RuleCall cSymbolTypeCt_symbolTypeParserRuleCall_3_2_0 = (RuleCall)cSymbolTypeAssignment_3_2.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cDescriptionAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cDescriptionCt_AnnotationTypeParserRuleCall_4_1_1_0 = (RuleCall)cDescriptionAssignment_4_1_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_2 = (Assignment)cGroup_4_1.eContents().get(2);
		private final RuleCall cExprCt_RhsParserRuleCall_4_1_2_0 = (RuleCall)cExprAssignment_4_1_2.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_3 = (RuleCall)cGroup_4_1.eContents().get(3);
		private final Keyword cVariableKeyword_4_1_4 = (Keyword)cGroup_4_1.eContents().get(4);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_5 = (RuleCall)cGroup_4_1.eContents().get(5);
		
		//ct_VariableDefinitionType:
		//
		//	TAG_OPEN "Variable" xmlns+=XS_xmlns* (independentVar=ct_independentVar? & symbId=ct_symbId &
		//
		//	symbolType=ct_symbolType) (TAG_CLOSE2 | TAG_CLOSE Description=ct_AnnotationType? Expr=ct_Rhs? TAG_OPEN2 "Variable"
		//
		//	TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//TAG_OPEN "Variable" xmlns+=XS_xmlns* (independentVar=ct_independentVar? & symbId=ct_symbId & symbolType=ct_symbolType)
		//
		//(TAG_CLOSE2 | TAG_CLOSE Description=ct_AnnotationType? Expr=ct_Rhs? TAG_OPEN2 "Variable" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_0() { return cTAG_OPENParserRuleCall_0; }

		//"Variable"
		public Keyword getVariableKeyword_1() { return cVariableKeyword_1; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_2() { return cXmlnsAssignment_2; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_2_0() { return cXmlnsXS_xmlnsParserRuleCall_2_0; }

		//independentVar=ct_independentVar? & symbId=ct_symbId & symbolType=ct_symbolType
		public UnorderedGroup getUnorderedGroup_3() { return cUnorderedGroup_3; }

		//independentVar=ct_independentVar?
		public Assignment getIndependentVarAssignment_3_0() { return cIndependentVarAssignment_3_0; }

		//ct_independentVar
		public RuleCall getIndependentVarCt_independentVarParserRuleCall_3_0_0() { return cIndependentVarCt_independentVarParserRuleCall_3_0_0; }

		//symbId=ct_symbId
		public Assignment getSymbIdAssignment_3_1() { return cSymbIdAssignment_3_1; }

		//ct_symbId
		public RuleCall getSymbIdCt_symbIdParserRuleCall_3_1_0() { return cSymbIdCt_symbIdParserRuleCall_3_1_0; }

		//symbolType=ct_symbolType
		public Assignment getSymbolTypeAssignment_3_2() { return cSymbolTypeAssignment_3_2; }

		//ct_symbolType
		public RuleCall getSymbolTypeCt_symbolTypeParserRuleCall_3_2_0() { return cSymbolTypeCt_symbolTypeParserRuleCall_3_2_0; }

		//TAG_CLOSE2 | TAG_CLOSE Description=ct_AnnotationType? Expr=ct_Rhs? TAG_OPEN2 "Variable" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Description=ct_AnnotationType? Expr=ct_Rhs? TAG_OPEN2 "Variable" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Description=ct_AnnotationType?
		public Assignment getDescriptionAssignment_4_1_1() { return cDescriptionAssignment_4_1_1; }

		//ct_AnnotationType
		public RuleCall getDescriptionCt_AnnotationTypeParserRuleCall_4_1_1_0() { return cDescriptionCt_AnnotationTypeParserRuleCall_4_1_1_0; }

		//Expr=ct_Rhs?
		public Assignment getExprAssignment_4_1_2() { return cExprAssignment_4_1_2; }

		//ct_Rhs
		public RuleCall getExprCt_RhsParserRuleCall_4_1_2_0() { return cExprCt_RhsParserRuleCall_4_1_2_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_3() { return cTAG_OPEN2ParserRuleCall_4_1_3; }

		//"Variable"
		public Keyword getVariableKeyword_4_1_4() { return cVariableKeyword_4_1_4; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_5() { return cTAG_CLOSEParserRuleCall_4_1_5; }
	}

	public class Ct_RestrictionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_RestrictionType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCt_RestrictionTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final RuleCall cTAG_OPENParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cRestrictionKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cXmlnsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cXmlnsXS_xmlnsParserRuleCall_3_0 = (RuleCall)cXmlnsAssignment_3.eContents().get(0);
		private final Alternatives cAlternatives_4 = (Alternatives)cGroup.eContents().get(4);
		private final RuleCall cTAG_CLOSE2ParserRuleCall_4_0 = (RuleCall)cAlternatives_4.eContents().get(0);
		private final Group cGroup_4_1 = (Group)cAlternatives_4.eContents().get(1);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_0 = (RuleCall)cGroup_4_1.eContents().get(0);
		private final Assignment cExprAssignment_4_1_1 = (Assignment)cGroup_4_1.eContents().get(1);
		private final RuleCall cExprMath_ConditionTypeParserRuleCall_4_1_1_0 = (RuleCall)cExprAssignment_4_1_1.eContents().get(0);
		private final RuleCall cTAG_OPEN2ParserRuleCall_4_1_2 = (RuleCall)cGroup_4_1.eContents().get(2);
		private final Keyword cRestrictionKeyword_4_1_3 = (Keyword)cGroup_4_1.eContents().get(3);
		private final RuleCall cTAG_CLOSEParserRuleCall_4_1_4 = (RuleCall)cGroup_4_1.eContents().get(4);
		
		//ct_RestrictionType:
		//
		//	{ct_RestrictionType} TAG_OPEN "Restriction" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=Math_ConditionType?
		//
		//	TAG_OPEN2 "Restriction" TAG_CLOSE);
		public ParserRule getRule() { return rule; }

		//{ct_RestrictionType} TAG_OPEN "Restriction" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=Math_ConditionType? TAG_OPEN2
		//
		//"Restriction" TAG_CLOSE)
		public Group getGroup() { return cGroup; }

		//{ct_RestrictionType}
		public Action getCt_RestrictionTypeAction_0() { return cCt_RestrictionTypeAction_0; }

		//TAG_OPEN
		public RuleCall getTAG_OPENParserRuleCall_1() { return cTAG_OPENParserRuleCall_1; }

		//"Restriction"
		public Keyword getRestrictionKeyword_2() { return cRestrictionKeyword_2; }

		//xmlns+=XS_xmlns*
		public Assignment getXmlnsAssignment_3() { return cXmlnsAssignment_3; }

		//XS_xmlns
		public RuleCall getXmlnsXS_xmlnsParserRuleCall_3_0() { return cXmlnsXS_xmlnsParserRuleCall_3_0; }

		//TAG_CLOSE2 | TAG_CLOSE Expr=Math_ConditionType? TAG_OPEN2 "Restriction" TAG_CLOSE
		public Alternatives getAlternatives_4() { return cAlternatives_4; }

		//TAG_CLOSE2
		public RuleCall getTAG_CLOSE2ParserRuleCall_4_0() { return cTAG_CLOSE2ParserRuleCall_4_0; }

		//TAG_CLOSE Expr=Math_ConditionType? TAG_OPEN2 "Restriction" TAG_CLOSE
		public Group getGroup_4_1() { return cGroup_4_1; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_0() { return cTAG_CLOSEParserRuleCall_4_1_0; }

		//Expr=Math_ConditionType?
		public Assignment getExprAssignment_4_1_1() { return cExprAssignment_4_1_1; }

		//Math_ConditionType
		public RuleCall getExprMath_ConditionTypeParserRuleCall_4_1_1_0() { return cExprMath_ConditionTypeParserRuleCall_4_1_1_0; }

		//TAG_OPEN2
		public RuleCall getTAG_OPEN2ParserRuleCall_4_1_2() { return cTAG_OPEN2ParserRuleCall_4_1_2; }

		//"Restriction"
		public Keyword getRestrictionKeyword_4_1_3() { return cRestrictionKeyword_4_1_3; }

		//TAG_CLOSE
		public RuleCall getTAG_CLOSEParserRuleCall_4_1_4() { return cTAG_CLOSEParserRuleCall_4_1_4; }
	}

	public class Ct_ScalarRhsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_ScalarRhs");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cEquationAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cEquationMath_EquationTypeParserRuleCall_0_0 = (RuleCall)cEquationAssignment_0.eContents().get(0);
		private final Assignment cScalarAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cScalarMath_ScalarTypeParserRuleCall_1_0 = (RuleCall)cScalarAssignment_1.eContents().get(0);
		private final Assignment cVarAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final RuleCall cVarMath_VarTypeParserRuleCall_2_0 = (RuleCall)cVarAssignment_2.eContents().get(0);
		private final Assignment cStringAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final RuleCall cStringMath_StringTypeParserRuleCall_3_0 = (RuleCall)cStringAssignment_3.eContents().get(0);
		private final Assignment cFunctionCallAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final RuleCall cFunctionCallMath_FunctionCallTypeParserRuleCall_4_0 = (RuleCall)cFunctionCallAssignment_4.eContents().get(0);
		
		//ct_ScalarRhs:
		//
		//	Equation=Math_EquationType | Scalar=Math_ScalarType | Var=Math_VarType | String=Math_StringType |
		//
		//	FunctionCall=Math_FunctionCallType;
		public ParserRule getRule() { return rule; }

		//Equation=Math_EquationType | Scalar=Math_ScalarType | Var=Math_VarType | String=Math_StringType |
		//
		//FunctionCall=Math_FunctionCallType
		public Alternatives getAlternatives() { return cAlternatives; }

		//Equation=Math_EquationType
		public Assignment getEquationAssignment_0() { return cEquationAssignment_0; }

		//Math_EquationType
		public RuleCall getEquationMath_EquationTypeParserRuleCall_0_0() { return cEquationMath_EquationTypeParserRuleCall_0_0; }

		//Scalar=Math_ScalarType
		public Assignment getScalarAssignment_1() { return cScalarAssignment_1; }

		//Math_ScalarType
		public RuleCall getScalarMath_ScalarTypeParserRuleCall_1_0() { return cScalarMath_ScalarTypeParserRuleCall_1_0; }

		//Var=Math_VarType
		public Assignment getVarAssignment_2() { return cVarAssignment_2; }

		//Math_VarType
		public RuleCall getVarMath_VarTypeParserRuleCall_2_0() { return cVarMath_VarTypeParserRuleCall_2_0; }

		//String=Math_StringType
		public Assignment getStringAssignment_3() { return cStringAssignment_3; }

		//Math_StringType
		public RuleCall getStringMath_StringTypeParserRuleCall_3_0() { return cStringMath_StringTypeParserRuleCall_3_0; }

		//FunctionCall=Math_FunctionCallType
		public Assignment getFunctionCallAssignment_4() { return cFunctionCallAssignment_4; }

		//Math_FunctionCallType
		public RuleCall getFunctionCallMath_FunctionCallTypeParserRuleCall_4_0() { return cFunctionCallMath_FunctionCallTypeParserRuleCall_4_0; }
	}

	public class Ct_independentVarElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_independentVar");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIndependentVarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIndependentVarAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIndependentVarCt_SymbolNameTypeParserRuleCall_2_0 = (RuleCall)cIndependentVarAssignment_2.eContents().get(0);
		
		//ct_independentVar:
		//
		//	"independentVar" "=" independentVar=ct_SymbolNameType;
		public ParserRule getRule() { return rule; }

		//"independentVar" "=" independentVar=ct_SymbolNameType
		public Group getGroup() { return cGroup; }

		//"independentVar"
		public Keyword getIndependentVarKeyword_0() { return cIndependentVarKeyword_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//independentVar=ct_SymbolNameType
		public Assignment getIndependentVarAssignment_2() { return cIndependentVarAssignment_2; }

		//ct_SymbolNameType
		public RuleCall getIndependentVarCt_SymbolNameTypeParserRuleCall_2_0() { return cIndependentVarCt_SymbolNameTypeParserRuleCall_2_0; }
	}

	public class Ct_levelIdElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_levelId");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLevelIdKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLevelIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLevelIdCt_BlockNameTypeParserRuleCall_2_0 = (RuleCall)cLevelIdAssignment_2.eContents().get(0);
		
		//ct_levelId:
		//
		//	"levelId" "=" levelId=ct_BlockNameType;
		public ParserRule getRule() { return rule; }

		//"levelId" "=" levelId=ct_BlockNameType
		public Group getGroup() { return cGroup; }

		//"levelId"
		public Keyword getLevelIdKeyword_0() { return cLevelIdKeyword_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//levelId=ct_BlockNameType
		public Assignment getLevelIdAssignment_2() { return cLevelIdAssignment_2; }

		//ct_BlockNameType
		public RuleCall getLevelIdCt_BlockNameTypeParserRuleCall_2_0() { return cLevelIdCt_BlockNameTypeParserRuleCall_2_0; }
	}

	public class Ct_nameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_name");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameXS_STRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//ct_name:
		//
		//	"name" "=" name=XS_STRING;
		public ParserRule getRule() { return rule; }

		//"name" "=" name=XS_STRING
		public Group getGroup() { return cGroup; }

		//"name"
		public Keyword getNameKeyword_0() { return cNameKeyword_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//name=XS_STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//XS_STRING
		public RuleCall getNameXS_STRINGTerminalRuleCall_2_0() { return cNameXS_STRINGTerminalRuleCall_2_0; }
	}

	public class Ct_symbIdElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_symbId");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSymbIdKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSymbIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSymbIdCt_SymbolNameTypeParserRuleCall_2_0 = (RuleCall)cSymbIdAssignment_2.eContents().get(0);
		
		//ct_symbId:
		//
		//	"symbId" "=" symbId=ct_SymbolNameType;
		public ParserRule getRule() { return rule; }

		//"symbId" "=" symbId=ct_SymbolNameType
		public Group getGroup() { return cGroup; }

		//"symbId"
		public Keyword getSymbIdKeyword_0() { return cSymbIdKeyword_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//symbId=ct_SymbolNameType
		public Assignment getSymbIdAssignment_2() { return cSymbIdAssignment_2; }

		//ct_SymbolNameType
		public RuleCall getSymbIdCt_SymbolNameTypeParserRuleCall_2_0() { return cSymbIdCt_SymbolNameTypeParserRuleCall_2_0; }
	}

	public class Ct_idElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_id");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIdKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIdCt_BlockNameTypeParserRuleCall_2_0 = (RuleCall)cIdAssignment_2.eContents().get(0);
		
		//ct_id:
		//
		//	"id" "=" id=ct_BlockNameType;
		public ParserRule getRule() { return rule; }

		//"id" "=" id=ct_BlockNameType
		public Group getGroup() { return cGroup; }

		//"id"
		public Keyword getIdKeyword_0() { return cIdKeyword_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//id=ct_BlockNameType
		public Assignment getIdAssignment_2() { return cIdAssignment_2; }

		//ct_BlockNameType
		public RuleCall getIdCt_BlockNameTypeParserRuleCall_2_0() { return cIdCt_BlockNameTypeParserRuleCall_2_0; }
	}

	public class Ct_symbolTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_symbolType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSymbolTypeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cSymbolTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cSymbolTypeCt_SymbolTypeTypeParserRuleCall_2_0 = (RuleCall)cSymbolTypeAssignment_2.eContents().get(0);
		
		//ct_symbolType:
		//
		//	"symbolType" "=" symbolType=ct_SymbolTypeType;
		public ParserRule getRule() { return rule; }

		//"symbolType" "=" symbolType=ct_SymbolTypeType
		public Group getGroup() { return cGroup; }

		//"symbolType"
		public Keyword getSymbolTypeKeyword_0() { return cSymbolTypeKeyword_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//symbolType=ct_SymbolTypeType
		public Assignment getSymbolTypeAssignment_2() { return cSymbolTypeAssignment_2; }

		//ct_SymbolTypeType
		public RuleCall getSymbolTypeCt_SymbolTypeTypeParserRuleCall_2_0() { return cSymbolTypeCt_SymbolTypeTypeParserRuleCall_2_0; }
	}

	public class Ct_blockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_block");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBlockKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cBlockAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBlockCt_BlockNameTypeParserRuleCall_2_0 = (RuleCall)cBlockAssignment_2.eContents().get(0);
		
		//ct_block:
		//
		//	"block" "=" block=ct_BlockNameType;
		public ParserRule getRule() { return rule; }

		//"block" "=" block=ct_BlockNameType
		public Group getGroup() { return cGroup; }

		//"block"
		public Keyword getBlockKeyword_0() { return cBlockKeyword_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//block=ct_BlockNameType
		public Assignment getBlockAssignment_2() { return cBlockAssignment_2; }

		//ct_BlockNameType
		public RuleCall getBlockCt_BlockNameTypeParserRuleCall_2_0() { return cBlockCt_BlockNameTypeParserRuleCall_2_0; }
	}

	public class Ct_writtenVersionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_writtenVersion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWrittenVersionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cWrittenVersionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cWrittenVersionXS_STRINGTerminalRuleCall_2_0 = (RuleCall)cWrittenVersionAssignment_2.eContents().get(0);
		
		//ct_writtenVersion:
		//
		//	"writtenVersion" "=" writtenVersion=XS_STRING;
		public ParserRule getRule() { return rule; }

		//"writtenVersion" "=" writtenVersion=XS_STRING
		public Group getGroup() { return cGroup; }

		//"writtenVersion"
		public Keyword getWrittenVersionKeyword_0() { return cWrittenVersionKeyword_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//writtenVersion=XS_STRING
		public Assignment getWrittenVersionAssignment_2() { return cWrittenVersionAssignment_2; }

		//XS_STRING
		public RuleCall getWrittenVersionXS_STRINGTerminalRuleCall_2_0() { return cWrittenVersionXS_STRINGTerminalRuleCall_2_0; }
	}

	public class Ct_Decimal_ValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_Decimal_Value");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cValueKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueXS_DECIMALParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//ct_Decimal_Value:
		//
		//	"value" "=" value=XS_DECIMAL;
		public ParserRule getRule() { return rule; }

		//"value" "=" value=XS_DECIMAL
		public Group getGroup() { return cGroup; }

		//"value"
		public Keyword getValueKeyword_0() { return cValueKeyword_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=XS_DECIMAL
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//XS_DECIMAL
		public RuleCall getValueXS_DECIMALParserRuleCall_2_0() { return cValueXS_DECIMALParserRuleCall_2_0; }
	}

	public class Ct_String_ValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_String_Value");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cValueKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueXS_STRINGTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//ct_String_Value:
		//
		//	"value" "=" value=XS_STRING;
		public ParserRule getRule() { return rule; }

		//"value" "=" value=XS_STRING
		public Group getGroup() { return cGroup; }

		//"value"
		public Keyword getValueKeyword_0() { return cValueKeyword_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=XS_STRING
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//XS_STRING
		public RuleCall getValueXS_STRINGTerminalRuleCall_2_0() { return cValueXS_STRINGTerminalRuleCall_2_0; }
	}

	public class Ct_catIdElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_catId");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCatIdKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCatIdAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCatIdCt_SymbolNameTypeParserRuleCall_2_0 = (RuleCall)cCatIdAssignment_2.eContents().get(0);
		
		//ct_catId:
		//
		//	"catId" "=" catId=ct_SymbolNameType;
		public ParserRule getRule() { return rule; }

		//"catId" "=" catId=ct_SymbolNameType
		public Group getGroup() { return cGroup; }

		//"catId"
		public Keyword getCatIdKeyword_0() { return cCatIdKeyword_0; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//catId=ct_SymbolNameType
		public Assignment getCatIdAssignment_2() { return cCatIdAssignment_2; }

		//ct_SymbolNameType
		public RuleCall getCatIdCt_SymbolNameTypeParserRuleCall_2_0() { return cCatIdCt_SymbolNameTypeParserRuleCall_2_0; }
	}

	public class Ct_BlockNameTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_BlockNameType");
		private final RuleCall cXS_TOKENParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ct_BlockNameType:
		//
		//	XS_TOKEN;
		public ParserRule getRule() { return rule; }

		//XS_TOKEN
		public RuleCall getXS_TOKENParserRuleCall() { return cXS_TOKENParserRuleCall; }
	}

	public class Ct_SymbolNameTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_SymbolNameType");
		private final RuleCall cXS_STRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ct_SymbolNameType:
		//
		//	XS_STRING;
		public ParserRule getRule() { return rule; }

		//XS_STRING
		public RuleCall getXS_STRINGTerminalRuleCall() { return cXS_STRINGTerminalRuleCall; }
	}

	public class Ct_SymbolTypeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ct_SymbolTypeType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cScalarAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cScalarScalarKeyword_0_0 = (Keyword)cScalarAssignment_0.eContents().get(0);
		private final Assignment cDerivativeAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cDerivativeDerivativeKeyword_1_0 = (Keyword)cDerivativeAssignment_1.eContents().get(0);
		private final Assignment cDistribAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cDistribDistribKeyword_2_0 = (Keyword)cDistribAssignment_2.eContents().get(0);
		private final Assignment cDataSetAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final Keyword cDataSetDataSetKeyword_3_0 = (Keyword)cDataSetAssignment_3.eContents().get(0);
		
		//ct_SymbolTypeType:
		//
		//	scalar="\"scalar\"" | derivative="\"derivative\"" | distrib="\"distrib\"" | dataSet="\"dataSet\"";
		public ParserRule getRule() { return rule; }

		//scalar="\"scalar\"" | derivative="\"derivative\"" | distrib="\"distrib\"" | dataSet="\"dataSet\""
		public Alternatives getAlternatives() { return cAlternatives; }

		//scalar="\"scalar\""
		public Assignment getScalarAssignment_0() { return cScalarAssignment_0; }

		//"\"scalar\""
		public Keyword getScalarScalarKeyword_0_0() { return cScalarScalarKeyword_0_0; }

		//derivative="\"derivative\""
		public Assignment getDerivativeAssignment_1() { return cDerivativeAssignment_1; }

		//"\"derivative\""
		public Keyword getDerivativeDerivativeKeyword_1_0() { return cDerivativeDerivativeKeyword_1_0; }

		//distrib="\"distrib\""
		public Assignment getDistribAssignment_2() { return cDistribAssignment_2; }

		//"\"distrib\""
		public Keyword getDistribDistribKeyword_2_0() { return cDistribDistribKeyword_2_0; }

		//dataSet="\"dataSet\""
		public Assignment getDataSetAssignment_3() { return cDataSetAssignment_3; }

		//"\"dataSet\""
		public Keyword getDataSetDataSetKeyword_3_0() { return cDataSetDataSetKeyword_3_0; }
	}

	public class XS_xmlnsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XS_xmlns");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cXmlnsKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cXsiKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1_1_0 = (RuleCall)cAlternatives_1_1.eContents().get(0);
		private final Keyword cXsiKeyword_1_1_1 = (Keyword)cAlternatives_1_1.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLocationAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLocationXS_STRINGTerminalRuleCall_3_0 = (RuleCall)cLocationAssignment_3.eContents().get(0);
		
		//// ***************************************************************************************************
		//
		//// ***Terminals*** /
		//
		//// ***************************************************************************************************
		//
		//XS_xmlns:
		//
		//	("xmlns" | "xsi") (":" (ID | "xsi"))? "=" location=XS_STRING;
		public ParserRule getRule() { return rule; }

		//("xmlns" | "xsi") (":" (ID | "xsi"))? "=" location=XS_STRING
		public Group getGroup() { return cGroup; }

		//"xmlns" | "xsi"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"xmlns"
		public Keyword getXmlnsKeyword_0_0() { return cXmlnsKeyword_0_0; }

		//"xsi"
		public Keyword getXsiKeyword_0_1() { return cXsiKeyword_0_1; }

		//(":" (ID | "xsi"))?
		public Group getGroup_1() { return cGroup_1; }

		//":"
		public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }

		//ID | "xsi"
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1_0() { return cIDTerminalRuleCall_1_1_0; }

		//"xsi"
		public Keyword getXsiKeyword_1_1_1() { return cXsiKeyword_1_1_1; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//location=XS_STRING
		public Assignment getLocationAssignment_3() { return cLocationAssignment_3; }

		//XS_STRING
		public RuleCall getLocationXS_STRINGTerminalRuleCall_3_0() { return cLocationXS_STRINGTerminalRuleCall_3_0; }
	}

	public class NamespaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Namespace");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Namespace:
		//
		//	ID ":";
		public ParserRule getRule() { return rule; }

		//ID ":"
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
	}

	public class TAG_OPENElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TAG_OPEN");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLessThanSignKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cNamespaceParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//TAG_OPEN:
		//
		//	"<" Namespace?;
		public ParserRule getRule() { return rule; }

		//"<" Namespace?
		public Group getGroup() { return cGroup; }

		//"<"
		public Keyword getLessThanSignKeyword_0() { return cLessThanSignKeyword_0; }

		//Namespace?
		public RuleCall getNamespaceParserRuleCall_1() { return cNamespaceParserRuleCall_1; }
	}

	public class TAG_CLOSEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TAG_CLOSE");
		private final Keyword cGreaterThanSignKeyword = (Keyword)rule.eContents().get(1);
		
		//TAG_CLOSE:
		//
		//	">";
		public ParserRule getRule() { return rule; }

		//">"
		public Keyword getGreaterThanSignKeyword() { return cGreaterThanSignKeyword; }
	}

	public class TAG_CLOSE2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TAG_CLOSE2");
		private final Keyword cSolidusGreaterThanSignKeyword = (Keyword)rule.eContents().get(1);
		
		//TAG_CLOSE2:
		//
		//	"/>";
		public ParserRule getRule() { return rule; }

		//"/>"
		public Keyword getSolidusGreaterThanSignKeyword() { return cSolidusGreaterThanSignKeyword; }
	}

	public class TAG_OPEN2Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TAG_OPEN2");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLessThanSignSolidusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cNamespaceParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//TAG_OPEN2:
		//
		//	"</" Namespace?;
		public ParserRule getRule() { return rule; }

		//"</" Namespace?
		public Group getGroup() { return cGroup; }

		//"</"
		public Keyword getLessThanSignSolidusKeyword_0() { return cLessThanSignSolidusKeyword_0; }

		//Namespace?
		public RuleCall getNamespaceParserRuleCall_1() { return cNamespaceParserRuleCall_1; }
	}

	public class XS_TOKENElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XS_TOKEN");
		private final RuleCall cXS_STRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//XS_TOKEN:
		//
		//	XS_STRING;
		public ParserRule getRule() { return rule; }

		//XS_STRING
		public RuleCall getXS_STRINGTerminalRuleCall() { return cXS_STRINGTerminalRuleCall; }
	}

	public class XS_ANY_URIElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XS_ANY_URI");
		private final RuleCall cXS_STRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//XS_ANY_URI:
		//
		//	XS_STRING;
		public ParserRule getRule() { return rule; }

		//XS_STRING
		public RuleCall getXS_STRINGTerminalRuleCall() { return cXS_STRINGTerminalRuleCall; }
	}

	public class XS_NAMEElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XS_NAME");
		private final RuleCall cXS_STRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//XS_NAME:
		//
		//	XS_STRING;
		public ParserRule getRule() { return rule; }

		//XS_STRING
		public RuleCall getXS_STRINGTerminalRuleCall() { return cXS_STRINGTerminalRuleCall; }
	}

	public class XS_DECIMALElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XS_DECIMAL");
		private final RuleCall cXS_STRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//XS_DECIMAL:
		//
		//	XS_STRING;
		public ParserRule getRule() { return rule; }

		//XS_STRING
		public RuleCall getXS_STRINGTerminalRuleCall() { return cXS_STRINGTerminalRuleCall; }
	}

	public class XS_INTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XS_INT");
		private final RuleCall cXS_STRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//XS_INT:
		//
		//	XS_STRING;
		public ParserRule getRule() { return rule; }

		//XS_STRING
		public RuleCall getXS_STRINGTerminalRuleCall() { return cXS_STRINGTerminalRuleCall; }
	}

	public class WordElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "word");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cDECIMALTerminalRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//word:
		//
		//	ID | INT | DECIMAL;
		public ParserRule getRule() { return rule; }

		//ID | INT | DECIMAL
		public Alternatives getAlternatives() { return cAlternatives; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }

		//DECIMAL
		public RuleCall getDECIMALTerminalRuleCall_2() { return cDECIMALTerminalRuleCall_2; }
	}
	
	
	private Mml_PharmMLElements pMml_PharmML;
	private Mml_PharmaMLContentElements pMml_PharmaMLContent;
	private Mml_SymbolDefinitionTypeElements pMml_SymbolDefinitionType;
	private Mml_FunctionDefinitionTypeElements pMml_FunctionDefinitionType;
	private Mml_FuncParameterDefinitionTypeElements pMml_FuncParameterDefinitionType;
	private Mdef_ModelDefinitionTypeElements pMdef_ModelDefinitionType;
	private Mdef_ParameterTypeNameElements pMdef_ParameterTypeName;
	private Mdef_StructuralModelTypeElements pMdef_StructuralModelType;
	private Mdef_ObservationModelTypeElements pMdef_ObservationModelType;
	private Mdef_ContinuousObsModelTypeElements pMdef_ContinuousObsModelType;
	private Mdef_ErrorModelElements pMdef_ErrorModel;
	private Mdef_RandomEffectTypeElements pMdef_RandomEffectType;
	private Mdef_ParameterModelTypeElements pMdef_ParameterModelType;
	private Mdef_CorrelationTypeElements pMdef_CorrelationType;
	private Mdef_Param1VarTypeElements pMdef_Param1VarType;
	private Mdef_Param2VarTypeElements pMdef_Param2VarType;
	private MdefCovarianceTypeElements pMdefCovarianceType;
	private Mdef_CorrelationCoefficientTypeElements pMdef_CorrelationCoefficientType;
	private Mdef_CovariateModelTypeElements pMdef_CovariateModelType;
	private Mdef_ParameterTypeElements pMdef_ParameterType;
	private Mdef_CovariateVariabilityTypeElements pMdef_CovariateVariabilityType;
	private Mdef_transformationElements pMdef_transformation;
	private Mdef_CategoricalTypeElements pMdef_CategoricalType;
	private Mdef_ContinuousCovariateTypeElements pMdef_ContinuousCovariateType;
	private Mdef_TransformationTypeElements pMdef_TransformationType;
	private Mdef_VariabilityLevelDefnTypeElements pMdef_VariabilityLevelDefnType;
	private Mdef_ImportTypeElements pMdef_ImportType;
	private Mdef_ImportLinkTypeElements pMdef_ImportLinkType;
	private Mdef_ImportResourceTypeTypeElements pMdef_ImportResourceTypeType;
	private Mdef_CovariateTypeElements pMdef_CovariateType;
	private Mdef_FixedEffectTypeElements pMdef_FixedEffectType;
	private Mdef_CategoryTypeElements pMdef_CategoryType;
	private Mdef_ProbabilityTypeElements pMdef_ProbabilityType;
	private Mdef_ParameterRandomEffectTypeElements pMdef_ParameterRandomEffectType;
	private Mdef_InitialConditionTypeElements pMdef_InitialConditionType;
	private Msteps_ModelingStepsElements pMsteps_ModelingSteps;
	private Msteps_ModelingStepsContentElements pMsteps_ModelingStepsContent;
	private Msteps_StepDependenciesTypeElements pMsteps_StepDependenciesType;
	private Msteps_StepTypeElements pMsteps_StepType;
	private Msteps_DependantStepTypeElements pMsteps_DependantStepType;
	private Msteps_EstimationStepElements pMsteps_EstimationStep;
	private Msteps_ParametersToEstimateTypeElements pMsteps_ParametersToEstimateType;
	private MSteps_VariableEstimateTypeElements pMSteps_VariableEstimateType;
	private MSteps_fixedElements pMSteps_fixed;
	private MSteps_UpperBoundTypeElements pMSteps_UpperBoundType;
	private MSteps_LowerBoundTypeElements pMSteps_LowerBoundType;
	private MSteps_InitialEstimateTypeElements pMSteps_InitialEstimateType;
	private Msteps_ObjectiveDataSetTypeElements pMsteps_ObjectiveDataSetType;
	private Msteps_ColumnMappingTypeElements pMsteps_ColumnMappingType;
	private Msteps_ColumnMappingTypeContentElements pMsteps_ColumnMappingTypeContent;
	private Msteps_OutputTypeElements pMsteps_OutputType;
	private Msteps_AssignTypeElements pMsteps_AssignType;
	private Msteps_TargetVarTypeElements pMsteps_TargetVarType;
	private Msteps_UseVariabilityLevelElements pMsteps_UseVariabilityLevel;
	private Msteps_UseVariabilityNodeElements pMsteps_UseVariabilityNode;
	private Msteps_SimulationStepElements pMsteps_SimulationStep;
	private Msteps_SimDataSetTypeElements pMsteps_SimDataSetType;
	private Msteps_ObservationsTypeElements pMsteps_ObservationsType;
	private Msteps_WriteToTypeElements pMsteps_WriteToType;
	private Msteps_TimepointsTypeElements pMsteps_TimepointsType;
	private Msteps_InitialValueTypeElements pMsteps_InitialValueType;
	private Msteps_EstimationOperationTypeElements pMsteps_EstimationOperationType;
	private Design_TrialDesignTypeElements pDesign_TrialDesignType;
	private Design_GroupTypeElements pDesign_GroupType;
	private Design_GroupTypeContentElements pDesign_GroupTypeContent;
	private Design_IdividualsTypeElements pDesign_IdividualsType;
	private Design_WashoutTypeElements pDesign_WashoutType;
	private Design_TreatmentEpohTypeElements pDesign_TreatmentEpohType;
	private Design_OccasionTypeElements pDesign_OccasionType;
	private Design_BeginTypeElements pDesign_BeginType;
	private Design_EndTypeElements pDesign_EndType;
	private Design_StartTypeElements pDesign_StartType;
	private Design_TreatmentRefTypeElements pDesign_TreatmentRefType;
	private Design_TreatmentEpochRefTypeElements pDesign_TreatmentEpochRefType;
	private Design_TreatmentTypeElements pDesign_TreatmentType;
	private Design_DosingRegimenTypeElements pDesign_DosingRegimenType;
	private Design_InfusionTypeElements pDesign_InfusionType;
	private Design_DurationTypeElements pDesign_DurationType;
	private Design_BolusTypeElements pDesign_BolusType;
	private Design_DosingTimesTypeElements pDesign_DosingTimesType;
	private Design_DosingTimesTypeContentElements pDesign_DosingTimesTypeContent;
	private Design_SteadyStateTypeElements pDesign_SteadyStateType;
	private Design_DosingStartTypeElements pDesign_DosingStartType;
	private Design_DosingPeriodTypeElements pDesign_DosingPeriodType;
	private Design_DoseAmountTypeElements pDesign_DoseAmountType;
	private Design_DosingVariableTypeElements pDesign_DosingVariableType;
	private Design_DosingVariableTypeContentElements pDesign_DosingVariableTypeContent;
	private Design_AmountTypeElements pDesign_AmountType;
	private Design_TargetVarTypeElements pDesign_TargetVarType;
	private Design_DoseVarTypeElements pDesign_DoseVarType;
	private Uncert_DistributionTypeElements pUncert_DistributionType;
	private Uncert_DistributionTypeContentElements pUncert_DistributionTypeContent;
	private Uncert_NormalElements pUncert_Normal;
	private Uncert_CoefficientOfVarianceElements pUncert_CoefficientOfVariance;
	private Uncert_StdDevElements pUncert_StdDev;
	private Uncert_DistributionParamTypeElements pUncert_DistributionParamType;
	private Uncert_MeanParamTypeElements pUncert_MeanParamType;
	private Uncert_MeanElements pUncert_Mean;
	private Uncert_VarianceElements pUncert_Variance;
	private Uncert_PDFElements pUncert_PDF;
	private Uncert_ParameterDefinitionTypeElements pUncert_ParameterDefinitionType;
	private Uncert_PoisonElements pUncert_Poison;
	private Uncert_RateElements pUncert_Rate;
	private Uncert_Student_tElements pUncert_Student_t;
	private UncertDegreesOfFreedomElements pUncertDegreesOfFreedom;
	private Uncert_ScaleElements pUncert_Scale;
	private Uncert_LocationElements pUncert_Location;
	private Uncert_UniformElements pUncert_Uniform;
	private Math_EquationTypeElements pMath_EquationType;
	private Math_EquationTypeContentElements pMath_EquationTypeContent;
	private Math_ScalarTypeElements pMath_ScalarType;
	private Math_VarTypeElements pMath_VarType;
	private Math_BinopTypeElements pMath_BinopType;
	private Math_UniopTypeElements pMath_UniopType;
	private Math_ExprTypeElements pMath_ExprType;
	private Math_ConstantTypeElements pMath_ConstantType;
	private Math_FunctionCallTypeElements pMath_FunctionCallType;
	private Math_FunctionArgumentTypeElements pMath_FunctionArgumentType;
	private Math_FuncExprTypeElements pMath_FuncExprType;
	private Math_PiecewiseTypeElements pMath_PiecewiseType;
	private Math_PieceTypeElements pMath_PieceType;
	private Math_ConditionTypeElements pMath_ConditionType;
	private Math_LogicBaseTypeElements pMath_LogicBaseType;
	private Math_OtherwiseElements pMath_Otherwise;
	private Math_LogicExprTypeElements pMath_LogicExprType;
	private Math_StringTypeElements pMath_StringType;
	private Math_TRUEElements pMath_TRUE;
	private Math_FALSEElements pMath_FALSE;
	private Math_LogicBinopTypeElements pMath_LogicBinopType;
	private Math_LogicUniopTypeElements pMath_LogicUniopType;
	private Math_BinopNameElements pMath_BinopName;
	private Math_UniopNameElements pMath_UniopName;
	private Math_LogicUniopNameElements pMath_LogicUniopName;
	private Math_LogicBinopNameElements pMath_LogicBinopName;
	private Math_ConstantNameElements pMath_ConstantName;
	private Math_symbIdElements pMath_symbId;
	private Math_idElements pMath_id;
	private Math_blockElements pMath_block;
	private Math_SymbolNameTypeElements pMath_SymbolNameType;
	private Math_EstimationOperationTypeElements pMath_EstimationOperationType;
	private Math_BlockNameTypeElements pMath_BlockNameType;
	private Ct_ReplicatesTypeElements pCt_ReplicatesType;
	private Ct_AnnotationTypeElements pCt_AnnotationType;
	private Ct_RhsElements pCt_Rhs;
	private Ct_DataSetTypeElements pCt_DataSetType;
	private Ct_DefinitionTypeElements pCt_DefinitionType;
	private Ct_DefinitionRhsTypeElements pCt_DefinitionRhsType;
	private Ct_ColumnTypeElements pCt_ColumnType;
	private Ct_ExternalSourceTypeElements pCt_ExternalSourceType;
	private Ct_RowTypeElements pCt_RowType;
	private Ct_RowTypeContentElements pCt_RowTypeContent;
	private Ct_NullCellTypeElements pCt_NullCellType;
	private Ct_CellTypeElements pCt_CellType;
	private Ct_InternalSourceTypeElements pCt_InternalSourceType;
	private Ct_VectorTypeElements pCt_VectorType;
	private Ct_SequenceTypeElements pCt_SequenceType;
	private Ct_VariableDefinitionTypeElements pCt_VariableDefinitionType;
	private Ct_RestrictionTypeElements pCt_RestrictionType;
	private Ct_ScalarRhsElements pCt_ScalarRhs;
	private Ct_independentVarElements pCt_independentVar;
	private Ct_levelIdElements pCt_levelId;
	private Ct_nameElements pCt_name;
	private Ct_symbIdElements pCt_symbId;
	private Ct_idElements pCt_id;
	private Ct_symbolTypeElements pCt_symbolType;
	private Ct_blockElements pCt_block;
	private Ct_writtenVersionElements pCt_writtenVersion;
	private Ct_Decimal_ValueElements pCt_Decimal_Value;
	private Ct_String_ValueElements pCt_String_Value;
	private Ct_catIdElements pCt_catId;
	private Ct_BlockNameTypeElements pCt_BlockNameType;
	private Ct_SymbolNameTypeElements pCt_SymbolNameType;
	private Ct_SymbolTypeTypeElements pCt_SymbolTypeType;
	private XS_xmlnsElements pXS_xmlns;
	private NamespaceElements pNamespace;
	private TAG_OPENElements pTAG_OPEN;
	private TAG_CLOSEElements pTAG_CLOSE;
	private TAG_CLOSE2Elements pTAG_CLOSE2;
	private TAG_OPEN2Elements pTAG_OPEN2;
	private XS_TOKENElements pXS_TOKEN;
	private XS_ANY_URIElements pXS_ANY_URI;
	private XS_NAMEElements pXS_NAME;
	private XS_DECIMALElements pXS_DECIMAL;
	private XS_INTElements pXS_INT;
	private WordElements pWord;
	private TerminalRule tXS_STRING;
	private TerminalRule tDECIMAL;
	private TerminalRule tESCAPE_SEQUENCE;
	private TerminalRule tOCTAL_ESCAPE;
	private TerminalRule tUNICODE_ESCAPE;
	private TerminalRule tHEXDIGIT;
	private TerminalRule tML_COMMENT;
	private TerminalRule tXML_ANNOTATION;
	
	private final Grammar grammar;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public PharmMLGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("eu.ddmore.pml.PharmML".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//
	//// ***PharmaML*** //
	//
	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//
	//Mml_PharmML hidden(WS, ML_COMMENT, XML_ANNOTATION):
	//
	//	TAG_OPEN "PharmML" xmlns+=XS_xmlns* name=ct_name independentVar=ct_independentVar writtenVersion=ct_writtenVersion
	//
	//	TAG_CLOSE SymbolDefinition+=Mml_SymbolDefinitionType* Expr+=Mml_PharmaMLContent+ Design=design_TrialDesignType?
	//
	//	ModelingSteps=msteps_ModelingSteps? TAG_OPEN2 "PharmML" TAG_CLOSE;
	public Mml_PharmMLElements getMml_PharmMLAccess() {
		return (pMml_PharmML != null) ? pMml_PharmML : (pMml_PharmML = new Mml_PharmMLElements());
	}
	
	public ParserRule getMml_PharmMLRule() {
		return getMml_PharmMLAccess().getRule();
	}

	//Mml_PharmaMLContent:
	//
	//	{Mml_PharmaMLContent} StructuralModel=mdef_StructuralModelType | ModelDefinition=mdef_ModelDefinitionType;
	public Mml_PharmaMLContentElements getMml_PharmaMLContentAccess() {
		return (pMml_PharmaMLContent != null) ? pMml_PharmaMLContent : (pMml_PharmaMLContent = new Mml_PharmaMLContentElements());
	}
	
	public ParserRule getMml_PharmaMLContentRule() {
		return getMml_PharmaMLContentAccess().getRule();
	}

	//Mml_SymbolDefinitionType:
	//
	//	{Mml_SymbolDefinitionType} TAG_OPEN "SymbolDefinition" xmlns+=XS_xmlns* name=ct_name? symbId=ct_symbId
	//
	//	symbolType=ct_symbolType (TAG_CLOSE2 | TAG_CLOSE Description=ct_AnnotationType?
	//
	//	FunctionDefinition=Mml_FunctionDefinitionType TAG_OPEN2 "SymbolDefinition" TAG_CLOSE);
	public Mml_SymbolDefinitionTypeElements getMml_SymbolDefinitionTypeAccess() {
		return (pMml_SymbolDefinitionType != null) ? pMml_SymbolDefinitionType : (pMml_SymbolDefinitionType = new Mml_SymbolDefinitionTypeElements());
	}
	
	public ParserRule getMml_SymbolDefinitionTypeRule() {
		return getMml_SymbolDefinitionTypeAccess().getRule();
	}

	//Mml_FunctionDefinitionType:
	//
	//	{Mml_FunctionDefinitionType} TAG_OPEN "FunctionDefinition" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
	//
	//	FunctionArguments+=Mml_FuncParameterDefinitionType* Definition=ct_DefinitionRhsType TAG_OPEN2 "FunctionDefinition"
	//
	//	TAG_CLOSE);
	public Mml_FunctionDefinitionTypeElements getMml_FunctionDefinitionTypeAccess() {
		return (pMml_FunctionDefinitionType != null) ? pMml_FunctionDefinitionType : (pMml_FunctionDefinitionType = new Mml_FunctionDefinitionTypeElements());
	}
	
	public ParserRule getMml_FunctionDefinitionTypeRule() {
		return getMml_FunctionDefinitionTypeAccess().getRule();
	}

	//Mml_FuncParameterDefinitionType:
	//
	//	{Mml_FuncParameterDefinitionTyp} TAG_OPEN "FunctionArgument" xmlns+=XS_xmlns* sumbId=ct_symbId
	//
	//	symbolType=ct_symbolType? (TAG_CLOSE2 | TAG_CLOSE Decsription=ct_AnnotationType? TAG_OPEN2 "FunctionArgument"
	//
	//	TAG_CLOSE);
	public Mml_FuncParameterDefinitionTypeElements getMml_FuncParameterDefinitionTypeAccess() {
		return (pMml_FuncParameterDefinitionType != null) ? pMml_FuncParameterDefinitionType : (pMml_FuncParameterDefinitionType = new Mml_FuncParameterDefinitionTypeElements());
	}
	
	public ParserRule getMml_FuncParameterDefinitionTypeRule() {
		return getMml_FuncParameterDefinitionTypeAccess().getRule();
	}

	//// ***************************************************************************************************
	//
	//// ***ModelDefinition***
	//
	//// ***************************************************************************************************
	//
	//mdef_ModelDefinitionType:
	//
	//	{mdef_ModelDefinitionType} TAG_OPEN "ModelDefinition" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
	//
	//	VariabilityLevel+=mdef_VariabilityLevelDefnType* CovariateModel=mdef_CovariateModelType?
	//
	//	ParameterModel=mdef_ParameterModelType? StructuraModel+=mdef_StructuralModelType*
	//
	//	ObservationModel=mdef_ObservationModelType? TAG_OPEN2 "ModelDefinition" TAG_CLOSE);
	public Mdef_ModelDefinitionTypeElements getMdef_ModelDefinitionTypeAccess() {
		return (pMdef_ModelDefinitionType != null) ? pMdef_ModelDefinitionType : (pMdef_ModelDefinitionType = new Mdef_ModelDefinitionTypeElements());
	}
	
	public ParserRule getMdef_ModelDefinitionTypeRule() {
		return getMdef_ModelDefinitionTypeAccess().getRule();
	}

	//mdef_ParameterTypeName:
	//
	//	log="\"log\"" | logit="\"logit\"" | none="\"none\"";
	public Mdef_ParameterTypeNameElements getMdef_ParameterTypeNameAccess() {
		return (pMdef_ParameterTypeName != null) ? pMdef_ParameterTypeName : (pMdef_ParameterTypeName = new Mdef_ParameterTypeNameElements());
	}
	
	public ParserRule getMdef_ParameterTypeNameRule() {
		return getMdef_ParameterTypeNameAccess().getRule();
	}

	//mdef_StructuralModelType:
	//
	//	TAG_OPEN "StructuralModel" xmlns+=XS_xmlns* id=ct_id (TAG_CLOSE2 | TAG_CLOSE Description=ct_AnnotationType?
	//
	//	Parameter+=mdef_ParameterType* Variable+=ct_VariableDefinitionType* Import+=mdef_ImportType*
	//
	//	InitiaCondition+=mdef_InitialConditionType* TAG_OPEN2 "StructuralModel" TAG_CLOSE);
	public Mdef_StructuralModelTypeElements getMdef_StructuralModelTypeAccess() {
		return (pMdef_StructuralModelType != null) ? pMdef_StructuralModelType : (pMdef_StructuralModelType = new Mdef_StructuralModelTypeElements());
	}
	
	public ParserRule getMdef_StructuralModelTypeRule() {
		return getMdef_StructuralModelTypeAccess().getRule();
	}

	//mdef_ObservationModelType:
	//
	//	TAG_OPEN "ObservationModel" xmlns+=XS_xmlns* id=ct_id name=ct_name? (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Parameter+=mdef_ParameterType* Continuous+=mdef_ContinuousObsModelType* TAG_OPEN2 "ObservationModel" TAG_CLOSE);
	public Mdef_ObservationModelTypeElements getMdef_ObservationModelTypeAccess() {
		return (pMdef_ObservationModelType != null) ? pMdef_ObservationModelType : (pMdef_ObservationModelType = new Mdef_ObservationModelTypeElements());
	}
	
	public ParserRule getMdef_ObservationModelTypeRule() {
		return getMdef_ObservationModelTypeAccess().getRule();
	}

	//mdef_ContinuousObsModelType:
	//
	//	TAG_OPEN "Continuous" xmlns+=XS_xmlns* symbId=ct_symbId (TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType?
	//
	//	ErrorModel=mdef_ErrorModel RandomEffect+=mdef_RandomEffectType* TAG_OPEN2 "Continuous" TAG_CLOSE);
	public Mdef_ContinuousObsModelTypeElements getMdef_ContinuousObsModelTypeAccess() {
		return (pMdef_ContinuousObsModelType != null) ? pMdef_ContinuousObsModelType : (pMdef_ContinuousObsModelType = new Mdef_ContinuousObsModelTypeElements());
	}
	
	public ParserRule getMdef_ContinuousObsModelTypeRule() {
		return getMdef_ContinuousObsModelTypeAccess().getRule();
	}

	//mdef_ErrorModel:
	//
	//	{mdef_ErrorModel} TAG_OPEN "ErrorModel" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType
	//
	//	FunctionArgument+=Math_FunctionArgumentType* TAG_OPEN2 "ErrorModel" TAG_CLOSE);
	public Mdef_ErrorModelElements getMdef_ErrorModelAccess() {
		return (pMdef_ErrorModel != null) ? pMdef_ErrorModel : (pMdef_ErrorModel = new Mdef_ErrorModelElements());
	}
	
	public ParserRule getMdef_ErrorModelRule() {
		return getMdef_ErrorModelAccess().getRule();
	}

	//mdef_RandomEffectType:
	//
	//	{mdef_RandomEffectType} TAG_OPEN "RandomEffect" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Distribution=uncert_DistributionType TAG_OPEN2 "RandomEffect" TAG_CLOSE);
	public Mdef_RandomEffectTypeElements getMdef_RandomEffectTypeAccess() {
		return (pMdef_RandomEffectType != null) ? pMdef_RandomEffectType : (pMdef_RandomEffectType = new Mdef_RandomEffectTypeElements());
	}
	
	public ParserRule getMdef_RandomEffectTypeRule() {
		return getMdef_RandomEffectTypeAccess().getRule();
	}

	//mdef_ParameterModelType:
	//
	//	TAG_OPEN "ParameterModel" xmlns+=XS_xmlns* id=ct_id name=ct_name? (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Parameter+=mdef_ParameterType+ Correlation+=mdef_CorrelationType* TAG_OPEN2 "ParameterModel" TAG_CLOSE);
	public Mdef_ParameterModelTypeElements getMdef_ParameterModelTypeAccess() {
		return (pMdef_ParameterModelType != null) ? pMdef_ParameterModelType : (pMdef_ParameterModelType = new Mdef_ParameterModelTypeElements());
	}
	
	public ParserRule getMdef_ParameterModelTypeRule() {
		return getMdef_ParameterModelTypeAccess().getRule();
	}

	//mdef_CorrelationType:
	//
	//	TAG_OPEN "Correlation" xmlns+=XS_xmlns* levelId=ct_levelId (TAG_CLOSE2 | TAG_CLOSE ParamVar1=mdef_Param1VarType
	//
	//	ParamVar2=mdef_Param2VarType CorrelationCoefficient=mdef_CorrelationCoefficientType? Covariance=mdefCovarianceType?
	//
	//	TAG_OPEN2 "Correlation" TAG_CLOSE);
	public Mdef_CorrelationTypeElements getMdef_CorrelationTypeAccess() {
		return (pMdef_CorrelationType != null) ? pMdef_CorrelationType : (pMdef_CorrelationType = new Mdef_CorrelationTypeElements());
	}
	
	public ParserRule getMdef_CorrelationTypeRule() {
		return getMdef_CorrelationTypeAccess().getRule();
	}

	//mdef_Param1VarType:
	//
	//	TAG_OPEN "Param1Var" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
	//
	//	"Param1Var" TAG_CLOSE);
	public Mdef_Param1VarTypeElements getMdef_Param1VarTypeAccess() {
		return (pMdef_Param1VarType != null) ? pMdef_Param1VarType : (pMdef_Param1VarType = new Mdef_Param1VarTypeElements());
	}
	
	public ParserRule getMdef_Param1VarTypeRule() {
		return getMdef_Param1VarTypeAccess().getRule();
	}

	//mdef_Param2VarType:
	//
	//	TAG_OPEN "Param2Var" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
	//
	//	"Param2Var" TAG_CLOSE);
	public Mdef_Param2VarTypeElements getMdef_Param2VarTypeAccess() {
		return (pMdef_Param2VarType != null) ? pMdef_Param2VarType : (pMdef_Param2VarType = new Mdef_Param2VarTypeElements());
	}
	
	public ParserRule getMdef_Param2VarTypeRule() {
		return getMdef_Param2VarTypeAccess().getRule();
	}

	//mdefCovarianceType:
	//
	//	{mdefCovarianceType} TAG_OPEN "Covariance" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2
	//
	//	"Covariance" TAG_CLOSE);
	public MdefCovarianceTypeElements getMdefCovarianceTypeAccess() {
		return (pMdefCovarianceType != null) ? pMdefCovarianceType : (pMdefCovarianceType = new MdefCovarianceTypeElements());
	}
	
	public ParserRule getMdefCovarianceTypeRule() {
		return getMdefCovarianceTypeAccess().getRule();
	}

	//mdef_CorrelationCoefficientType:
	//
	//	{mdef_CorrelationCoefficientType} TAG_OPEN "CorrelationCoefficient" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Expr=ct_ScalarRhs TAG_OPEN2 "CorrelationCoefficient" TAG_CLOSE);
	public Mdef_CorrelationCoefficientTypeElements getMdef_CorrelationCoefficientTypeAccess() {
		return (pMdef_CorrelationCoefficientType != null) ? pMdef_CorrelationCoefficientType : (pMdef_CorrelationCoefficientType = new Mdef_CorrelationCoefficientTypeElements());
	}
	
	public ParserRule getMdef_CorrelationCoefficientTypeRule() {
		return getMdef_CorrelationCoefficientTypeAccess().getRule();
	}

	//mdef_CovariateModelType:
	//
	//	TAG_OPEN "CovariateModel" xmlns+=XS_xmlns* id=ct_id name=ct_name? (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Parameter+=mdef_ParameterType* Covariate+=mdef_CovariateVariabilityType+ TAG_OPEN2 "CovariateModel" TAG_CLOSE);
	public Mdef_CovariateModelTypeElements getMdef_CovariateModelTypeAccess() {
		return (pMdef_CovariateModelType != null) ? pMdef_CovariateModelType : (pMdef_CovariateModelType = new Mdef_CovariateModelTypeElements());
	}
	
	public ParserRule getMdef_CovariateModelTypeRule() {
		return getMdef_CovariateModelTypeAccess().getRule();
	}

	//mdef_ParameterType:
	//
	//	TAG_OPEN "Parameter" xmlns+=XS_xmlns* name=ct_name? symbId=Math_symbId transformation=mdef_transformation?
	//
	//	(TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType? Scalar=Math_ScalarType? Equation=Math_EquationType?
	//
	//	RandomEffect+=mdef_ParameterRandomEffectType* Covariate+=mdef_CovariateType* TAG_OPEN2 "Parameter" TAG_CLOSE);
	public Mdef_ParameterTypeElements getMdef_ParameterTypeAccess() {
		return (pMdef_ParameterType != null) ? pMdef_ParameterType : (pMdef_ParameterType = new Mdef_ParameterTypeElements());
	}
	
	public ParserRule getMdef_ParameterTypeRule() {
		return getMdef_ParameterTypeAccess().getRule();
	}

	//mdef_CovariateVariabilityType:
	//
	//	TAG_OPEN "Covariate" xmlns+=XS_xmlns* name=ct_name? symbId=ct_symbId transformation=mdef_transformation? (TAG_CLOSE2
	//
	//	| TAG_CLOSE Continuous=mdef_ContinuousCovariateType? Categorical=mdef_CategoricalType? TAG_OPEN2 "Covariate"
	//
	//	TAG_CLOSE);
	public Mdef_CovariateVariabilityTypeElements getMdef_CovariateVariabilityTypeAccess() {
		return (pMdef_CovariateVariabilityType != null) ? pMdef_CovariateVariabilityType : (pMdef_CovariateVariabilityType = new Mdef_CovariateVariabilityTypeElements());
	}
	
	public ParserRule getMdef_CovariateVariabilityTypeRule() {
		return getMdef_CovariateVariabilityTypeAccess().getRule();
	}

	//mdef_transformation:
	//
	//	"transformation" "=" transformation=mdef_ParameterTypeName;
	public Mdef_transformationElements getMdef_transformationAccess() {
		return (pMdef_transformation != null) ? pMdef_transformation : (pMdef_transformation = new Mdef_transformationElements());
	}
	
	public ParserRule getMdef_transformationRule() {
		return getMdef_transformationAccess().getRule();
	}

	//mdef_CategoricalType:
	//
	//	{mdef_CategoricalType} TAG_OPEN "Categorical" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Category+=mdef_CategoryType*
	//
	//	TAG_OPEN2 "Categorical" TAG_CLOSE);
	public Mdef_CategoricalTypeElements getMdef_CategoricalTypeAccess() {
		return (pMdef_CategoricalType != null) ? pMdef_CategoricalType : (pMdef_CategoricalType = new Mdef_CategoricalTypeElements());
	}
	
	public ParserRule getMdef_CategoricalTypeRule() {
		return getMdef_CategoricalTypeAccess().getRule();
	}

	//mdef_ContinuousCovariateType:
	//
	//	{mdef_ContinuousCovariateType} TAG_OPEN "Continuous" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Distribution=uncert_DistributionType Transformation=mdef_TransformationType TAG_OPEN2 "Continuous" TAG_CLOSE);
	public Mdef_ContinuousCovariateTypeElements getMdef_ContinuousCovariateTypeAccess() {
		return (pMdef_ContinuousCovariateType != null) ? pMdef_ContinuousCovariateType : (pMdef_ContinuousCovariateType = new Mdef_ContinuousCovariateTypeElements());
	}
	
	public ParserRule getMdef_ContinuousCovariateTypeRule() {
		return getMdef_ContinuousCovariateTypeAccess().getRule();
	}

	//mdef_TransformationType:
	//
	//	{mdef_TransformationType} TAG_OPEN "Transformation" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2
	//
	//	"Transformation" TAG_CLOSE);
	public Mdef_TransformationTypeElements getMdef_TransformationTypeAccess() {
		return (pMdef_TransformationType != null) ? pMdef_TransformationType : (pMdef_TransformationType = new Mdef_TransformationTypeElements());
	}
	
	public ParserRule getMdef_TransformationTypeRule() {
		return getMdef_TransformationTypeAccess().getRule();
	}

	//mdef_VariabilityLevelDefnType:
	//
	//	TAG_OPEN "VariabilityLevel" xmlns+=XS_xmlns* id=ct_id name=ct_name? (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
	//
	//	"VariabilityLevel" TAG_CLOSE);
	public Mdef_VariabilityLevelDefnTypeElements getMdef_VariabilityLevelDefnTypeAccess() {
		return (pMdef_VariabilityLevelDefnType != null) ? pMdef_VariabilityLevelDefnType : (pMdef_VariabilityLevelDefnType = new Mdef_VariabilityLevelDefnTypeElements());
	}
	
	public ParserRule getMdef_VariabilityLevelDefnTypeRule() {
		return getMdef_VariabilityLevelDefnTypeAccess().getRule();
	}

	//mdef_ImportType:
	//
	//	TAG_OPEN "Import" xmlns+=XS_xmlns* "resource" "=" resource=XS_ANY_URI ("resourceType" "="
	//
	//	resourceType=mdef_ImportResourceTypeType)? ("source" "=" source=XS_TOKEN)? (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Link+=mdef_ImportLinkType+ TAG_OPEN2 "Import" TAG_CLOSE);
	public Mdef_ImportTypeElements getMdef_ImportTypeAccess() {
		return (pMdef_ImportType != null) ? pMdef_ImportType : (pMdef_ImportType = new Mdef_ImportTypeElements());
	}
	
	public ParserRule getMdef_ImportTypeRule() {
		return getMdef_ImportTypeAccess().getRule();
	}

	//mdef_ImportLinkType:
	//
	//	TAG_OPEN "Link" xmlns+=XS_xmlns* "symbolPtr" "=" symbolPtr=XS_STRING (TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType
	//
	//	TAG_OPEN2 "Link" TAG_CLOSE);
	public Mdef_ImportLinkTypeElements getMdef_ImportLinkTypeAccess() {
		return (pMdef_ImportLinkType != null) ? pMdef_ImportLinkType : (pMdef_ImportLinkType = new Mdef_ImportLinkTypeElements());
	}
	
	public ParserRule getMdef_ImportLinkTypeRule() {
		return getMdef_ImportLinkTypeAccess().getRule();
	}

	//mdef_ImportResourceTypeType:
	//
	//	sbml="\"sbml\"" | pharmml="\"pharmml\"";
	public Mdef_ImportResourceTypeTypeElements getMdef_ImportResourceTypeTypeAccess() {
		return (pMdef_ImportResourceTypeType != null) ? pMdef_ImportResourceTypeType : (pMdef_ImportResourceTypeType = new Mdef_ImportResourceTypeTypeElements());
	}
	
	public ParserRule getMdef_ImportResourceTypeTypeRule() {
		return getMdef_ImportResourceTypeTypeAccess().getRule();
	}

	//mdef_CovariateType:
	//
	//	{mdef_CovariateType} TAG_OPEN "Covariate" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType
	//
	//	FixedEffect+=mdef_FixedEffectType+ TAG_OPEN2 "Covariate" TAG_CLOSE);
	public Mdef_CovariateTypeElements getMdef_CovariateTypeAccess() {
		return (pMdef_CovariateType != null) ? pMdef_CovariateType : (pMdef_CovariateType = new Mdef_CovariateTypeElements());
	}
	
	public ParserRule getMdef_CovariateTypeRule() {
		return getMdef_CovariateTypeAccess().getRule();
	}

	//mdef_FixedEffectType:
	//
	//	{mdef_FixedEffectType} TAG_OPEN "FixedEffect" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType
	//
	//	Category=mdef_CategoryType? TAG_OPEN2 "FixedEffect" TAG_CLOSE);
	public Mdef_FixedEffectTypeElements getMdef_FixedEffectTypeAccess() {
		return (pMdef_FixedEffectType != null) ? pMdef_FixedEffectType : (pMdef_FixedEffectType = new Mdef_FixedEffectTypeElements());
	}
	
	public ParserRule getMdef_FixedEffectTypeRule() {
		return getMdef_FixedEffectTypeAccess().getRule();
	}

	//mdef_CategoryType:
	//
	//	TAG_OPEN "Category" xmlns+=XS_xmlns* catId=ct_catId name=ct_name? (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Probability=mdef_ProbabilityType? TAG_OPEN2 "Category" TAG_CLOSE);
	public Mdef_CategoryTypeElements getMdef_CategoryTypeAccess() {
		return (pMdef_CategoryType != null) ? pMdef_CategoryType : (pMdef_CategoryType = new Mdef_CategoryTypeElements());
	}
	
	public ParserRule getMdef_CategoryTypeRule() {
		return getMdef_CategoryTypeAccess().getRule();
	}

	//mdef_ProbabilityType:
	//
	//	{mdef_ProbabilityType} TAG_OPEN "Probability" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2
	//
	//	"Probability" TAG_CLOSE);
	public Mdef_ProbabilityTypeElements getMdef_ProbabilityTypeAccess() {
		return (pMdef_ProbabilityType != null) ? pMdef_ProbabilityType : (pMdef_ProbabilityType = new Mdef_ProbabilityTypeElements());
	}
	
	public ParserRule getMdef_ProbabilityTypeRule() {
		return getMdef_ProbabilityTypeAccess().getRule();
	}

	//mdef_ParameterRandomEffectType:
	//
	//	TAG_OPEN "RandomEffect" xmlns+=XS_xmlns* levelId=ct_levelId name=ct_name? symbId=ct_symbId (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Distribution=uncert_DistributionType TAG_OPEN2 "RandomEffect" TAG_CLOSE);
	public Mdef_ParameterRandomEffectTypeElements getMdef_ParameterRandomEffectTypeAccess() {
		return (pMdef_ParameterRandomEffectType != null) ? pMdef_ParameterRandomEffectType : (pMdef_ParameterRandomEffectType = new Mdef_ParameterRandomEffectTypeElements());
	}
	
	public ParserRule getMdef_ParameterRandomEffectTypeRule() {
		return getMdef_ParameterRandomEffectTypeAccess().getRule();
	}

	//mdef_InitialConditionType:
	//
	//	TAG_OPEN "InitialCondition" xmlns+=XS_xmlns* block=Math_block? symbID=Math_symbId (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs
	//
	//	TAG_OPEN2 "InitialCondition" TAG_CLOSE);
	public Mdef_InitialConditionTypeElements getMdef_InitialConditionTypeAccess() {
		return (pMdef_InitialConditionType != null) ? pMdef_InitialConditionType : (pMdef_InitialConditionType = new Mdef_InitialConditionTypeElements());
	}
	
	public ParserRule getMdef_InitialConditionTypeRule() {
		return getMdef_InitialConditionTypeAccess().getRule();
	}

	//// ***************************************************************************************************
	//
	//// ***Modelling steps***
	//
	//// ***************************************************************************************************
	//
	//msteps_ModelingSteps:
	//
	//	{msteps_ModelingSteps} TAG_OPEN "ModellingSteps" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Variable+=ct_VariableDefinitionType* Expr+=msteps_ModelingStepsContent* StepDependencies=msteps_StepDependenciesType
	//
	//	TAG_OPEN2 "ModellingSteps" TAG_CLOSE);
	public Msteps_ModelingStepsElements getMsteps_ModelingStepsAccess() {
		return (pMsteps_ModelingSteps != null) ? pMsteps_ModelingSteps : (pMsteps_ModelingSteps = new Msteps_ModelingStepsElements());
	}
	
	public ParserRule getMsteps_ModelingStepsRule() {
		return getMsteps_ModelingStepsAccess().getRule();
	}

	//msteps_ModelingStepsContent:
	//
	//	EstimationStep=msteps_EstimationStep | SimulationStep=msteps_SimulationStep;
	public Msteps_ModelingStepsContentElements getMsteps_ModelingStepsContentAccess() {
		return (pMsteps_ModelingStepsContent != null) ? pMsteps_ModelingStepsContent : (pMsteps_ModelingStepsContent = new Msteps_ModelingStepsContentElements());
	}
	
	public ParserRule getMsteps_ModelingStepsContentRule() {
		return getMsteps_ModelingStepsContentAccess().getRule();
	}

	//msteps_StepDependenciesType:
	//
	//	{msteps_StepDependenciesType} TAG_OPEN "StepDependencies" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Description=ct_AnnotationType? Step+=msteps_StepType+ TAG_OPEN2 "StepDependencies" TAG_CLOSE);
	public Msteps_StepDependenciesTypeElements getMsteps_StepDependenciesTypeAccess() {
		return (pMsteps_StepDependenciesType != null) ? pMsteps_StepDependenciesType : (pMsteps_StepDependenciesType = new Msteps_StepDependenciesTypeElements());
	}
	
	public ParserRule getMsteps_StepDependenciesTypeRule() {
		return getMsteps_StepDependenciesTypeAccess().getRule();
	}

	//msteps_StepType:
	//
	//	TAG_OPEN "Step" xmlns+=XS_xmlns* "idRef" "=" idRef=XS_STRING (TAG_CLOSE2 | TAG_CLOSE
	//
	//	DependantStep+=msteps_DependantStepType* TAG_OPEN2 "Step" TAG_CLOSE);
	public Msteps_StepTypeElements getMsteps_StepTypeAccess() {
		return (pMsteps_StepType != null) ? pMsteps_StepType : (pMsteps_StepType = new Msteps_StepTypeElements());
	}
	
	public ParserRule getMsteps_StepTypeRule() {
		return getMsteps_StepTypeAccess().getRule();
	}

	//msteps_DependantStepType:
	//
	//	TAG_OPEN "DependantStep" xmlns+=XS_xmlns* "idRef" "=" idRef=ct_BlockNameType (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
	//
	//	"DependantStep" TAG_CLOSE);
	public Msteps_DependantStepTypeElements getMsteps_DependantStepTypeAccess() {
		return (pMsteps_DependantStepType != null) ? pMsteps_DependantStepType : (pMsteps_DependantStepType = new Msteps_DependantStepTypeElements());
	}
	
	public ParserRule getMsteps_DependantStepTypeRule() {
		return getMsteps_DependantStepTypeAccess().getRule();
	}

	//msteps_EstimationStep:
	//
	//	TAG_OPEN "EstimationStep" xmlns+=XS_xmlns* id=ct_id (TAG_CLOSE2 | TAG_CLOSE Description=ct_AnnotationType?
	//
	//	InitialValue+=msteps_InitialValueType* ObjectiveDataSet=msteps_ObjectiveDataSetType
	//
	//	ParametersToEstimate=msteps_ParametersToEstimateType EstimationOperation+=msteps_EstimationOperationType+ TAG_OPEN2
	//
	//	"EstimationStep" TAG_CLOSE);
	public Msteps_EstimationStepElements getMsteps_EstimationStepAccess() {
		return (pMsteps_EstimationStep != null) ? pMsteps_EstimationStep : (pMsteps_EstimationStep = new Msteps_EstimationStepElements());
	}
	
	public ParserRule getMsteps_EstimationStepRule() {
		return getMsteps_EstimationStepAccess().getRule();
	}

	//msteps_ParametersToEstimateType:
	//
	//	{msteps_ParametersToEstimateType} TAG_OPEN "ParametersToEstimate" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Variable+=mSteps_VariableEstimateType* TAG_OPEN2 "ParametersToEstimate" TAG_CLOSE);
	public Msteps_ParametersToEstimateTypeElements getMsteps_ParametersToEstimateTypeAccess() {
		return (pMsteps_ParametersToEstimateType != null) ? pMsteps_ParametersToEstimateType : (pMsteps_ParametersToEstimateType = new Msteps_ParametersToEstimateTypeElements());
	}
	
	public ParserRule getMsteps_ParametersToEstimateTypeRule() {
		return getMsteps_ParametersToEstimateTypeAccess().getRule();
	}

	//mSteps_VariableEstimateType:
	//
	//	TAG_OPEN "Variable" xmlns+=XS_xmlns* (block=Math_block? & fixed=mSteps_fixed & symbID=Math_symbId) (TAG_CLOSE2 |
	//
	//	TAG_CLOSE InitialEstimate=mSteps_InitialEstimateType? LowerBound=mSteps_LowerBoundType?
	//
	//	UpperBound=mSteps_UpperBoundType? TAG_OPEN2 "Variable" TAG_CLOSE);
	public MSteps_VariableEstimateTypeElements getMSteps_VariableEstimateTypeAccess() {
		return (pMSteps_VariableEstimateType != null) ? pMSteps_VariableEstimateType : (pMSteps_VariableEstimateType = new MSteps_VariableEstimateTypeElements());
	}
	
	public ParserRule getMSteps_VariableEstimateTypeRule() {
		return getMSteps_VariableEstimateTypeAccess().getRule();
	}

	//mSteps_fixed:
	//
	//	"fixed" "=" fixed=(Math_TRUE | Math_FALSE);
	public MSteps_fixedElements getMSteps_fixedAccess() {
		return (pMSteps_fixed != null) ? pMSteps_fixed : (pMSteps_fixed = new MSteps_fixedElements());
	}
	
	public ParserRule getMSteps_fixedRule() {
		return getMSteps_fixedAccess().getRule();
	}

	//mSteps_UpperBoundType:
	//
	//	{mSteps_UpperBoundType} TAG_OPEN "UpperBound" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2
	//
	//	"UpperBound" TAG_CLOSE);
	public MSteps_UpperBoundTypeElements getMSteps_UpperBoundTypeAccess() {
		return (pMSteps_UpperBoundType != null) ? pMSteps_UpperBoundType : (pMSteps_UpperBoundType = new MSteps_UpperBoundTypeElements());
	}
	
	public ParserRule getMSteps_UpperBoundTypeRule() {
		return getMSteps_UpperBoundTypeAccess().getRule();
	}

	//mSteps_LowerBoundType:
	//
	//	{mSteps_LowerBoundType} TAG_OPEN "LowerBound" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2
	//
	//	"LowerBound" TAG_CLOSE);
	public MSteps_LowerBoundTypeElements getMSteps_LowerBoundTypeAccess() {
		return (pMSteps_LowerBoundType != null) ? pMSteps_LowerBoundType : (pMSteps_LowerBoundType = new MSteps_LowerBoundTypeElements());
	}
	
	public ParserRule getMSteps_LowerBoundTypeRule() {
		return getMSteps_LowerBoundTypeAccess().getRule();
	}

	//mSteps_InitialEstimateType:
	//
	//	{mSteps_InitialEstimateType} TAG_OPEN "InitialEstimate" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs
	//
	//	TAG_OPEN2 "InitialEstimate" TAG_CLOSE);
	public MSteps_InitialEstimateTypeElements getMSteps_InitialEstimateTypeAccess() {
		return (pMSteps_InitialEstimateType != null) ? pMSteps_InitialEstimateType : (pMSteps_InitialEstimateType = new MSteps_InitialEstimateTypeElements());
	}
	
	public ParserRule getMSteps_InitialEstimateTypeRule() {
		return getMSteps_InitialEstimateTypeAccess().getRule();
	}

	//msteps_ObjectiveDataSetType:
	//
	//	TAG_OPEN "ObjectiveDataSet" xmlns+=XS_xmlns* "dataSetRef" "=" dataSetRef=ct_SymbolNameType (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Mapping+=msteps_ColumnMappingType+ TAG_OPEN2 "ObjectiveDataSet" TAG_CLOSE);
	public Msteps_ObjectiveDataSetTypeElements getMsteps_ObjectiveDataSetTypeAccess() {
		return (pMsteps_ObjectiveDataSetType != null) ? pMsteps_ObjectiveDataSetType : (pMsteps_ObjectiveDataSetType = new Msteps_ObjectiveDataSetTypeElements());
	}
	
	public ParserRule getMsteps_ObjectiveDataSetTypeRule() {
		return getMsteps_ObjectiveDataSetTypeAccess().getRule();
	}

	//msteps_ColumnMappingType:
	//
	//	TAG_OPEN "Mapping" xmlns+=XS_xmlns* "columnName" "=" columnname=ct_SymbolNameType (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Expr+=msteps_ColumnMappingTypeContent* Restriction=ct_RestrictionType? TAG_OPEN2 "Mapping" TAG_CLOSE);
	public Msteps_ColumnMappingTypeElements getMsteps_ColumnMappingTypeAccess() {
		return (pMsteps_ColumnMappingType != null) ? pMsteps_ColumnMappingType : (pMsteps_ColumnMappingType = new Msteps_ColumnMappingTypeElements());
	}
	
	public ParserRule getMsteps_ColumnMappingTypeRule() {
		return getMsteps_ColumnMappingTypeAccess().getRule();
	}

	//msteps_ColumnMappingTypeContent:
	//
	//	Var=Math_VarType | UseVariabilityLevel=msteps_UseVariabilityLevel | UseVariabilityNode=msteps_UseVariabilityNode |
	//
	//	DoseVar=design_DoseVarType | TargetVar=msteps_TargetVarType | Assign=msteps_AssignType | Output=msteps_OutputType;
	public Msteps_ColumnMappingTypeContentElements getMsteps_ColumnMappingTypeContentAccess() {
		return (pMsteps_ColumnMappingTypeContent != null) ? pMsteps_ColumnMappingTypeContent : (pMsteps_ColumnMappingTypeContent = new Msteps_ColumnMappingTypeContentElements());
	}
	
	public ParserRule getMsteps_ColumnMappingTypeContentRule() {
		return getMsteps_ColumnMappingTypeContentAccess().getRule();
	}

	//msteps_OutputType:
	//
	//	{msteps_OutputType} TAG_OPEN "Output" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Vars=Math_VarType TAG_OPEN2 "Output"
	//
	//	TAG_CLOSE);
	public Msteps_OutputTypeElements getMsteps_OutputTypeAccess() {
		return (pMsteps_OutputType != null) ? pMsteps_OutputType : (pMsteps_OutputType = new Msteps_OutputTypeElements());
	}
	
	public ParserRule getMsteps_OutputTypeRule() {
		return getMsteps_OutputTypeAccess().getRule();
	}

	//msteps_AssignType:
	//
	//	TAG_OPEN "Assign" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2
	//
	//	"Assign" TAG_CLOSE);
	public Msteps_AssignTypeElements getMsteps_AssignTypeAccess() {
		return (pMsteps_AssignType != null) ? pMsteps_AssignType : (pMsteps_AssignType = new Msteps_AssignTypeElements());
	}
	
	public ParserRule getMsteps_AssignTypeRule() {
		return getMsteps_AssignTypeAccess().getRule();
	}

	//msteps_TargetVarType:
	//
	//	TAG_OPEN "TargetVar" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
	//
	//	"TargetVar" TAG_CLOSE);
	public Msteps_TargetVarTypeElements getMsteps_TargetVarTypeAccess() {
		return (pMsteps_TargetVarType != null) ? pMsteps_TargetVarType : (pMsteps_TargetVarType = new Msteps_TargetVarTypeElements());
	}
	
	public ParserRule getMsteps_TargetVarTypeRule() {
		return getMsteps_TargetVarTypeAccess().getRule();
	}

	//msteps_UseVariabilityLevel:
	//
	//	TAG_OPEN "UseVariabilityLevel" xmlns+=XS_xmlns* "levelId" "=" levelId=ct_BlockNameType (TAG_CLOSE2 | TAG_CLOSE
	//
	//	TAG_OPEN2 "UseVariabilityLevel" TAG_CLOSE);
	public Msteps_UseVariabilityLevelElements getMsteps_UseVariabilityLevelAccess() {
		return (pMsteps_UseVariabilityLevel != null) ? pMsteps_UseVariabilityLevel : (pMsteps_UseVariabilityLevel = new Msteps_UseVariabilityLevelElements());
	}
	
	public ParserRule getMsteps_UseVariabilityLevelRule() {
		return getMsteps_UseVariabilityLevelAccess().getRule();
	}

	//msteps_UseVariabilityNode:
	//
	//	TAG_OPEN "UseVariabilityNode" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
	//
	//	"UseVariabilityNode" TAG_CLOSE);
	public Msteps_UseVariabilityNodeElements getMsteps_UseVariabilityNodeAccess() {
		return (pMsteps_UseVariabilityNode != null) ? pMsteps_UseVariabilityNode : (pMsteps_UseVariabilityNode = new Msteps_UseVariabilityNodeElements());
	}
	
	public ParserRule getMsteps_UseVariabilityNodeRule() {
		return getMsteps_UseVariabilityNodeAccess().getRule();
	}

	//msteps_SimulationStep:
	//
	//	TAG_OPEN "SimulationStep" xmlns+=XS_xmlns* id=ct_id (TAG_CLOSE2 | TAG_CLOSE Description=ct_AnnotationType?
	//
	//	Replicates=ct_ReplicatesType? InitialValue+=msteps_InitialValueType* SimDataSet=msteps_SimDataSetType?
	//
	//	Observations+=msteps_ObservationsType* TAG_OPEN2 "SimulationStep" TAG_CLOSE);
	public Msteps_SimulationStepElements getMsteps_SimulationStepAccess() {
		return (pMsteps_SimulationStep != null) ? pMsteps_SimulationStep : (pMsteps_SimulationStep = new Msteps_SimulationStepElements());
	}
	
	public ParserRule getMsteps_SimulationStepRule() {
		return getMsteps_SimulationStepAccess().getRule();
	}

	//msteps_SimDataSetType:
	//
	//	TAG_OPEN "SimDataSet" xmlns+=XS_xmlns* "dataSetRef" "=" dataSetRef=ct_SymbolNameType (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Mapping+=msteps_ColumnMappingType+ TAG_OPEN2 "SimDataSet" TAG_CLOSE);
	public Msteps_SimDataSetTypeElements getMsteps_SimDataSetTypeAccess() {
		return (pMsteps_SimDataSetType != null) ? pMsteps_SimDataSetType : (pMsteps_SimDataSetType = new Msteps_SimDataSetTypeElements());
	}
	
	public ParserRule getMsteps_SimDataSetTypeRule() {
		return getMsteps_SimDataSetTypeAccess().getRule();
	}

	//msteps_ObservationsType:
	//
	//	{msteps_ObservationsType} TAG_OPEN "Observations" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Timepoints=msteps_TimepointsType Output+=msteps_OutputType* WriteTo+=msteps_WriteToType* TAG_OPEN2 "Observations"
	//
	//	TAG_CLOSE);
	public Msteps_ObservationsTypeElements getMsteps_ObservationsTypeAccess() {
		return (pMsteps_ObservationsType != null) ? pMsteps_ObservationsType : (pMsteps_ObservationsType = new Msteps_ObservationsTypeElements());
	}
	
	public ParserRule getMsteps_ObservationsTypeRule() {
		return getMsteps_ObservationsTypeAccess().getRule();
	}

	//msteps_WriteToType:
	//
	//	{msteps_WriteToType} TAG_OPEN "WriteTo" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Var=Math_VarType
	//
	//	Mapping+=msteps_ColumnMappingType+ TAG_OPEN2 "WriteTo" TAG_CLOSE);
	public Msteps_WriteToTypeElements getMsteps_WriteToTypeAccess() {
		return (pMsteps_WriteToType != null) ? pMsteps_WriteToType : (pMsteps_WriteToType = new Msteps_WriteToTypeElements());
	}
	
	public ParserRule getMsteps_WriteToTypeRule() {
		return getMsteps_WriteToTypeAccess().getRule();
	}

	//msteps_TimepointsType:
	//
	//	{msteps_TimepointsType} TAG_OPEN "Timepoints" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2
	//
	//	"Timepoints" TAG_CLOSE);
	public Msteps_TimepointsTypeElements getMsteps_TimepointsTypeAccess() {
		return (pMsteps_TimepointsType != null) ? pMsteps_TimepointsType : (pMsteps_TimepointsType = new Msteps_TimepointsTypeElements());
	}
	
	public ParserRule getMsteps_TimepointsTypeRule() {
		return getMsteps_TimepointsTypeAccess().getRule();
	}

	//msteps_InitialValueType:
	//
	//	TAG_OPEN "InitialValue" xmlns+=XS_xmlns* block=ct_block? symbId=ct_symbId (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs?
	//
	//	TAG_OPEN2 "InitialValue" TAG_CLOSE);
	public Msteps_InitialValueTypeElements getMsteps_InitialValueTypeAccess() {
		return (pMsteps_InitialValueType != null) ? pMsteps_InitialValueType : (pMsteps_InitialValueType = new Msteps_InitialValueTypeElements());
	}
	
	public ParserRule getMsteps_InitialValueTypeRule() {
		return getMsteps_InitialValueTypeAccess().getRule();
	}

	//msteps_EstimationOperationType:
	//
	//	TAG_OPEN "EstimationOperation" "opType" "=" opType=Math_EstimationOperationType xmlns+=XS_xmlns* (TAG_CLOSE2 |
	//
	//	TAG_CLOSE TAG_OPEN2 "EstimationOperation" TAG_CLOSE);
	public Msteps_EstimationOperationTypeElements getMsteps_EstimationOperationTypeAccess() {
		return (pMsteps_EstimationOperationType != null) ? pMsteps_EstimationOperationType : (pMsteps_EstimationOperationType = new Msteps_EstimationOperationTypeElements());
	}
	
	public ParserRule getMsteps_EstimationOperationTypeRule() {
		return getMsteps_EstimationOperationTypeAccess().getRule();
	}

	//// ***************************************************************************************************
	//
	//// ***Design***
	//
	//// ***************************************************************************************************
	//
	//design_TrialDesignType:
	//
	//	{design_TrialDesignType} TAG_OPEN "Design" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Treatment+=design_TreatmentType+
	//
	//	TreatmentEpoch+=design_TreatmentEpohType+ Group+=design_GroupType+ TAG_OPEN2 "Design" TAG_CLOSE);
	public Design_TrialDesignTypeElements getDesign_TrialDesignTypeAccess() {
		return (pDesign_TrialDesignType != null) ? pDesign_TrialDesignType : (pDesign_TrialDesignType = new Design_TrialDesignTypeElements());
	}
	
	public ParserRule getDesign_TrialDesignTypeRule() {
		return getDesign_TrialDesignTypeAccess().getRule();
	}

	//design_GroupType:
	//
	//	TAG_OPEN "Group" xmlns+=XS_xmlns* id=ct_id name=ct_name? (TAG_CLOSE2 | TAG_CLOSE Expr+=design_GroupTypeContent*
	//
	//	Individuals=design_IdividualsType TAG_OPEN2 "Group" TAG_CLOSE);
	public Design_GroupTypeElements getDesign_GroupTypeAccess() {
		return (pDesign_GroupType != null) ? pDesign_GroupType : (pDesign_GroupType = new Design_GroupTypeElements());
	}
	
	public ParserRule getDesign_GroupTypeRule() {
		return getDesign_GroupTypeAccess().getRule();
	}

	//design_GroupTypeContent:
	//
	//	TreatmentEpochRef=design_TreatmentEpochRefType | Washout=design_WashoutType;
	public Design_GroupTypeContentElements getDesign_GroupTypeContentAccess() {
		return (pDesign_GroupTypeContent != null) ? pDesign_GroupTypeContent : (pDesign_GroupTypeContent = new Design_GroupTypeContentElements());
	}
	
	public ParserRule getDesign_GroupTypeContentRule() {
		return getDesign_GroupTypeContentAccess().getRule();
	}

	//design_IdividualsType:
	//
	//	TAG_OPEN "Individuals" xmlns+=XS_xmlns* levelId=ct_levelId name=ct_name? symbId=ct_symbId (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Expr=ct_Rhs TAG_OPEN2 "Individuals" TAG_CLOSE);
	public Design_IdividualsTypeElements getDesign_IdividualsTypeAccess() {
		return (pDesign_IdividualsType != null) ? pDesign_IdividualsType : (pDesign_IdividualsType = new Design_IdividualsTypeElements());
	}
	
	public ParserRule getDesign_IdividualsTypeRule() {
		return getDesign_IdividualsTypeAccess().getRule();
	}

	//design_WashoutType:
	//
	//	{design_WashoutType} TAG_OPEN "Washout" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Washout" TAG_CLOSE);
	public Design_WashoutTypeElements getDesign_WashoutTypeAccess() {
		return (pDesign_WashoutType != null) ? pDesign_WashoutType : (pDesign_WashoutType = new Design_WashoutTypeElements());
	}
	
	public ParserRule getDesign_WashoutTypeRule() {
		return getDesign_WashoutTypeAccess().getRule();
	}

	//design_TreatmentEpohType:
	//
	//	TAG_OPEN "TreatmentEpoch" xmlns+=XS_xmlns* id=ct_id name=ct_name? (TAG_CLOSE2 | TAG_CLOSE
	//
	//	TreatmentRef+=design_TreatmentRefType+ Start=design_StartType? End=design_EndType? Occasion+=design_OccasionType*
	//
	//	TAG_OPEN2 "TreatmentEpoch" TAG_CLOSE);
	public Design_TreatmentEpohTypeElements getDesign_TreatmentEpohTypeAccess() {
		return (pDesign_TreatmentEpohType != null) ? pDesign_TreatmentEpohType : (pDesign_TreatmentEpohType = new Design_TreatmentEpohTypeElements());
	}
	
	public ParserRule getDesign_TreatmentEpohTypeRule() {
		return getDesign_TreatmentEpohTypeAccess().getRule();
	}

	//design_OccasionType:
	//
	//	TAG_OPEN "Occasion" xmlns+=XS_xmlns* levelId=ct_levelId name=ct_name? symbId=ct_symbId (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Begin=design_BeginType End=design_EndType TAG_OPEN2 "Occasion" TAG_CLOSE);
	public Design_OccasionTypeElements getDesign_OccasionTypeAccess() {
		return (pDesign_OccasionType != null) ? pDesign_OccasionType : (pDesign_OccasionType = new Design_OccasionTypeElements());
	}
	
	public ParserRule getDesign_OccasionTypeRule() {
		return getDesign_OccasionTypeAccess().getRule();
	}

	//design_BeginType:
	//
	//	{design_BeginType} TAG_OPEN "Begin" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "Begin"
	//
	//	TAG_CLOSE);
	public Design_BeginTypeElements getDesign_BeginTypeAccess() {
		return (pDesign_BeginType != null) ? pDesign_BeginType : (pDesign_BeginType = new Design_BeginTypeElements());
	}
	
	public ParserRule getDesign_BeginTypeRule() {
		return getDesign_BeginTypeAccess().getRule();
	}

	//design_EndType:
	//
	//	{design_EndType} TAG_OPEN "End" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "End"
	//
	//	TAG_CLOSE);
	public Design_EndTypeElements getDesign_EndTypeAccess() {
		return (pDesign_EndType != null) ? pDesign_EndType : (pDesign_EndType = new Design_EndTypeElements());
	}
	
	public ParserRule getDesign_EndTypeRule() {
		return getDesign_EndTypeAccess().getRule();
	}

	//design_StartType:
	//
	//	{design_StartType} TAG_OPEN "Start" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_ScalarRhs TAG_OPEN2 "Start"
	//
	//	TAG_CLOSE);
	public Design_StartTypeElements getDesign_StartTypeAccess() {
		return (pDesign_StartType != null) ? pDesign_StartType : (pDesign_StartType = new Design_StartTypeElements());
	}
	
	public ParserRule getDesign_StartTypeRule() {
		return getDesign_StartTypeAccess().getRule();
	}

	//design_TreatmentRefType:
	//
	//	TAG_OPEN "TreatmentRef" xmlns+=XS_xmlns* "idRef" "=" idRef=Math_BlockNameType (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
	//
	//	"TreatmentRef" TAG_CLOSE);
	public Design_TreatmentRefTypeElements getDesign_TreatmentRefTypeAccess() {
		return (pDesign_TreatmentRefType != null) ? pDesign_TreatmentRefType : (pDesign_TreatmentRefType = new Design_TreatmentRefTypeElements());
	}
	
	public ParserRule getDesign_TreatmentRefTypeRule() {
		return getDesign_TreatmentRefTypeAccess().getRule();
	}

	//design_TreatmentEpochRefType:
	//
	//	TAG_OPEN "TreatmentEpochRef" xmlns+=XS_xmlns* "idRef" "=" idRef=Math_BlockNameType (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
	//
	//	"TreatmentEpochRef" TAG_CLOSE);
	public Design_TreatmentEpochRefTypeElements getDesign_TreatmentEpochRefTypeAccess() {
		return (pDesign_TreatmentEpochRefType != null) ? pDesign_TreatmentEpochRefType : (pDesign_TreatmentEpochRefType = new Design_TreatmentEpochRefTypeElements());
	}
	
	public ParserRule getDesign_TreatmentEpochRefTypeRule() {
		return getDesign_TreatmentEpochRefTypeAccess().getRule();
	}

	//design_TreatmentType:
	//
	//	TAG_OPEN "Treatment" id=Math_id name=ct_name? xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
	//
	//	DosingRegimen+=design_DosingRegimenType+ TAG_OPEN2 "Treatment" TAG_CLOSE);
	public Design_TreatmentTypeElements getDesign_TreatmentTypeAccess() {
		return (pDesign_TreatmentType != null) ? pDesign_TreatmentType : (pDesign_TreatmentType = new Design_TreatmentTypeElements());
	}
	
	public ParserRule getDesign_TreatmentTypeRule() {
		return getDesign_TreatmentTypeAccess().getRule();
	}

	//design_DosingRegimenType:
	//
	//	{design_DosingRegimenType} TAG_OPEN "DosingRegimen" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Bolus=design_BolusType?
	//
	//	Infusion=design_InfusionType? TAG_OPEN2 "DosingRegimen" TAG_CLOSE);
	public Design_DosingRegimenTypeElements getDesign_DosingRegimenTypeAccess() {
		return (pDesign_DosingRegimenType != null) ? pDesign_DosingRegimenType : (pDesign_DosingRegimenType = new Design_DosingRegimenTypeElements());
	}
	
	public ParserRule getDesign_DosingRegimenTypeRule() {
		return getDesign_DosingRegimenTypeAccess().getRule();
	}

	//design_InfusionType:
	//
	//	{design_InfusionType} TAG_OPEN "Infusion" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE DoseAmount=design_DoseAmountType
	//
	//	SteadyState=design_SteadyStateType? DosingTimes=design_DosingTimesType? Duration=design_DurationType TAG_OPEN2
	//
	//	"Infusion" TAG_CLOSE);
	public Design_InfusionTypeElements getDesign_InfusionTypeAccess() {
		return (pDesign_InfusionType != null) ? pDesign_InfusionType : (pDesign_InfusionType = new Design_InfusionTypeElements());
	}
	
	public ParserRule getDesign_InfusionTypeRule() {
		return getDesign_InfusionTypeAccess().getRule();
	}

	//design_DurationType:
	//
	//	{design_DurationType} TAG_OPEN "Duration" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=design_DosingVariableType
	//
	//	TAG_OPEN2 "Duration" TAG_CLOSE);
	public Design_DurationTypeElements getDesign_DurationTypeAccess() {
		return (pDesign_DurationType != null) ? pDesign_DurationType : (pDesign_DurationType = new Design_DurationTypeElements());
	}
	
	public ParserRule getDesign_DurationTypeRule() {
		return getDesign_DurationTypeAccess().getRule();
	}

	//design_BolusType:
	//
	//	{design_BolusType} TAG_OPEN "Bolus" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE DoseAmount=design_DoseAmountType
	//
	//	SteadyState=design_SteadyStateType? DosingTimes=design_DosingTimesType? TAG_OPEN2 "Bolus" TAG_CLOSE);
	public Design_BolusTypeElements getDesign_BolusTypeAccess() {
		return (pDesign_BolusType != null) ? pDesign_BolusType : (pDesign_BolusType = new Design_BolusTypeElements());
	}
	
	public ParserRule getDesign_BolusTypeRule() {
		return getDesign_BolusTypeAccess().getRule();
	}

	//design_DosingTimesType:
	//
	//	{design_DosingTimesType} TAG_OPEN "DosingTimes" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Expr+=design_DosingTimesTypeContent+ TAG_OPEN2 "DosingTimes" TAG_CLOSE);
	public Design_DosingTimesTypeElements getDesign_DosingTimesTypeAccess() {
		return (pDesign_DosingTimesType != null) ? pDesign_DosingTimesType : (pDesign_DosingTimesType = new Design_DosingTimesTypeElements());
	}
	
	public ParserRule getDesign_DosingTimesTypeRule() {
		return getDesign_DosingTimesTypeAccess().getRule();
	}

	//design_DosingTimesTypeContent:
	//
	//	Sequence=ct_SequenceType | Scalar=Math_ScalarType;
	public Design_DosingTimesTypeContentElements getDesign_DosingTimesTypeContentAccess() {
		return (pDesign_DosingTimesTypeContent != null) ? pDesign_DosingTimesTypeContent : (pDesign_DosingTimesTypeContent = new Design_DosingTimesTypeContentElements());
	}
	
	public ParserRule getDesign_DosingTimesTypeContentRule() {
		return getDesign_DosingTimesTypeContentAccess().getRule();
	}

	//design_SteadyStateType:
	//
	//	{design_SteadyStateType} TAG_OPEN "SteadyState" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
	//
	//	DosingStart=design_DosingStartType DosingPeriod=design_DosingPeriodType TAG_OPEN2 "SteadyState" TAG_CLOSE);
	public Design_SteadyStateTypeElements getDesign_SteadyStateTypeAccess() {
		return (pDesign_SteadyStateType != null) ? pDesign_SteadyStateType : (pDesign_SteadyStateType = new Design_SteadyStateTypeElements());
	}
	
	public ParserRule getDesign_SteadyStateTypeRule() {
		return getDesign_SteadyStateTypeAccess().getRule();
	}

	//design_DosingStartType:
	//
	//	{design_DosingStartType} TAG_OPEN "DosingStart" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Expr=design_DosingVariableType TAG_OPEN2 "DosingStart" TAG_CLOSE);
	public Design_DosingStartTypeElements getDesign_DosingStartTypeAccess() {
		return (pDesign_DosingStartType != null) ? pDesign_DosingStartType : (pDesign_DosingStartType = new Design_DosingStartTypeElements());
	}
	
	public ParserRule getDesign_DosingStartTypeRule() {
		return getDesign_DosingStartTypeAccess().getRule();
	}

	//design_DosingPeriodType:
	//
	//	{design_DosingPeriodType} TAG_OPEN "DosingPeriod" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Expr=design_DosingVariableType? TAG_OPEN2 "DosingPeriod" TAG_CLOSE);
	public Design_DosingPeriodTypeElements getDesign_DosingPeriodTypeAccess() {
		return (pDesign_DosingPeriodType != null) ? pDesign_DosingPeriodType : (pDesign_DosingPeriodType = new Design_DosingPeriodTypeElements());
	}
	
	public ParserRule getDesign_DosingPeriodTypeRule() {
		return getDesign_DosingPeriodTypeAccess().getRule();
	}

	//design_DoseAmountType:
	//
	//	{design_DoseAmountType} TAG_OPEN "DoseAmount" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Expr=design_DosingVariableType? TAG_OPEN2 "DoseAmount" TAG_CLOSE);
	public Design_DoseAmountTypeElements getDesign_DoseAmountTypeAccess() {
		return (pDesign_DoseAmountType != null) ? pDesign_DoseAmountType : (pDesign_DoseAmountType = new Design_DoseAmountTypeElements());
	}
	
	public ParserRule getDesign_DoseAmountTypeRule() {
		return getDesign_DoseAmountTypeAccess().getRule();
	}

	//design_DosingVariableType:
	//
	//	Expr=design_DosingVariableTypeContent Amount=design_AmountType?;
	public Design_DosingVariableTypeElements getDesign_DosingVariableTypeAccess() {
		return (pDesign_DosingVariableType != null) ? pDesign_DosingVariableType : (pDesign_DosingVariableType = new Design_DosingVariableTypeElements());
	}
	
	public ParserRule getDesign_DosingVariableTypeRule() {
		return getDesign_DosingVariableTypeAccess().getRule();
	}

	//design_DosingVariableTypeContent:
	//
	//	DoseVar=design_DoseVarType | TargetVar=design_TargetVarType;
	public Design_DosingVariableTypeContentElements getDesign_DosingVariableTypeContentAccess() {
		return (pDesign_DosingVariableTypeContent != null) ? pDesign_DosingVariableTypeContent : (pDesign_DosingVariableTypeContent = new Design_DosingVariableTypeContentElements());
	}
	
	public ParserRule getDesign_DosingVariableTypeContentRule() {
		return getDesign_DosingVariableTypeContentAccess().getRule();
	}

	//design_AmountType:
	//
	//	{design_AmountType} TAG_OPEN "Amount" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs TAG_OPEN2 "Amount"
	//
	//	TAG_CLOSE);
	public Design_AmountTypeElements getDesign_AmountTypeAccess() {
		return (pDesign_AmountType != null) ? pDesign_AmountType : (pDesign_AmountType = new Design_AmountTypeElements());
	}
	
	public ParserRule getDesign_AmountTypeRule() {
		return getDesign_AmountTypeAccess().getRule();
	}

	//design_TargetVarType:
	//
	//	TAG_OPEN "TargetVar" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
	//
	//	"TargetVar" TAG_CLOSE);
	public Design_TargetVarTypeElements getDesign_TargetVarTypeAccess() {
		return (pDesign_TargetVarType != null) ? pDesign_TargetVarType : (pDesign_TargetVarType = new Design_TargetVarTypeElements());
	}
	
	public ParserRule getDesign_TargetVarTypeRule() {
		return getDesign_TargetVarTypeAccess().getRule();
	}

	//design_DoseVarType:
	//
	//	TAG_OPEN "DoseVar" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "DoseVar"
	//
	//	TAG_CLOSE);
	public Design_DoseVarTypeElements getDesign_DoseVarTypeAccess() {
		return (pDesign_DoseVarType != null) ? pDesign_DoseVarType : (pDesign_DoseVarType = new Design_DoseVarTypeElements());
	}
	
	public ParserRule getDesign_DoseVarTypeRule() {
		return getDesign_DoseVarTypeAccess().getRule();
	}

	////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//
	//// ***Uncertainty***
	//
	///////////////////////////////////////////////////////////////////////////////////////////////////////////
	//
	//uncert_DistributionType:
	//
	//	TAG_OPEN "Distribution" xmlns+=XS_xmlns* writtenVersion=ct_writtenVersion (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Expr=uncert_DistributionTypeContent TAG_OPEN2 "Distribution" TAG_CLOSE);
	public Uncert_DistributionTypeElements getUncert_DistributionTypeAccess() {
		return (pUncert_DistributionType != null) ? pUncert_DistributionType : (pUncert_DistributionType = new Uncert_DistributionTypeElements());
	}
	
	public ParserRule getUncert_DistributionTypeRule() {
		return getUncert_DistributionTypeAccess().getRule();
	}

	//uncert_DistributionTypeContent:
	//
	//	Normal=uncert_Normal | PDF=uncert_PDF | Poison=uncert_Poison | Student=uncert_Student_t | Uniform=uncert_Uniform;
	public Uncert_DistributionTypeContentElements getUncert_DistributionTypeContentAccess() {
		return (pUncert_DistributionTypeContent != null) ? pUncert_DistributionTypeContent : (pUncert_DistributionTypeContent = new Uncert_DistributionTypeContentElements());
	}
	
	public ParserRule getUncert_DistributionTypeContentRule() {
		return getUncert_DistributionTypeContentAccess().getRule();
	}

	//uncert_Normal:
	//
	//	{uncert_Normal} TAG_OPEN "Normal" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Mean=uncert_Mean StdDev=uncert_StdDev?
	//
	//	Variance=uncert_Variance? CoefficientOfVariance=uncert_CoefficientOfVariance? TAG_OPEN2 "Normal" TAG_CLOSE);
	public Uncert_NormalElements getUncert_NormalAccess() {
		return (pUncert_Normal != null) ? pUncert_Normal : (pUncert_Normal = new Uncert_NormalElements());
	}
	
	public ParserRule getUncert_NormalRule() {
		return getUncert_NormalAccess().getRule();
	}

	//uncert_CoefficientOfVariance:
	//
	//	{uncert_CoefficientOfVariance} TAG_OPEN "CoefficientOfVariance" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Expr=uncert_DistributionParamType TAG_OPEN2 "CoefficientOfVariance" TAG_CLOSE);
	public Uncert_CoefficientOfVarianceElements getUncert_CoefficientOfVarianceAccess() {
		return (pUncert_CoefficientOfVariance != null) ? pUncert_CoefficientOfVariance : (pUncert_CoefficientOfVariance = new Uncert_CoefficientOfVarianceElements());
	}
	
	public ParserRule getUncert_CoefficientOfVarianceRule() {
		return getUncert_CoefficientOfVarianceAccess().getRule();
	}

	//uncert_StdDev:
	//
	//	{uncert_StdDev} TAG_OPEN "StdDev" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr+=uncert_DistributionParamType*
	//
	//	TAG_OPEN2 "StdDev" TAG_CLOSE);
	public Uncert_StdDevElements getUncert_StdDevAccess() {
		return (pUncert_StdDev != null) ? pUncert_StdDev : (pUncert_StdDev = new Uncert_StdDevElements());
	}
	
	public ParserRule getUncert_StdDevRule() {
		return getUncert_StdDevAccess().getRule();
	}

	//uncert_DistributionParamType:
	//
	//	Equation=Math_EquationType | Scalar=Math_ScalarType | Var=Math_VarType;
	public Uncert_DistributionParamTypeElements getUncert_DistributionParamTypeAccess() {
		return (pUncert_DistributionParamType != null) ? pUncert_DistributionParamType : (pUncert_DistributionParamType = new Uncert_DistributionParamTypeElements());
	}
	
	public ParserRule getUncert_DistributionParamTypeRule() {
		return getUncert_DistributionParamTypeAccess().getRule();
	}

	//uncert_MeanParamType:
	//
	//	Expr=uncert_DistributionParamType;
	public Uncert_MeanParamTypeElements getUncert_MeanParamTypeAccess() {
		return (pUncert_MeanParamType != null) ? pUncert_MeanParamType : (pUncert_MeanParamType = new Uncert_MeanParamTypeElements());
	}
	
	public ParserRule getUncert_MeanParamTypeRule() {
		return getUncert_MeanParamTypeAccess().getRule();
	}

	//uncert_Mean:
	//
	//	{uncert_Mean} TAG_OPEN "Mean" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=uncert_MeanParamType TAG_OPEN2 "Mean"
	//
	//	TAG_CLOSE);
	public Uncert_MeanElements getUncert_MeanAccess() {
		return (pUncert_Mean != null) ? pUncert_Mean : (pUncert_Mean = new Uncert_MeanElements());
	}
	
	public ParserRule getUncert_MeanRule() {
		return getUncert_MeanAccess().getRule();
	}

	//uncert_Variance:
	//
	//	{uncert_Variance} TAG_OPEN "Variance" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=uncert_DistributionParamType
	//
	//	TAG_OPEN2 "Variance" TAG_CLOSE);
	public Uncert_VarianceElements getUncert_VarianceAccess() {
		return (pUncert_Variance != null) ? pUncert_Variance : (pUncert_Variance = new Uncert_VarianceElements());
	}
	
	public ParserRule getUncert_VarianceRule() {
		return getUncert_VarianceAccess().getRule();
	}

	//uncert_PDF:
	//
	//	{uncert_PDF} TAG_OPEN "PDF" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
	//
	//	FunctionParameter+=uncert_ParameterDefinitionType* Equation=Math_EquationType TAG_OPEN2 "PDF" TAG_CLOSE);
	public Uncert_PDFElements getUncert_PDFAccess() {
		return (pUncert_PDF != null) ? pUncert_PDF : (pUncert_PDF = new Uncert_PDFElements());
	}
	
	public ParserRule getUncert_PDFRule() {
		return getUncert_PDFAccess().getRule();
	}

	//uncert_ParameterDefinitionType:
	//
	//	TAG_OPEN "FunctionParameter" xmlns+=XS_xmlns* id=Math_id name=ct_name? (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
	//
	//	"FunctionParameter" TAG_CLOSE);
	public Uncert_ParameterDefinitionTypeElements getUncert_ParameterDefinitionTypeAccess() {
		return (pUncert_ParameterDefinitionType != null) ? pUncert_ParameterDefinitionType : (pUncert_ParameterDefinitionType = new Uncert_ParameterDefinitionTypeElements());
	}
	
	public ParserRule getUncert_ParameterDefinitionTypeRule() {
		return getUncert_ParameterDefinitionTypeAccess().getRule();
	}

	//uncert_Poison:
	//
	//	{uncert_Poison} TAG_OPEN "Poison" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Rate=uncert_Rate TAG_OPEN2 "Poison"
	//
	//	TAG_CLOSE);
	public Uncert_PoisonElements getUncert_PoisonAccess() {
		return (pUncert_Poison != null) ? pUncert_Poison : (pUncert_Poison = new Uncert_PoisonElements());
	}
	
	public ParserRule getUncert_PoisonRule() {
		return getUncert_PoisonAccess().getRule();
	}

	//uncert_Rate:
	//
	//	{uncert_Rate} TAG_OPEN "Rate" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=uncert_DistributionParamType TAG_OPEN2
	//
	//	"Rate" TAG_CLOSE);
	public Uncert_RateElements getUncert_RateAccess() {
		return (pUncert_Rate != null) ? pUncert_Rate : (pUncert_Rate = new Uncert_RateElements());
	}
	
	public ParserRule getUncert_RateRule() {
		return getUncert_RateAccess().getRule();
	}

	//uncert_Student_t:
	//
	//	{uncert_Student_t} TAG_OPEN "Student-t" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Location=uncert_Location
	//
	//	Scale=uncert_Scale DegreesOfFreedom=uncertDegreesOfFreedom TAG_OPEN2 "Student-t" TAG_CLOSE);
	public Uncert_Student_tElements getUncert_Student_tAccess() {
		return (pUncert_Student_t != null) ? pUncert_Student_t : (pUncert_Student_t = new Uncert_Student_tElements());
	}
	
	public ParserRule getUncert_Student_tRule() {
		return getUncert_Student_tAccess().getRule();
	}

	//uncertDegreesOfFreedom:
	//
	//	{uncertDegreesOfFreedom} TAG_OPEN "DegreesOfFreedom" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Expr=uncert_DistributionParamType TAG_OPEN2 "DegreesOfFreedom" TAG_CLOSE);
	public UncertDegreesOfFreedomElements getUncertDegreesOfFreedomAccess() {
		return (pUncertDegreesOfFreedom != null) ? pUncertDegreesOfFreedom : (pUncertDegreesOfFreedom = new UncertDegreesOfFreedomElements());
	}
	
	public ParserRule getUncertDegreesOfFreedomRule() {
		return getUncertDegreesOfFreedomAccess().getRule();
	}

	//uncert_Scale:
	//
	//	{uncert_Scale} TAG_OPEN "Scale" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=uncert_DistributionParamType TAG_OPEN2
	//
	//	"Scale" TAG_CLOSE);
	public Uncert_ScaleElements getUncert_ScaleAccess() {
		return (pUncert_Scale != null) ? pUncert_Scale : (pUncert_Scale = new Uncert_ScaleElements());
	}
	
	public ParserRule getUncert_ScaleRule() {
		return getUncert_ScaleAccess().getRule();
	}

	//uncert_Location:
	//
	//	{uncert_Location} TAG_OPEN "Location" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=uncert_DistributionParamType
	//
	//	TAG_OPEN2 "Location" TAG_CLOSE);
	public Uncert_LocationElements getUncert_LocationAccess() {
		return (pUncert_Location != null) ? pUncert_Location : (pUncert_Location = new Uncert_LocationElements());
	}
	
	public ParserRule getUncert_LocationRule() {
		return getUncert_LocationAccess().getRule();
	}

	//uncert_Uniform:
	//
	//	{uncert_Uniform} TAG_OPEN "Uniform" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Uniform" TAG_CLOSE);
	public Uncert_UniformElements getUncert_UniformAccess() {
		return (pUncert_Uniform != null) ? pUncert_Uniform : (pUncert_Uniform = new Uncert_UniformElements());
	}
	
	public ParserRule getUncert_UniformRule() {
		return getUncert_UniformAccess().getRule();
	}

	//// ***************************************************************************************************
	//
	//// ***Math***
	//
	//// ***************************************************************************************************
	//
	//Math_EquationType:
	//
	//	{Math_EquationType} TAG_OPEN "Equation" xmlns+=XS_xmlns* writtenVersion=ct_writtenVersion (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Expr=Math_EquationTypeContent TAG_OPEN2 "Equation" TAG_CLOSE);
	public Math_EquationTypeElements getMath_EquationTypeAccess() {
		return (pMath_EquationType != null) ? pMath_EquationType : (pMath_EquationType = new Math_EquationTypeElements());
	}
	
	public ParserRule getMath_EquationTypeRule() {
		return getMath_EquationTypeAccess().getRule();
	}

	//Math_EquationTypeContent:
	//
	//	{Math_EquationTypeContent} Scalar=Math_ScalarType | Var=Math_VarType | Binop=Math_BinopType | Uniop=Math_UniopType |
	//
	//	Piecewise=Math_PiecewiseType;
	public Math_EquationTypeContentElements getMath_EquationTypeContentAccess() {
		return (pMath_EquationTypeContent != null) ? pMath_EquationTypeContent : (pMath_EquationTypeContent = new Math_EquationTypeContentElements());
	}
	
	public ParserRule getMath_EquationTypeContentRule() {
		return getMath_EquationTypeContentAccess().getRule();
	}

	//Math_ScalarType:
	//
	//	{Math_ScalarType} TAG_OPEN "Scalar" xmlns+=XS_xmlns* value=ct_Decimal_Value (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
	//
	//	"Scalar" TAG_CLOSE);
	public Math_ScalarTypeElements getMath_ScalarTypeAccess() {
		return (pMath_ScalarType != null) ? pMath_ScalarType : (pMath_ScalarType = new Math_ScalarTypeElements());
	}
	
	public ParserRule getMath_ScalarTypeRule() {
		return getMath_ScalarTypeAccess().getRule();
	}

	//Math_VarType:
	//
	//	{Math_VarType} TAG_OPEN "Var" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
	//
	//	"Var" TAG_CLOSE);
	public Math_VarTypeElements getMath_VarTypeAccess() {
		return (pMath_VarType != null) ? pMath_VarType : (pMath_VarType = new Math_VarTypeElements());
	}
	
	public ParserRule getMath_VarTypeRule() {
		return getMath_VarTypeAccess().getRule();
	}

	//Math_BinopType:
	//
	//	{Math_BinopType} TAG_OPEN "Binop" xmlns+=XS_xmlns* "op" "=" op=Math_BinopName (TAG_CLOSE2 | TAG_CLOSE
	//
	//	LeftExpr=Math_ExprType RightExpr=Math_ExprType TAG_OPEN2 "Binop" TAG_CLOSE);
	public Math_BinopTypeElements getMath_BinopTypeAccess() {
		return (pMath_BinopType != null) ? pMath_BinopType : (pMath_BinopType = new Math_BinopTypeElements());
	}
	
	public ParserRule getMath_BinopTypeRule() {
		return getMath_BinopTypeAccess().getRule();
	}

	//Math_UniopType:
	//
	//	{Math_UniopType} TAG_OPEN "Uniop" xmlns+=XS_xmlns* "op" "=" op=Math_UniopName (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Expr=Math_ExprType TAG_OPEN2 "Uniop" TAG_CLOSE);
	public Math_UniopTypeElements getMath_UniopTypeAccess() {
		return (pMath_UniopType != null) ? pMath_UniopType : (pMath_UniopType = new Math_UniopTypeElements());
	}
	
	public ParserRule getMath_UniopTypeRule() {
		return getMath_UniopTypeAccess().getRule();
	}

	//Math_ExprType:
	//
	//	{Math_ExprType} Scalar=Math_ScalarType | Var=Math_VarType | Uniop=Math_UniopType | Binop=Math_BinopType |
	//
	//	Constant=Math_ConstantType | FunctionCall=Math_FunctionCallType;
	public Math_ExprTypeElements getMath_ExprTypeAccess() {
		return (pMath_ExprType != null) ? pMath_ExprType : (pMath_ExprType = new Math_ExprTypeElements());
	}
	
	public ParserRule getMath_ExprTypeRule() {
		return getMath_ExprTypeAccess().getRule();
	}

	//Math_ConstantType:
	//
	//	{Math_ConstantType} TAG_OPEN "Constant" xmlns+=XS_xmlns* "op" "=" op=Math_ConstantName (TAG_CLOSE2 | TAG_CLOSE
	//
	//	TAG_OPEN2 "Constant" TAG_CLOSE);
	public Math_ConstantTypeElements getMath_ConstantTypeAccess() {
		return (pMath_ConstantType != null) ? pMath_ConstantType : (pMath_ConstantType = new Math_ConstantTypeElements());
	}
	
	public ParserRule getMath_ConstantTypeRule() {
		return getMath_ConstantTypeAccess().getRule();
	}

	//Math_FunctionCallType:
	//
	//	{Math_FunctionCallType} TAG_OPEN "FunctionCall" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Functionname=Math_VarType
	//
	//	FunctionArguments+=Math_FunctionArgumentType* TAG_OPEN2 "FunctionCall" TAG_CLOSE);
	public Math_FunctionCallTypeElements getMath_FunctionCallTypeAccess() {
		return (pMath_FunctionCallType != null) ? pMath_FunctionCallType : (pMath_FunctionCallType = new Math_FunctionCallTypeElements());
	}
	
	public ParserRule getMath_FunctionCallTypeRule() {
		return getMath_FunctionCallTypeAccess().getRule();
	}

	//Math_FunctionArgumentType:
	//
	//	TAG_OPEN "FunctionArgument" xmlns+=XS_xmlns* symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE Expr=Math_FuncExprType
	//
	//	TAG_OPEN2 "FunctionArgument" TAG_CLOSE);
	public Math_FunctionArgumentTypeElements getMath_FunctionArgumentTypeAccess() {
		return (pMath_FunctionArgumentType != null) ? pMath_FunctionArgumentType : (pMath_FunctionArgumentType = new Math_FunctionArgumentTypeElements());
	}
	
	public ParserRule getMath_FunctionArgumentTypeRule() {
		return getMath_FunctionArgumentTypeAccess().getRule();
	}

	//Math_FuncExprType:
	//
	//	Equation=Math_EquationType | Scalar=Math_ScalarType | Constant=Math_ConstantType | Var=Math_VarType;
	public Math_FuncExprTypeElements getMath_FuncExprTypeAccess() {
		return (pMath_FuncExprType != null) ? pMath_FuncExprType : (pMath_FuncExprType = new Math_FuncExprTypeElements());
	}
	
	public ParserRule getMath_FuncExprTypeRule() {
		return getMath_FuncExprTypeAccess().getRule();
	}

	//Math_PiecewiseType:
	//
	//	{Math_PiecewiseType} TAG_OPEN "Piecewise" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Piecewise+=Math_PieceType*
	//
	//	TAG_OPEN2 "Piecewise" TAG_CLOSE);
	public Math_PiecewiseTypeElements getMath_PiecewiseTypeAccess() {
		return (pMath_PiecewiseType != null) ? pMath_PiecewiseType : (pMath_PiecewiseType = new Math_PiecewiseTypeElements());
	}
	
	public ParserRule getMath_PiecewiseTypeRule() {
		return getMath_PiecewiseTypeAccess().getRule();
	}

	//Math_PieceType:
	//
	//	{Math_PieceType} TAG_OPEN "Piece" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Content=Math_ExprType
	//
	//	Condition=Math_ConditionType TAG_OPEN2 "Piece" TAG_CLOSE);
	public Math_PieceTypeElements getMath_PieceTypeAccess() {
		return (pMath_PieceType != null) ? pMath_PieceType : (pMath_PieceType = new Math_PieceTypeElements());
	}
	
	public ParserRule getMath_PieceTypeRule() {
		return getMath_PieceTypeAccess().getRule();
	}

	//Math_ConditionType:
	//
	//	TAG_OPEN "Condition" xmlns+=XS_xmlns* writtenVersion=ct_writtenVersion (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Expr=Math_LogicBaseType TAG_OPEN2 "Condition" TAG_CLOSE);
	public Math_ConditionTypeElements getMath_ConditionTypeAccess() {
		return (pMath_ConditionType != null) ? pMath_ConditionType : (pMath_ConditionType = new Math_ConditionTypeElements());
	}
	
	public ParserRule getMath_ConditionTypeRule() {
		return getMath_ConditionTypeAccess().getRule();
	}

	//Math_LogicBaseType:
	//
	//	LogicBinopType=Math_LogicBinopType | LogicUniopType=Math_LogicUniopType | True=Math_TRUE | False=Math_FALSE |
	//
	//	Otherwise=Math_Otherwise;
	public Math_LogicBaseTypeElements getMath_LogicBaseTypeAccess() {
		return (pMath_LogicBaseType != null) ? pMath_LogicBaseType : (pMath_LogicBaseType = new Math_LogicBaseTypeElements());
	}
	
	public ParserRule getMath_LogicBaseTypeRule() {
		return getMath_LogicBaseTypeAccess().getRule();
	}

	//Math_Otherwise:
	//
	//	{Math_Otherwise} TAG_OPEN "Otherwise" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Otherwise" TAG_CLOSE);
	public Math_OtherwiseElements getMath_OtherwiseAccess() {
		return (pMath_Otherwise != null) ? pMath_Otherwise : (pMath_Otherwise = new Math_OtherwiseElements());
	}
	
	public ParserRule getMath_OtherwiseRule() {
		return getMath_OtherwiseAccess().getRule();
	}

	//Math_LogicExprType:
	//
	//	Math_LogicBaseType | Scalar=Math_ScalarType | Constant=Math_ConstantType | Var=Math_VarType | Uniop=Math_UniopType |
	//
	//	Binop=Math_BinopType | FunctionCall=Math_FunctionCallType | String=Math_StringType;
	public Math_LogicExprTypeElements getMath_LogicExprTypeAccess() {
		return (pMath_LogicExprType != null) ? pMath_LogicExprType : (pMath_LogicExprType = new Math_LogicExprTypeElements());
	}
	
	public ParserRule getMath_LogicExprTypeRule() {
		return getMath_LogicExprTypeAccess().getRule();
	}

	//Math_StringType:
	//
	//	TAG_OPEN "String" xmlns+=XS_xmlns* value=ct_String_Value (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "String" TAG_CLOSE);
	public Math_StringTypeElements getMath_StringTypeAccess() {
		return (pMath_StringType != null) ? pMath_StringType : (pMath_StringType = new Math_StringTypeElements());
	}
	
	public ParserRule getMath_StringTypeRule() {
		return getMath_StringTypeAccess().getRule();
	}

	//Math_TRUE:
	//
	//	true=("\"True\"" | "\"true\"" | "\"TRUE\"");
	public Math_TRUEElements getMath_TRUEAccess() {
		return (pMath_TRUE != null) ? pMath_TRUE : (pMath_TRUE = new Math_TRUEElements());
	}
	
	public ParserRule getMath_TRUERule() {
		return getMath_TRUEAccess().getRule();
	}

	//Math_FALSE:
	//
	//	false=("\"False\"" | "\"false\"" | "\"FALSE\"");
	public Math_FALSEElements getMath_FALSEAccess() {
		return (pMath_FALSE != null) ? pMath_FALSE : (pMath_FALSE = new Math_FALSEElements());
	}
	
	public ParserRule getMath_FALSERule() {
		return getMath_FALSEAccess().getRule();
	}

	//Math_LogicBinopType:
	//
	//	TAG_OPEN "LogicBinop" xmlns+=XS_xmlns* "op" "=" op=Math_LogicBinopName (TAG_CLOSE2 | TAG_CLOSE
	//
	//	LeftExpr=Math_LogicExprType RightExpr=Math_LogicExprType TAG_OPEN2 "LogicBinop" TAG_CLOSE);
	public Math_LogicBinopTypeElements getMath_LogicBinopTypeAccess() {
		return (pMath_LogicBinopType != null) ? pMath_LogicBinopType : (pMath_LogicBinopType = new Math_LogicBinopTypeElements());
	}
	
	public ParserRule getMath_LogicBinopTypeRule() {
		return getMath_LogicBinopTypeAccess().getRule();
	}

	//Math_LogicUniopType:
	//
	//	TAG_OPEN "LogicUniop" xmlns+=XS_xmlns* "op" "=" op=Math_LogicUniopName (TAG_CLOSE2 | TAG_CLOSE
	//
	//	Expr=Math_LogicExprType TAG_OPEN2 "LogicUniop" TAG_CLOSE);
	public Math_LogicUniopTypeElements getMath_LogicUniopTypeAccess() {
		return (pMath_LogicUniopType != null) ? pMath_LogicUniopType : (pMath_LogicUniopType = new Math_LogicUniopTypeElements());
	}
	
	public ParserRule getMath_LogicUniopTypeRule() {
		return getMath_LogicUniopTypeAccess().getRule();
	}

	////Add symbols
	//
	//Math_BinopName:
	//
	//	binopname="\"plus\"" | minus="\"minus\"" | times="\"times\"" | divide="\"divide\"" | power="\"power\"" |
	//
	//	log="\"log\"" | root="\"root\"";
	public Math_BinopNameElements getMath_BinopNameAccess() {
		return (pMath_BinopName != null) ? pMath_BinopName : (pMath_BinopName = new Math_BinopNameElements());
	}
	
	public ParserRule getMath_BinopNameRule() {
		return getMath_BinopNameAccess().getRule();
	}

	//Math_UniopName:
	//
	//	exp="\"exp\"" | ln="\"ln\"" | minus="\"minus\"" | factorial="\"factorial\"" | sin="\"sin\"" | cos="\"cos\"" |
	//
	//	tan="\"tan\"" | sec="\"sec\"" | csc="\"csc\"" | cot="\"cot\"" | sinh="\"sinh\"" | csch="\"csch\"" | coth="\"coth\"" |
	//
	//	arcsin="\"arcsin\"" | arccos="\"arccos\"" | arctan="\"arctan\"" | arcsec="\"arcsec\"" | arccsc="\"arccsc\"" |
	//
	//	arccot="\"arccot\"" | arcsinh="\"arcsinh\"" | arccosh="\"arccosh\"" | arctanh="\"arctanh\"" | arcsech="\"arcsech\"" |
	//
	//	arccsch="\"arccsch\"" | arccoth="\"arccoth\"" | floor="\"floor\"" | abs="\"abs\"" | ceiling="\"ceiling\"" |
	//
	//	logit="\"logit\"";
	public Math_UniopNameElements getMath_UniopNameAccess() {
		return (pMath_UniopName != null) ? pMath_UniopName : (pMath_UniopName = new Math_UniopNameElements());
	}
	
	public ParserRule getMath_UniopNameRule() {
		return getMath_UniopNameAccess().getRule();
	}

	//Math_LogicUniopName:
	//
	//	isDefined="\"isDefined\"" | not="\"not\"";
	public Math_LogicUniopNameElements getMath_LogicUniopNameAccess() {
		return (pMath_LogicUniopName != null) ? pMath_LogicUniopName : (pMath_LogicUniopName = new Math_LogicUniopNameElements());
	}
	
	public ParserRule getMath_LogicUniopNameRule() {
		return getMath_LogicUniopNameAccess().getRule();
	}

	//Math_LogicBinopName:
	//
	//	lt="\"lt\"" | leq="\"leq\"" | gt="\"gt\"" | geq="\"geq\"" | eq="\"eq\"" | neq="\"neq\"" | and="\"and\"" | or="\"or\""
	//
	//	| xor="\"xor\"";
	public Math_LogicBinopNameElements getMath_LogicBinopNameAccess() {
		return (pMath_LogicBinopName != null) ? pMath_LogicBinopName : (pMath_LogicBinopName = new Math_LogicBinopNameElements());
	}
	
	public ParserRule getMath_LogicBinopNameRule() {
		return getMath_LogicBinopNameAccess().getRule();
	}

	//Math_ConstantName:
	//
	//	notanumber="\"notanumber\"" | pi="\"pi\"" | exponentiale="\"exponentiale\"" | infinity="\"infinity\"";
	public Math_ConstantNameElements getMath_ConstantNameAccess() {
		return (pMath_ConstantName != null) ? pMath_ConstantName : (pMath_ConstantName = new Math_ConstantNameElements());
	}
	
	public ParserRule getMath_ConstantNameRule() {
		return getMath_ConstantNameAccess().getRule();
	}

	//Math_symbId:
	//
	//	"symbId" "=" symbId=Math_SymbolNameType;
	public Math_symbIdElements getMath_symbIdAccess() {
		return (pMath_symbId != null) ? pMath_symbId : (pMath_symbId = new Math_symbIdElements());
	}
	
	public ParserRule getMath_symbIdRule() {
		return getMath_symbIdAccess().getRule();
	}

	//Math_id:
	//
	//	"id" "=" id=Math_BlockNameType;
	public Math_idElements getMath_idAccess() {
		return (pMath_id != null) ? pMath_id : (pMath_id = new Math_idElements());
	}
	
	public ParserRule getMath_idRule() {
		return getMath_idAccess().getRule();
	}

	//Math_block:
	//
	//	"block" "=" block=Math_BlockNameType;
	public Math_blockElements getMath_blockAccess() {
		return (pMath_block != null) ? pMath_block : (pMath_block = new Math_blockElements());
	}
	
	public ParserRule getMath_blockRule() {
		return getMath_blockAccess().getRule();
	}

	//Math_SymbolNameType:
	//
	//	XS_NAME;
	public Math_SymbolNameTypeElements getMath_SymbolNameTypeAccess() {
		return (pMath_SymbolNameType != null) ? pMath_SymbolNameType : (pMath_SymbolNameType = new Math_SymbolNameTypeElements());
	}
	
	public ParserRule getMath_SymbolNameTypeRule() {
		return getMath_SymbolNameTypeAccess().getRule();
	}

	//Math_EstimationOperationType:
	//
	//	estPop="\"estPop\"" | estFIM="\"estFIM\"" | estIndiv="\"estIndiv\"";
	public Math_EstimationOperationTypeElements getMath_EstimationOperationTypeAccess() {
		return (pMath_EstimationOperationType != null) ? pMath_EstimationOperationType : (pMath_EstimationOperationType = new Math_EstimationOperationTypeElements());
	}
	
	public ParserRule getMath_EstimationOperationTypeRule() {
		return getMath_EstimationOperationTypeAccess().getRule();
	}

	//Math_BlockNameType:
	//
	//	XS_NAME;
	public Math_BlockNameTypeElements getMath_BlockNameTypeAccess() {
		return (pMath_BlockNameType != null) ? pMath_BlockNameType : (pMath_BlockNameType = new Math_BlockNameTypeElements());
	}
	
	public ParserRule getMath_BlockNameTypeRule() {
		return getMath_BlockNameTypeAccess().getRule();
	}

	///////////////////////////////////////////////////////////////////////////////////////////////////////////
	//
	//// ***CommonTypes***
	//
	///////////////////////////////////////////////////////////////////////////////////////////////////////////
	//
	//ct_ReplicatesType:
	//
	//	TAG_OPEN "Replicates" xmlns+=XS_xmlns* symbId=ct_symbId (TAG_CLOSE2 | TAG_CLOSE Expr=ct_Rhs? TAG_OPEN2 "Replicates"
	//
	//	TAG_CLOSE);
	public Ct_ReplicatesTypeElements getCt_ReplicatesTypeAccess() {
		return (pCt_ReplicatesType != null) ? pCt_ReplicatesType : (pCt_ReplicatesType = new Ct_ReplicatesTypeElements());
	}
	
	public ParserRule getCt_ReplicatesTypeRule() {
		return getCt_ReplicatesTypeAccess().getRule();
	}

	//ct_AnnotationType:
	//
	//	{ct_AnnotationType} TAG_OPEN "Description" xmlns+=XS_xmlns* TAG_CLOSE Description+=word* TAG_OPEN2 "Description"
	//
	//	TAG_CLOSE;
	public Ct_AnnotationTypeElements getCt_AnnotationTypeAccess() {
		return (pCt_AnnotationType != null) ? pCt_AnnotationType : (pCt_AnnotationType = new Ct_AnnotationTypeElements());
	}
	
	public ParserRule getCt_AnnotationTypeRule() {
		return getCt_AnnotationTypeAccess().getRule();
	}

	//ct_Rhs:
	//
	//	Equation=Math_EquationType | Scalar=Math_ScalarType | Constant=Math_ConstantType | String=Math_StringType |
	//
	//	Sequence=ct_SequenceType | Vector=ct_VectorType | FunctionCall=Math_FunctionCallType | DataSet=ct_DataSetType |
	//
	//	Var=Math_VarType | Distribution=uncert_DistributionType;
	public Ct_RhsElements getCt_RhsAccess() {
		return (pCt_Rhs != null) ? pCt_Rhs : (pCt_Rhs = new Ct_RhsElements());
	}
	
	public ParserRule getCt_RhsRule() {
		return getCt_RhsAccess().getRule();
	}

	//ct_DataSetType:
	//
	//	{ct_DataSetType} TAG_OPEN "DataSet" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Definition=ct_DefinitionType
	//
	//	ExternalSource+=ct_ExternalSourceType* Row+=ct_RowType* InternalSource+=ct_InternalSourceType* TAG_OPEN2 "DataSet"
	//
	//	TAG_CLOSE);
	public Ct_DataSetTypeElements getCt_DataSetTypeAccess() {
		return (pCt_DataSetType != null) ? pCt_DataSetType : (pCt_DataSetType = new Ct_DataSetTypeElements());
	}
	
	public ParserRule getCt_DataSetTypeRule() {
		return getCt_DataSetTypeAccess().getRule();
	}

	//ct_DefinitionType:
	//
	//	{ct_DefinitionType} TAG_OPEN "Definition" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Definition+=ct_ColumnType*
	//
	//	TAG_OPEN2 "Definition" TAG_CLOSE);
	public Ct_DefinitionTypeElements getCt_DefinitionTypeAccess() {
		return (pCt_DefinitionType != null) ? pCt_DefinitionType : (pCt_DefinitionType = new Ct_DefinitionTypeElements());
	}
	
	public ParserRule getCt_DefinitionTypeRule() {
		return getCt_DefinitionTypeAccess().getRule();
	}

	//ct_DefinitionRhsType:
	//
	//	{ct_DefinitionRhsType} TAG_OPEN "Definition" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Definition=ct_Rhs? TAG_OPEN2
	//
	//	"Definition" TAG_CLOSE);
	public Ct_DefinitionRhsTypeElements getCt_DefinitionRhsTypeAccess() {
		return (pCt_DefinitionRhsType != null) ? pCt_DefinitionRhsType : (pCt_DefinitionRhsType = new Ct_DefinitionRhsTypeElements());
	}
	
	public ParserRule getCt_DefinitionRhsTypeRule() {
		return getCt_DefinitionRhsTypeAccess().getRule();
	}

	//ct_ColumnType:
	//
	//	TAG_OPEN "Column" xmlns+=XS_xmlns* "columnNum" "=" columnNum=XS_INT "columnVar" "=" columnVar=ct_SymbolNameType
	//
	//	(TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Column" TAG_CLOSE);
	public Ct_ColumnTypeElements getCt_ColumnTypeAccess() {
		return (pCt_ColumnType != null) ? pCt_ColumnType : (pCt_ColumnType = new Ct_ColumnTypeElements());
	}
	
	public ParserRule getCt_ColumnTypeRule() {
		return getCt_ColumnTypeAccess().getRule();
	}

	//ct_ExternalSourceType:
	//
	//	TAG_OPEN "ExternalSource" xmlns+=XS_xmlns* ("format" "=" format=ct_SymbolNameType & ("headerLine" "="
	//
	//	headerLine=(Math_TRUE | Math_FALSE))? & ("ignoreLineSymbol" "=" ignoreLineSymbol=ct_SymbolNameType)? & "url" "="
	//
	//	url=XS_ANY_URI) (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "ExternalSource" TAG_CLOSE);
	public Ct_ExternalSourceTypeElements getCt_ExternalSourceTypeAccess() {
		return (pCt_ExternalSourceType != null) ? pCt_ExternalSourceType : (pCt_ExternalSourceType = new Ct_ExternalSourceTypeElements());
	}
	
	public ParserRule getCt_ExternalSourceTypeRule() {
		return getCt_ExternalSourceTypeAccess().getRule();
	}

	//ct_RowType:
	//
	//	{ct_RowType} TAG_OPEN "Row" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Row+=ct_RowTypeContent* TAG_OPEN2 "Row"
	//
	//	TAG_CLOSE);
	public Ct_RowTypeElements getCt_RowTypeAccess() {
		return (pCt_RowType != null) ? pCt_RowType : (pCt_RowType = new Ct_RowTypeElements());
	}
	
	public ParserRule getCt_RowTypeRule() {
		return getCt_RowTypeAccess().getRule();
	}

	//ct_RowTypeContent:
	//
	//	Cell=ct_CellType | Null=ct_NullCellType;
	public Ct_RowTypeContentElements getCt_RowTypeContentAccess() {
		return (pCt_RowTypeContent != null) ? pCt_RowTypeContent : (pCt_RowTypeContent = new Ct_RowTypeContentElements());
	}
	
	public ParserRule getCt_RowTypeContentRule() {
		return getCt_RowTypeContentAccess().getRule();
	}

	//ct_NullCellType:
	//
	//	TAG_OPEN null="Null" TAG_CLOSE2;
	public Ct_NullCellTypeElements getCt_NullCellTypeAccess() {
		return (pCt_NullCellType != null) ? pCt_NullCellType : (pCt_NullCellType = new Ct_NullCellTypeElements());
	}
	
	public ParserRule getCt_NullCellTypeRule() {
		return getCt_NullCellTypeAccess().getRule();
	}

	//ct_CellType:
	//
	//	TAG_OPEN "Cell" xmlns+=XS_xmlns* value=ct_Decimal_Value (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Cell" TAG_CLOSE);
	public Ct_CellTypeElements getCt_CellTypeAccess() {
		return (pCt_CellType != null) ? pCt_CellType : (pCt_CellType = new Ct_CellTypeElements());
	}
	
	public ParserRule getCt_CellTypeRule() {
		return getCt_CellTypeAccess().getRule();
	}

	//ct_InternalSourceType:
	//
	//	TAG_OPEN "InternalSource" xmlns+=XS_xmlns* block=Math_block? symbId=Math_symbId (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2
	//
	//	"InternalSource" TAG_CLOSE);
	public Ct_InternalSourceTypeElements getCt_InternalSourceTypeAccess() {
		return (pCt_InternalSourceType != null) ? pCt_InternalSourceType : (pCt_InternalSourceType = new Ct_InternalSourceTypeElements());
	}
	
	public ParserRule getCt_InternalSourceTypeRule() {
		return getCt_InternalSourceTypeAccess().getRule();
	}

	//ct_VectorType:
	//
	//	{ct_VectorType} TAG_OPEN "Vector" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Scalar+=Math_ScalarType?
	//
	//	Sequence+=ct_SequenceType* TAG_OPEN2 "Vector" TAG_CLOSE);
	public Ct_VectorTypeElements getCt_VectorTypeAccess() {
		return (pCt_VectorType != null) ? pCt_VectorType : (pCt_VectorType = new Ct_VectorTypeElements());
	}
	
	public ParserRule getCt_VectorTypeRule() {
		return getCt_VectorTypeAccess().getRule();
	}

	//ct_SequenceType:
	//
	//	TAG_OPEN "Sequence" xmlns+=XS_xmlns* "begin" "=" begin=XS_DECIMAL ("end" "=" end=XS_DECIMAL)? "stepSize" "="
	//
	//	stepwise=XS_DECIMAL ("repetitions" "=" repetition=XS_INT)? (TAG_CLOSE2 | TAG_CLOSE TAG_OPEN2 "Sequence" TAG_CLOSE);
	public Ct_SequenceTypeElements getCt_SequenceTypeAccess() {
		return (pCt_SequenceType != null) ? pCt_SequenceType : (pCt_SequenceType = new Ct_SequenceTypeElements());
	}
	
	public ParserRule getCt_SequenceTypeRule() {
		return getCt_SequenceTypeAccess().getRule();
	}

	//ct_VariableDefinitionType:
	//
	//	TAG_OPEN "Variable" xmlns+=XS_xmlns* (independentVar=ct_independentVar? & symbId=ct_symbId &
	//
	//	symbolType=ct_symbolType) (TAG_CLOSE2 | TAG_CLOSE Description=ct_AnnotationType? Expr=ct_Rhs? TAG_OPEN2 "Variable"
	//
	//	TAG_CLOSE);
	public Ct_VariableDefinitionTypeElements getCt_VariableDefinitionTypeAccess() {
		return (pCt_VariableDefinitionType != null) ? pCt_VariableDefinitionType : (pCt_VariableDefinitionType = new Ct_VariableDefinitionTypeElements());
	}
	
	public ParserRule getCt_VariableDefinitionTypeRule() {
		return getCt_VariableDefinitionTypeAccess().getRule();
	}

	//ct_RestrictionType:
	//
	//	{ct_RestrictionType} TAG_OPEN "Restriction" xmlns+=XS_xmlns* (TAG_CLOSE2 | TAG_CLOSE Expr=Math_ConditionType?
	//
	//	TAG_OPEN2 "Restriction" TAG_CLOSE);
	public Ct_RestrictionTypeElements getCt_RestrictionTypeAccess() {
		return (pCt_RestrictionType != null) ? pCt_RestrictionType : (pCt_RestrictionType = new Ct_RestrictionTypeElements());
	}
	
	public ParserRule getCt_RestrictionTypeRule() {
		return getCt_RestrictionTypeAccess().getRule();
	}

	//ct_ScalarRhs:
	//
	//	Equation=Math_EquationType | Scalar=Math_ScalarType | Var=Math_VarType | String=Math_StringType |
	//
	//	FunctionCall=Math_FunctionCallType;
	public Ct_ScalarRhsElements getCt_ScalarRhsAccess() {
		return (pCt_ScalarRhs != null) ? pCt_ScalarRhs : (pCt_ScalarRhs = new Ct_ScalarRhsElements());
	}
	
	public ParserRule getCt_ScalarRhsRule() {
		return getCt_ScalarRhsAccess().getRule();
	}

	//ct_independentVar:
	//
	//	"independentVar" "=" independentVar=ct_SymbolNameType;
	public Ct_independentVarElements getCt_independentVarAccess() {
		return (pCt_independentVar != null) ? pCt_independentVar : (pCt_independentVar = new Ct_independentVarElements());
	}
	
	public ParserRule getCt_independentVarRule() {
		return getCt_independentVarAccess().getRule();
	}

	//ct_levelId:
	//
	//	"levelId" "=" levelId=ct_BlockNameType;
	public Ct_levelIdElements getCt_levelIdAccess() {
		return (pCt_levelId != null) ? pCt_levelId : (pCt_levelId = new Ct_levelIdElements());
	}
	
	public ParserRule getCt_levelIdRule() {
		return getCt_levelIdAccess().getRule();
	}

	//ct_name:
	//
	//	"name" "=" name=XS_STRING;
	public Ct_nameElements getCt_nameAccess() {
		return (pCt_name != null) ? pCt_name : (pCt_name = new Ct_nameElements());
	}
	
	public ParserRule getCt_nameRule() {
		return getCt_nameAccess().getRule();
	}

	//ct_symbId:
	//
	//	"symbId" "=" symbId=ct_SymbolNameType;
	public Ct_symbIdElements getCt_symbIdAccess() {
		return (pCt_symbId != null) ? pCt_symbId : (pCt_symbId = new Ct_symbIdElements());
	}
	
	public ParserRule getCt_symbIdRule() {
		return getCt_symbIdAccess().getRule();
	}

	//ct_id:
	//
	//	"id" "=" id=ct_BlockNameType;
	public Ct_idElements getCt_idAccess() {
		return (pCt_id != null) ? pCt_id : (pCt_id = new Ct_idElements());
	}
	
	public ParserRule getCt_idRule() {
		return getCt_idAccess().getRule();
	}

	//ct_symbolType:
	//
	//	"symbolType" "=" symbolType=ct_SymbolTypeType;
	public Ct_symbolTypeElements getCt_symbolTypeAccess() {
		return (pCt_symbolType != null) ? pCt_symbolType : (pCt_symbolType = new Ct_symbolTypeElements());
	}
	
	public ParserRule getCt_symbolTypeRule() {
		return getCt_symbolTypeAccess().getRule();
	}

	//ct_block:
	//
	//	"block" "=" block=ct_BlockNameType;
	public Ct_blockElements getCt_blockAccess() {
		return (pCt_block != null) ? pCt_block : (pCt_block = new Ct_blockElements());
	}
	
	public ParserRule getCt_blockRule() {
		return getCt_blockAccess().getRule();
	}

	//ct_writtenVersion:
	//
	//	"writtenVersion" "=" writtenVersion=XS_STRING;
	public Ct_writtenVersionElements getCt_writtenVersionAccess() {
		return (pCt_writtenVersion != null) ? pCt_writtenVersion : (pCt_writtenVersion = new Ct_writtenVersionElements());
	}
	
	public ParserRule getCt_writtenVersionRule() {
		return getCt_writtenVersionAccess().getRule();
	}

	//ct_Decimal_Value:
	//
	//	"value" "=" value=XS_DECIMAL;
	public Ct_Decimal_ValueElements getCt_Decimal_ValueAccess() {
		return (pCt_Decimal_Value != null) ? pCt_Decimal_Value : (pCt_Decimal_Value = new Ct_Decimal_ValueElements());
	}
	
	public ParserRule getCt_Decimal_ValueRule() {
		return getCt_Decimal_ValueAccess().getRule();
	}

	//ct_String_Value:
	//
	//	"value" "=" value=XS_STRING;
	public Ct_String_ValueElements getCt_String_ValueAccess() {
		return (pCt_String_Value != null) ? pCt_String_Value : (pCt_String_Value = new Ct_String_ValueElements());
	}
	
	public ParserRule getCt_String_ValueRule() {
		return getCt_String_ValueAccess().getRule();
	}

	//ct_catId:
	//
	//	"catId" "=" catId=ct_SymbolNameType;
	public Ct_catIdElements getCt_catIdAccess() {
		return (pCt_catId != null) ? pCt_catId : (pCt_catId = new Ct_catIdElements());
	}
	
	public ParserRule getCt_catIdRule() {
		return getCt_catIdAccess().getRule();
	}

	//ct_BlockNameType:
	//
	//	XS_TOKEN;
	public Ct_BlockNameTypeElements getCt_BlockNameTypeAccess() {
		return (pCt_BlockNameType != null) ? pCt_BlockNameType : (pCt_BlockNameType = new Ct_BlockNameTypeElements());
	}
	
	public ParserRule getCt_BlockNameTypeRule() {
		return getCt_BlockNameTypeAccess().getRule();
	}

	//ct_SymbolNameType:
	//
	//	XS_STRING;
	public Ct_SymbolNameTypeElements getCt_SymbolNameTypeAccess() {
		return (pCt_SymbolNameType != null) ? pCt_SymbolNameType : (pCt_SymbolNameType = new Ct_SymbolNameTypeElements());
	}
	
	public ParserRule getCt_SymbolNameTypeRule() {
		return getCt_SymbolNameTypeAccess().getRule();
	}

	//ct_SymbolTypeType:
	//
	//	scalar="\"scalar\"" | derivative="\"derivative\"" | distrib="\"distrib\"" | dataSet="\"dataSet\"";
	public Ct_SymbolTypeTypeElements getCt_SymbolTypeTypeAccess() {
		return (pCt_SymbolTypeType != null) ? pCt_SymbolTypeType : (pCt_SymbolTypeType = new Ct_SymbolTypeTypeElements());
	}
	
	public ParserRule getCt_SymbolTypeTypeRule() {
		return getCt_SymbolTypeTypeAccess().getRule();
	}

	//// ***************************************************************************************************
	//
	//// ***Terminals*** /
	//
	//// ***************************************************************************************************
	//
	//XS_xmlns:
	//
	//	("xmlns" | "xsi") (":" (ID | "xsi"))? "=" location=XS_STRING;
	public XS_xmlnsElements getXS_xmlnsAccess() {
		return (pXS_xmlns != null) ? pXS_xmlns : (pXS_xmlns = new XS_xmlnsElements());
	}
	
	public ParserRule getXS_xmlnsRule() {
		return getXS_xmlnsAccess().getRule();
	}

	//Namespace:
	//
	//	ID ":";
	public NamespaceElements getNamespaceAccess() {
		return (pNamespace != null) ? pNamespace : (pNamespace = new NamespaceElements());
	}
	
	public ParserRule getNamespaceRule() {
		return getNamespaceAccess().getRule();
	}

	//TAG_OPEN:
	//
	//	"<" Namespace?;
	public TAG_OPENElements getTAG_OPENAccess() {
		return (pTAG_OPEN != null) ? pTAG_OPEN : (pTAG_OPEN = new TAG_OPENElements());
	}
	
	public ParserRule getTAG_OPENRule() {
		return getTAG_OPENAccess().getRule();
	}

	//TAG_CLOSE:
	//
	//	">";
	public TAG_CLOSEElements getTAG_CLOSEAccess() {
		return (pTAG_CLOSE != null) ? pTAG_CLOSE : (pTAG_CLOSE = new TAG_CLOSEElements());
	}
	
	public ParserRule getTAG_CLOSERule() {
		return getTAG_CLOSEAccess().getRule();
	}

	//TAG_CLOSE2:
	//
	//	"/>";
	public TAG_CLOSE2Elements getTAG_CLOSE2Access() {
		return (pTAG_CLOSE2 != null) ? pTAG_CLOSE2 : (pTAG_CLOSE2 = new TAG_CLOSE2Elements());
	}
	
	public ParserRule getTAG_CLOSE2Rule() {
		return getTAG_CLOSE2Access().getRule();
	}

	//TAG_OPEN2:
	//
	//	"</" Namespace?;
	public TAG_OPEN2Elements getTAG_OPEN2Access() {
		return (pTAG_OPEN2 != null) ? pTAG_OPEN2 : (pTAG_OPEN2 = new TAG_OPEN2Elements());
	}
	
	public ParserRule getTAG_OPEN2Rule() {
		return getTAG_OPEN2Access().getRule();
	}

	//XS_TOKEN:
	//
	//	XS_STRING;
	public XS_TOKENElements getXS_TOKENAccess() {
		return (pXS_TOKEN != null) ? pXS_TOKEN : (pXS_TOKEN = new XS_TOKENElements());
	}
	
	public ParserRule getXS_TOKENRule() {
		return getXS_TOKENAccess().getRule();
	}

	//XS_ANY_URI:
	//
	//	XS_STRING;
	public XS_ANY_URIElements getXS_ANY_URIAccess() {
		return (pXS_ANY_URI != null) ? pXS_ANY_URI : (pXS_ANY_URI = new XS_ANY_URIElements());
	}
	
	public ParserRule getXS_ANY_URIRule() {
		return getXS_ANY_URIAccess().getRule();
	}

	//XS_NAME:
	//
	//	XS_STRING;
	public XS_NAMEElements getXS_NAMEAccess() {
		return (pXS_NAME != null) ? pXS_NAME : (pXS_NAME = new XS_NAMEElements());
	}
	
	public ParserRule getXS_NAMERule() {
		return getXS_NAMEAccess().getRule();
	}

	//XS_DECIMAL:
	//
	//	XS_STRING;
	public XS_DECIMALElements getXS_DECIMALAccess() {
		return (pXS_DECIMAL != null) ? pXS_DECIMAL : (pXS_DECIMAL = new XS_DECIMALElements());
	}
	
	public ParserRule getXS_DECIMALRule() {
		return getXS_DECIMALAccess().getRule();
	}

	//XS_INT:
	//
	//	XS_STRING;
	public XS_INTElements getXS_INTAccess() {
		return (pXS_INT != null) ? pXS_INT : (pXS_INT = new XS_INTElements());
	}
	
	public ParserRule getXS_INTRule() {
		return getXS_INTAccess().getRule();
	}

	//word:
	//
	//	ID | INT | DECIMAL;
	public WordElements getWordAccess() {
		return (pWord != null) ? pWord : (pWord = new WordElements());
	}
	
	public ParserRule getWordRule() {
		return getWordAccess().getRule();
	}

	//terminal XS_STRING:
	//
	//	"\"" (ESCAPE_SEQUENCE | !("\\" | "\""))* "\"";
	public TerminalRule getXS_STRINGRule() {
		return (tXS_STRING != null) ? tXS_STRING : (tXS_STRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "XS_STRING"));
	} 

	//terminal DECIMAL:
	//
	//	"0".."9"+ "." "0".."9"* | "." "0".."9"+;
	public TerminalRule getDECIMALRule() {
		return (tDECIMAL != null) ? tDECIMAL : (tDECIMAL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "DECIMAL"));
	} 

	//terminal fragment ESCAPE_SEQUENCE:
	//
	//	"\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | UNICODE_ESCAPE | OCTAL_ESCAPE;
	public TerminalRule getESCAPE_SEQUENCERule() {
		return (tESCAPE_SEQUENCE != null) ? tESCAPE_SEQUENCE : (tESCAPE_SEQUENCE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ESCAPE_SEQUENCE"));
	} 

	//terminal fragment OCTAL_ESCAPE:
	//
	//	"\\" "0".."3" "0".."7" "0".."7" | "\\" "0".."7" "0".."7" | "\\" "0".."7";
	public TerminalRule getOCTAL_ESCAPERule() {
		return (tOCTAL_ESCAPE != null) ? tOCTAL_ESCAPE : (tOCTAL_ESCAPE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "OCTAL_ESCAPE"));
	} 

	//terminal fragment UNICODE_ESCAPE:
	//
	//	"\\" "u" HEXDIGIT HEXDIGIT HEXDIGIT HEXDIGIT;
	public TerminalRule getUNICODE_ESCAPERule() {
		return (tUNICODE_ESCAPE != null) ? tUNICODE_ESCAPE : (tUNICODE_ESCAPE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "UNICODE_ESCAPE"));
	} 

	//terminal fragment HEXDIGIT:
	//
	//	"0".."9" | "a".."f" | "A".."F";
	public TerminalRule getHEXDIGITRule() {
		return (tHEXDIGIT != null) ? tHEXDIGIT : (tHEXDIGIT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "HEXDIGIT"));
	} 

	//terminal ML_COMMENT:
	//
	//	"<!--"->"-->";
	public TerminalRule getML_COMMENTRule() {
		return (tML_COMMENT != null) ? tML_COMMENT : (tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ML_COMMENT"));
	} 

	//terminal XML_ANNOTATION:
	//
	//	"<?xml"->"?>";
	public TerminalRule getXML_ANNOTATIONRule() {
		return (tXML_ANNOTATION != null) ? tXML_ANNOTATION : (tXML_ANNOTATION = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "XML_ANNOTATION"));
	} 

	//terminal ID:
	//
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal SL_COMMENT:
	//
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
