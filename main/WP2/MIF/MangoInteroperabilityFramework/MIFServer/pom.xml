<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.mango</groupId>
	<artifactId>MIFServer</artifactId>
	<version>${project.parent.version}</version>
	<packaging>war</packaging>

	<name>MIFServer</name>
	<url>http://maven.apache.org</url>

	<parent>
		<artifactId>MangoInteroperabilityFramework</artifactId>
		<groupId>com.mango</groupId>
		<version>0.0.13-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<reporting>
		<outputDirectory>${project.build.directory}/site</outputDirectory>
	</reporting>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<powermock.version>1.4.11</powermock.version>
		<jetty.version>6.1.26</jetty.version>
		<nightly.build.server>http://localhost:8080/manager</nightly.build.server>
		<nightly.build.server.username>jenkins</nightly.build.server.username>
		<nightly.build.server.password>jenkins</nightly.build.server.password>
		<local.dev.server>http://localhost:8080/manager</local.dev.server>
		<local.dev.server.username>jenkins</local.dev.server.username>
		<local.dev.server.password>jenkins</local.dev.server.password>
	</properties>

	<dependencies>

		<dependency>
			<groupId>com.mango</groupId>
			<artifactId>MIFClient</artifactId>
			<version>${project.parent.version}</version>

		</dependency>

		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<version>1.3.7</version>
		</dependency>


		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring-version}</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring-version}</version>
		</dependency>



		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>2.2.2</version>
		</dependency>

		<!-- START SCXML -->
		<dependency>
			<groupId>commons-scxml</groupId>
			<artifactId>commons-scxml</artifactId>
			<version>0.9</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-jexl</groupId>
			<artifactId>commons-jexl</artifactId>
			<version>1.1</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
			<version>2.6.0</version>
		</dependency>
		<!-- END SCXML -->


		<!-- Hibernate START -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>3.3.2.GA</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-annotations</artifactId>
			<version>3.4.0.GA</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.2.128</version>
		</dependency>

		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>1.8.0.10</version>
			<scope>test</scope>
		</dependency>

		<dependency>
         <groupId>javassist</groupId>
         <artifactId>javassist</artifactId>
         <version>3.12.0.GA</version>
      </dependency>



		<!-- Hibernate END -->

		<!-- Local R Connector -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-exec</artifactId>
			<version>1.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>default</id>
			<properties>
				<env>default</env>
				<rHome>${env.R_HOME}</rHome>
				<rScriptLocation>${env.R_HOME}/bin/Rscript.exe</rScriptLocation>
				<mif.shared.location>${project.build.directory}/resourceComponent</mif.shared.location>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>deploy-to-dev-server</id>
			<properties>
				<env>default</env>
				<rHome>${env.R_HOME}</rHome>
				<rScriptLocation>${env.R_HOME}/bin/Rscript.exe</rScriptLocation>
				<mif.shared.location>${project.build.directory}/resourceComponent</mif.shared.location>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<executions>
							<execution>
								<id>cargo-deploy</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>redeploy</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<container>
								<containerId>tomcat6x</containerId>
								<type>remote</type>
							</container>

							<configuration>
								<type>runtime</type>
								<properties>
									<cargo.remote.uri>${local.dev.server}</cargo.remote.uri>
									<cargo.remote.username>${local.dev.server.username}</cargo.remote.username>
									<cargo.remote.password>${local.dev.server.password}</cargo.remote.password>
								</properties>
							</configuration>
							<deployer>
								<type>remote</type>
								<deployables>
									<deployable>
										<groupId>com.mango</groupId>
										<artifactId>MIFServer</artifactId>
										<type>war</type>
									</deployable>
								</deployables>
							</deployer>

						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jenkins</id>
			<properties>
				<env>default</env>
				<rHome>/usr/bin</rHome>
				<rScriptLocation>/usr/bin/Rscript</rScriptLocation>
				<mif.shared.location>${project.build.directory}/resourceComponent</mif.shared.location>
			</properties>
		</profile>
		<profile>
			<id>jenkins-nightly</id>
			<properties>
				<env>default</env>
				<rHome>/usr/bin</rHome>
				<rScriptLocation>/usr/bin/Rscript</rScriptLocation>
				<mif.shared.location>${project.build.directory}/resourceComponent</mif.shared.location>
			</properties>

			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<executions>
							<execution>
								<id>cargo-deploy</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>redeploy</goal>
								</goals>
							</execution>
						</executions>
						<configuration>

							<container>
								<containerId>tomcat6x</containerId>
								<type>remote</type>
							</container>

							<configuration>
								<type>runtime</type>
								<properties>
									<cargo.remote.uri>${nightly.build.server}</cargo.remote.uri>
									<cargo.remote.username>${nightly.build.server.username}</cargo.remote.username>
									<cargo.remote.password>${nightly.build.server.password}</cargo.remote.password>
								</properties>
							</configuration>
							<deployer>
								<type>remote</type>
								<deployables>
									<deployable>
										<groupId>com.mango</groupId>
										<artifactId>MIFServer</artifactId>
										<type>war</type>
									</deployable>
								</deployables>
							</deployer>

						</configuration>
					</plugin>
				</plugins>

			</build>
		</profile>
		<profile>
			<id>custom</id>
			<properties>
				<env>default</env>
			</properties>
		</profile>
		<profile>
			<id>local-dev-integration-tests</id>
			<properties>
				<env>default</env>
			</properties>
			<build>
				<plugins>
				      <plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>properties-maven-plugin</artifactId>
							<version>1.0-alpha-2</version>
							<executions>
								<execution>
									<phase>initialize</phase>
									<goals>
										<goal>read-project-properties</goal>
									</goals>
									<configuration>
										<files>
											<file>local-dev-integration-tests.properties</file>
										</files>
									</configuration>
								</execution>
							</executions>
					      </plugin>
					<plugin>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.6</version>
						<configuration>
							<systemPropertyVariables>
								<rHome>${rHome}</rHome>
								<rCliConnector.rScriptLocation>${rScriptLocation}</rCliConnector.rScriptLocation>
								<mif.shared.location>${mif.shared.location}</mif.shared.location>
								<rSGEConnector.sgeSharedLocation>${rSGEConnector.sgeSharedLocation}</rSGEConnector.sgeSharedLocation>
								<mif.client.userName>${mif.client.userName}</mif.client.userName>
								<mif.client.password>${mif.client.password}</mif.client.password>
							</systemPropertyVariables>
							<includes>
								<include>**/*TestOnServer.java</include>
							</includes>
						</configuration>

						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<executions>
							<execution>
								<id>cargo-deploy</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>redeploy</goal>
								</goals>
							</execution>
						</executions>
						<configuration>

							<container>
								<containerId>tomcat6x</containerId>
								<type>remote</type>
							</container>

							<configuration>
								<type>runtime</type>
								<properties>
									<cargo.remote.uri>${local.dev.server}</cargo.remote.uri>
									<cargo.remote.username>${local.dev.server.username}</cargo.remote.username>
									<cargo.remote.password>${local.dev.server.password}</cargo.remote.password>
								</properties>
							</configuration>
							<deployer>
								<type>remote</type>
								<deployables>
									<deployable>
										<groupId>com.mango</groupId>
										<artifactId>MIFServer</artifactId>
										<type>war</type>
									</deployable>
								</deployables>
							</deployer>

						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.8</version>
						<configuration>
							<systemPropertyVariables>
								<rHome>${rHome}</rHome>
								<rCliConnector.rScriptLocation>${rScriptLocation}</rCliConnector.rScriptLocation>
								<mif.shared.location>${mif.shared.location}</mif.shared.location>
								<rSGEConnector.sgeSharedLocation>${rSGEConnector.sgeSharedLocation}</rSGEConnector.sgeSharedLocation>
								<mif.client.userName>${mif.client.userName}</mif.client.userName>
								<mif.client.password>${mif.client.password}</mif.client.password>
							</systemPropertyVariables>
							<excludes>
								<!-- Have the below line uncommented to run only the integration 
									test and not the unit test -->
								<!--<exclude>**/*Test.java</exclude> -->
								<exclude>**/*TestOnServer.java</exclude>
							</excludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<build>
		<finalName>MIFServer</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>create-resource-component-dir</id>
						<phase>generate-test-resources</phase>
						<configuration>
							<tasks>
								<mkdir dir="${resourceComponentDir}" />
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.3</version>

				<executions>
					<execution>
						<id>copy-default-config</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/config/default</outputDirectory>
							<includeEmptyDirs>true</includeEmptyDirs>
							<resources>
								<resource>
									<directory>${basedir}/src/main/webapp/WEB-INF/classes</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/*.properties</include>
									</includes>
								</resource>
							</resources>
							<!-- specify UTF-8, ISO-8859-1 or any other file encoding -->
							<encoding>UTF-8</encoding>
						</configuration>
					</execution>
					
					<execution>
						<id>copy-environment-specific-config</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/config/</outputDirectory>
							<includeEmptyDirs>true</includeEmptyDirs>
							<resources>
								<resource>
									<directory>${basedir}/src/test/resources/environments</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/*</include>
									</includes>
								</resource>
							</resources>
							<!-- specify UTF-8, ISO-8859-1 or any other file encoding -->
							<encoding>UTF-8</encoding>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<webResources>
						<resource>
							<filtering>false</filtering>
							<directory>${basedir}/src/main/webapp</directory>
							<!-- Keep the below line commented if you want to have the filtering 
								applied to the whole WAR -->
							<!-- <includes> <include>**/*.properties</include> </includes> -->
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<systemPropertyVariables>
						<rHome>${rHome}</rHome>
						<rCliConnector.rScriptLocation>${rScriptLocation}</rCliConnector.rScriptLocation>
						<mif.shared.location>${mif.shared.location}</mif.shared.location>
					</systemPropertyVariables>
					<excludes>
						<!-- Have the below line uncommented to run only the integration test 
							and not the unit test -->
						<!--<exclude>**/*Test.java</exclude> -->
						<exclude>**/*TestOnServer.java</exclude>
						<exclude>**/*RSGE*.java</exclude>
						<exclude>**/SGEE*.java</exclude>
						<exclude>**/JSCH*.java</exclude>
					</excludes>
				</configuration>
			</plugin>

		</plugins>
	</build>
</project>
