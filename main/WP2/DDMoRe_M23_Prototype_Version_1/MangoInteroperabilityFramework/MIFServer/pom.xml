<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.mango</groupId>
    <artifactId>MIFServer</artifactId>
    <version>${project.parent.version}</version>
    <packaging>war</packaging>

    <name>MIFServer</name>
    <url>http://maven.apache.org</url>

    <parent>
        <artifactId>MangoInteroperabilityFramework</artifactId>
        <groupId>com.mango</groupId>
        <version>2.0.4-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <reporting>
        <outputDirectory>${project.build.directory}/site</outputDirectory>
    </reporting>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <powermock.version>1.4.11</powermock.version>
        <jetty.version>6.1.26</jetty.version>
        <nightly.build.server>http://localhost:8080/manager</nightly.build.server>
        <nightly.build.server.username>jenkins</nightly.build.server.username>
        <nightly.build.server.password>jenkins</nightly.build.server.password>
        <local.dev.server>http://localhost:8080/manager</local.dev.server>
        <local.dev.server.username>jenkins</local.dev.server.username>
        <local.dev.server.password>jenkins</local.dev.server.password>
        <web-inf.path>${basedir}/src/main/webapp/WEB-INF</web-inf.path>
        <mvn.mif.runtime.dir>${basedir}/../runtime</mvn.mif.runtime.dir>
    </properties>

    <dependencies>

        <dependency>
            <groupId>com.mango</groupId>
            <artifactId>MIFClient</artifactId>
            <version>${project.parent.version}</version>
        </dependency>
        
        <dependency>
            <groupId>com.mangosolutions.mangopharma</groupId>
            <artifactId>mangopharma</artifactId>
            <version>2.4.4.203</version>
            <exclusions>
            	<exclusion>
            		<artifactId>servlet-api</artifactId>
            		<groupId>javax.servlet</groupId>
            	</exclusion>
            </exclusions>
        </dependency>
    
        <dependency>
            <groupId>com.mango</groupId>
            <artifactId>mangoutils</artifactId>
            <version>2.3.5.20</version>
        </dependency>
        
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>1.3.7</version>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring-version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring-version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring-version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
            <version>${spring-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring-version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring-version}</version>
        </dependency>

        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
            <version>2.2.2</version>
        </dependency>

        <!-- SCXML start -->
        <dependency>
            <groupId>commons-scxml</groupId>
            <artifactId>commons-scxml</artifactId>
            <version>0.9</version>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>commons-jexl</groupId>
            <artifactId>commons-jexl</artifactId>
            <version>1.1</version>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>xalan</groupId>
            <artifactId>xalan</artifactId>
            <version>2.6.0</version>
        </dependency>
        <!-- SCXML end -->
        
 		<!-- Hibernate start -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>3.6.10.Final</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>
        
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-commons-annotations</artifactId>
            <version>3.2.0.Final</version>
            <type>jar</type>
        </dependency>
        
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.0-api</artifactId>
            <version>1.0.1.Final</version>
            <type>jar</type>
        </dependency>
        
        <dependency>
         <groupId>javassist</groupId>
         <artifactId>javassist</artifactId>
         <version>3.12.1.GA</version>
         <scope>runtime</scope>
        </dependency>            
        <!-- Hibernate end -->
        
        <dependency>
         <groupId>commons-math</groupId>
         <artifactId>commons-math</artifactId>
         <version>1.2</version>
        </dependency>
        
        <!-- Database Drivers start -->
         <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.14</version>            
        </dependency>     
        
        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>ojdbc14</artifactId>
            <version>10.2.0.5</version>
            <scope>runtime</scope>
        </dependency>                  

  		<dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.2.128</version>
        </dependency>
                       
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>1.8.0.10</version>
            <scope>test</scope>
        </dependency>        
        <!-- Database Drivers end -->       
      	
      	<dependency>
	        <groupId>c3p0</groupId>
			<artifactId>c3p0</artifactId>
			<version>0.9.1</version>
      	</dependency>

        <!-- Hibernate END -->
        <dependency>
         <groupId>commons-math</groupId>
         <artifactId>commons-math</artifactId>
         <version>1.2</version>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <!-- This is default profile, it performs unit tests and integration tests excluding the onest that depend on SGE -->
            <id>jenkins</id>
            <properties>
                <env>default</env>
                <mif.shared.location.test>${project.build.directory}/testSharedLocation</mif.shared.location.test>
                <mif.working.dir.test>${project.build.directory}/testWorkingDirectory</mif.working.dir.test>
                <mif.alter.client.userName>navplus</mif.alter.client.userName>
                <mif.alter.client.password></mif.alter.client.password>
                <mif.serviceAccount.userName>navplus</mif.serviceAccount.userName>
                <mif.serviceAccount.userPassword></mif.serviceAccount.userPassword>
                <mif.jsch.port>22</mif.jsch.port>
                <mif.commonScriptsDirectory>${web-inf.path}/runtime/scripts/common</mif.commonScriptsDirectory>
                <mif.sgeInitialisationScriptFullPath>${web-inf.path}/runtime/scripts/common/sge.sh</mif.sgeInitialisationScriptFullPath>
                <mif.genericScriptsDirectory>${web-inf.path}/runtime/scripts/generic</mif.genericScriptsDirectory>
                <psnsgeconnector.connectorScriptsDirectory>${web-inf.path}/runtime/scripts/psnsgeconnector</psnsgeconnector.connectorScriptsDirectory>
                <nonmemsgeconnector.connectorScriptsDirectory>${web-inf.path}/runtime/scripts/nonmemsgeconnector</nonmemsgeconnector.connectorScriptsDirectory>
                <skip.unit.tests>false</skip.unit.tests>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <!-- 
            That profile performs:
               1. all unit tests, 
               2. all integration tests (including the SGE-dependent ones), 
               3. deploys MIF using maven cargo plugin to tomcat instance specified by local.dev.server property
               4. performs smoke tests on that instance
             -->
            <id>local-dev-integration-tests</id>
            <properties>
                <env>default</env>
                <mif.shared.location.test>${project.build.directory}/testSharedLocation</mif.shared.location.test>
                <mif.working.dir.test>${project.build.directory}/testWorkingDirectory</mif.working.dir.test>
                <mif.commonScriptsDirectory>${web-inf.path}/runtime/scripts/common</mif.commonScriptsDirectory>
                <mif.genericScriptsDirectory>${web-inf.path}/runtime/scripts/generic</mif.genericScriptsDirectory>
                <psnsgeconnector.connectorScriptsDirectory>${web-inf.path}/runtime/scripts/psnsgeconnector</psnsgeconnector.connectorScriptsDirectory>
                <nonmemsgeconnector.connectorScriptsDirectory>${web-inf.path}/runtime/scripts/nonmemsgeconnector</nonmemsgeconnector.connectorScriptsDirectory>
                <mif.sgeInitialisationScriptFullPath>${web-inf.path}/runtime/scripts/common/sge.sh</mif.sgeInitialisationScriptFullPath>
                <skip.unit.tests>false</skip.unit.tests>
            </properties>
            <build>
                <plugins>
                      <plugin>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>properties-maven-plugin</artifactId>
                            <version>1.0-alpha-2</version>
                            <executions>
                                <execution>
                                    <phase>initialize</phase>
                                    <goals>
                                        <goal>read-project-properties</goal>
                                    </goals>
                                    <configuration>
                                        <files>
                                            <file>local-dev-integration-tests.properties</file>
                                        </files>
                                    </configuration>
                                </execution>
                            </executions>
                          </plugin>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.6</version>
                        <configuration>
                            <systemPropertyVariables>
                                <mif.shared.location>${mif.shared.location}</mif.shared.location>
                                <mif.transportconnector.url>${mif.transportconnector.url}</mif.transportconnector.url>
                                <mif.job.service.location>${mif.job.service.location}</mif.job.service.location>
                                <sgeconnector.sgeSharedLocation>${sgeconnector.sgeSharedLocation}</sgeconnector.sgeSharedLocation>
                                <mif.client.userName>${mif.client.userName}</mif.client.userName>
                                <mif.client.password>${mif.client.password}</mif.client.password>
                                <mif.jsch.port>${mif.jsch.port}</mif.jsch.port>
                                <mif.grid.preamble>${mif.grid.preamble}</mif.grid.preamble>
                                <mif.sge.submissionNodeQueue>${mif.sge.submissionNodeQueue}</mif.sge.submissionNodeQueue>
                                <nonmemExecutable>${nonmemExecutable}</nonmemExecutable>
                                <rExecutable>${rExecutable}</rExecutable>
                                <mif.sge.qsubParameters>${mif.sge.qsubParameters}</mif.sge.qsubParameters>
                                <mif.sgeInitialisationScriptFullPath>${web-inf.path}/runtime/scripts/common/sge.sh</mif.sgeInitialisationScriptFullPath>
                                <mif.runtime.dir>${web-inf.path}/runtime</mif.runtime.dir>
                                <mif.runInRequestDir>${mif.runInRequestDir}</mif.runInRequestDir>
                                <mif.runtime.dir>${mvn.mif.runtime.dir}</mif.runtime.dir>
                            </systemPropertyVariables>
                            <includes>
                                <include>**/*TestOnServer.java</include>
                            </includes>
                        </configuration>

                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>cargo-deploy</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>redeploy</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>

                            <container>
                                <containerId>tomcat6x</containerId>
                                <type>remote</type>
                            </container>

                            <configuration>
                                <type>runtime</type>
                                <properties>
                                    <cargo.remote.uri>${local.dev.server}</cargo.remote.uri>
                                    <cargo.remote.username>${local.dev.server.username}</cargo.remote.username>
                                    <cargo.remote.password>${local.dev.server.password}</cargo.remote.password>
                                </properties>
                            </configuration>
                            <deployer>
                                <type>remote</type>
                                <deployables>
                                    <deployable>
                                        <groupId>com.mango</groupId>
                                        <artifactId>MIFServer</artifactId>
                                        <type>war</type>
                                    </deployable>
                                </deployables>
                            </deployer>

                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.8</version>
                        <configuration>
                            <systemPropertyVariables>
                                <mif.shared.location>${mif.shared.location.test}</mif.shared.location>
                                <mif.working.dir>${mif.working.dir.test}</mif.working.dir>
                                <sgeconnector.sgeSharedLocation>${sgeconnector.sgeSharedLocation}</sgeconnector.sgeSharedLocation>
                                <mif.client.userName>${mif.client.userName}</mif.client.userName>
                                <mif.client.password>${mif.client.password}</mif.client.password>
                                <mif.commonScriptsDirectory>${mif.commonScriptsDirectory}</mif.commonScriptsDirectory>
                                <mif.genericScriptsDirectory>${mif.genericScriptsDirectory}</mif.genericScriptsDirectory>
                                <nonmemsgeconnector.connectorScriptsDirectory>${nonmemsgeconnector.connectorScriptsDirectory}</nonmemsgeconnector.connectorScriptsDirectory>
                                <psnsgeconnector.connectorScriptsDirectory>${psnsgeconnector.connectorScriptsDirectory}</psnsgeconnector.connectorScriptsDirectory>
                                <mif.sge.submissionNodeQueue>${mif.sge.submissionNodeQueue}</mif.sge.submissionNodeQueue>
                                <nonmemExecutable>${nonmemExecutable}</nonmemExecutable>
                                <rExecutable>${rExecutable}</rExecutable>
                                <mif.alter.client.userName>${mif.alter.client.userName}</mif.alter.client.userName>
                                <mif.alter.client.password>${mif.alter.client.password}</mif.alter.client.password>
                                <mif.serviceAccount.userName>navplus</mif.serviceAccount.userName>
                                <mif.serviceAccount.userPassword></mif.serviceAccount.userPassword>
                                <mif.runtime.dir>${mvn.mif.runtime.dir}</mif.runtime.dir>
                                <mif.templatesDirectory>${mvn.mif.runtime.dir}/templates</mif.templatesDirectory>
                            </systemPropertyVariables>
                            <additionalClasspathElements>
                                <additionalClasspathElement>${web-inf.path}</additionalClasspathElement>
                            </additionalClasspathElements>
                            <excludes>
                                <!-- Have the below line uncommented to run only the integration 
                                    test and not the unit test -->
                                <!--<exclude>**/*Test.java</exclude> -->
                                <exclude>**/*TestOnServer.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
    </profiles>
    
    <build>
    	<finalName>MIFServer</finalName>

	    <testResources>
	        <testResource>
	            <directory>${basedir}/src/test/resources</directory>
	            <filtering>true</filtering>
	            <excludes>
	                <!-- excluding the files that are not used in tests -->
	                <exclude>**/outputs/*.phi</exclude>
	                <exclude>**/outputs/*.dta</exclude>
	                <exclude>**/outputs/patab*</exclude>
	                <exclude>**/outputs/sdtab*</exclude>
	                <exclude>**/outputs/*.csv</exclude> 
	                <exclude>**/outputs/PsN_SCM_NON_LIN/scm-non-linear-*/non_linear/backward_scm_dir1/**/*</exclude>
	                <exclude>**/outputs/PsN_SCM_NON_LIN/scm-non-linear-*/non_linear/forward_scm_dir1/**/*</exclude>
	                <exclude>**/outputs/PsN_SCM_NON_LIN/scm-non-linear-*/non_linear/final_models/**/*</exclude>
	                <exclude>**/outputs/PsN_SCM_LIN/scm-linear-*/linear/backward_scm_dir1/**/*</exclude>
	                <exclude>**/outputs/PsN_SCM_LIN/scm-linear-*/linear/forward_scm_dir1/**/*</exclude>
	                <exclude>**/outputs/PsN_SCM_LIN/scm-linear-*/linear/final_models/**/*</exclude>
	                <exclude>**/outputs/PsN_VPC/vpc-*/vpc/m1/**/*</exclude>
	            </excludes>
	        </testResource>
	    </testResources>
                
        <plugins>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>create-resource-component-dir</id>
                        <phase>generate-test-resources</phase>
                        <configuration>
                            <tasks>
                                <mkdir dir="${mif.shared.location.test}" />
                                <mkdir dir="${mif.working.dir.test}" />
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    
                     <!-- This is set in the wrong phase, it needs to run after the maven-war-plugin 'war:exploded' target --> 
                    <execution>
                        <id>chmod-scripts</id>
                        <phase>compile</phase>
                        <configuration>
                            <tasks>
                                <echo message="Chmod runtime scripts..."/>                                
                                <chmod perm="755">
                                    <fileset dir="${basedir}/target">
                                        <include name="**/*.sh" />                                    
                                    </fileset>
                                </chmod>                                                                
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    
                </executions>
            </plugin>	 

            <plugin>            
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>maven-replacer-plugin</artifactId>
                <version>1.3.2</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                    </execution>
                </executions>
            
                <configuration>
                    <includes>
                         <include>src/main/webapp/index.jsp</include>
                         <include>target/MIFServer/WEB-INF/classes/mif-default.properties</include>
                    </includes>
                    <regex>false</regex>
                    
                    <token>PROJECT_VERSION</token>
                    <value>${project.version}</value>
                    
  	                <!-- both provided by Jenkins, will not show up in development -->
                    <token>BUILD_NUMBER</token>
                    <value>${BUILD_NUMBER}</value>
                    
                    <token>SVN_REVISION</token>
                    <value>${SVN_REVISION}</value>
                    
                </configuration>             
            </plugin>
   
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.3</version>

                <executions>
                    <execution>
                        <id>copy-default-config</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/config/default</outputDirectory>
                            <includeEmptyDirs>true</includeEmptyDirs>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/main/webapp/WEB-INF/classes</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>**/*.properties</include>
                                    </includes>
                                </resource>
                            </resources>
                            <!-- specify UTF-8, ISO-8859-1 or any other file encoding -->
                            <encoding>UTF-8</encoding>
                        </configuration>
                    </execution>
                    
                    <execution>
                        <id>copy-environment-specific-config</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/config/</outputDirectory>
                            <includeEmptyDirs>true</includeEmptyDirs>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/test/resources/environments</directory>
                                    <filtering>true</filtering>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                </resource>
                            </resources>
                            <!-- specify UTF-8, ISO-8859-1 or any other file encoding -->
                            <encoding>UTF-8</encoding>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.0.2</version>
                <configuration>
                    <webResources>
                        <resource>
                            <filtering>false</filtering>
                            <directory>${basedir}/src/main/webapp</directory>
                            <!-- Keep the below line commented if you want to have the filtering 
                                applied to the whole WAR -->
                            <!-- <includes> <include>**/*.properties</include> </includes> -->
                        </resource>
                    </webResources>
	                 <archive>
			            <manifest>
			              	<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
	                    </manifest>
						<manifestEntries>
							<Application-Name>${pom.build.finalName}</Application-Name>
							<Application-Version>${pom.version}</Application-Version>
							<Build-Time>${buildNumber}</Build-Time>
							<HudsonBuildNumber>${BUILD_NUMBER}</HudsonBuildNumber>
							<HudsonBuildId>${BUILD_ID}</HudsonBuildId>
							<HudsonJobName>${JOB_NAME}</HudsonJobName>
							<HudsonBuildTag>${BUILD_TAG}</HudsonBuildTag>
							<HudsonJavaHome>${JAVA_HOME}</HudsonJavaHome>
							<HudsonWorkspace>${WORKSPACE}</HudsonWorkspace>
							<HudsonUrl>${HUDSON_URL}</HudsonUrl>
							<HudsonSvnRevision>${SVN_REVISION}</HudsonSvnRevision>
		                </manifestEntries>                 
	                 </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.1</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>

	    <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-eclipse-plugin</artifactId>
	            <version>2.7</version>
	            <configuration>
	                <additionalBuildcommands>
	                    <buildCommand>
	                        <name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
	                        <triggers>auto,full,incremental,</triggers>
	                        <arguments>
	                            <LaunchConfigHandle>&lt;project&gt;./MangoMavenWarBuilder.launch</LaunchConfigHandle>
	                        </arguments>
	                    </buildCommand>
	                </additionalBuildcommands>  
	            </configuration>
	    </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.8</version>
                <configuration>
                    <skipTests>${skip.unit.tests}</skipTests>
                    <additionalClasspathElements>
                            <additionalClasspathElement>${web-inf.path}</additionalClasspathElement>
                    </additionalClasspathElements>
                    <systemPropertyVariables>
                        <mif.shared.location>${mif.shared.location.test}</mif.shared.location>
                        <mif.working.dir>${mif.working.dir.test}</mif.working.dir>
                        <mif.alter.client.userName>${mif.alter.client.userName}</mif.alter.client.userName>
                        <mif.alter.client.password>${mif.alter.client.password}</mif.alter.client.password>
                		<mif.serviceAccount.userName>navplus</mif.serviceAccount.userName>
                		<mif.serviceAccount.userPassword></mif.serviceAccount.userPassword>
                        <mif.jsch.port>${mif.jsch.port}</mif.jsch.port>
                        <mif.commonScriptsDirectory>${mif.commonScriptsDirectory}</mif.commonScriptsDirectory>
                        <mif.genericScriptsDirectory>${mif.genericScriptsDirectory}</mif.genericScriptsDirectory>
                        <psnsgeconnector.connectorScriptsDirectory>${web-inf.path}/runtime/scripts/psnsgeconnector</psnsgeconnector.connectorScriptsDirectory>
                        <nonmemsgeconnector.connectorScriptsDirectory>${web-inf.path}/runtime/scripts/nonmemsgeconnector</nonmemsgeconnector.connectorScriptsDirectory>
                        <mif.runtime.dir>${mvn.mif.runtime.dir}</mif.runtime.dir>
                        <mif.templatesDirectory>${mvn.mif.runtime.dir}/templates</mif.templatesDirectory>
                    </systemPropertyVariables>
                    <excludes>
                        <!-- Have the below line uncommented to run only the integration test 
                            and not the unit test -->
                        <!--<exclude>**/*Test.java</exclude> -->
                        <exclude>**/*TestOnServer.java</exclude>
                        <exclude>**/*SGE*.java</exclude>
                        <exclude>**/JSCH*.java</exclude>
                        <exclude>**/*TemplateTest.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <descriptors>
                        <descriptor>${basedir}/src/main/assembly/assembly.xml</descriptor>
                    </descriptors>
	                 <archive>
			            <manifest>
			              	<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
	                    </manifest>
						<manifestEntries>
							<Application-Name>${pom.build.finalName}</Application-Name>
							<Application-Version>${pom.version}</Application-Version>
							<Build-Time>${buildNumber}</Build-Time>
							<HudsonBuildNumber>${BUILD_NUMBER}</HudsonBuildNumber>
							<HudsonBuildId>${BUILD_ID}</HudsonBuildId>
							<HudsonJobName>${JOB_NAME}</HudsonJobName>
							<HudsonBuildTag>${BUILD_TAG}</HudsonBuildTag>
							<HudsonJavaHome>${JAVA_HOME}</HudsonJavaHome>
							<HudsonWorkspace>${WORKSPACE}</HudsonWorkspace>
							<HudsonUrl>${HUDSON_URL}</HudsonUrl>
							<HudsonSvnRevision>${SVN_REVISION}</HudsonSvnRevision>
		                </manifestEntries>                 
	                 </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id> <!-- this is used for inheritance merges -->
                        <phase>package</phase> <!-- bind to the packaging phase -->
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
  	    <plugin>
    		<groupId>org.codehaus.mojo</groupId>
    		<artifactId>sysdeo-tomcat-maven-plugin</artifactId>
    		<version>1.1</version>
  	    </plugin>

        </plugins>
    </build>
    
</project>
