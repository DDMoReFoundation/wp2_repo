\newglossaryentry{system}
{
  name = {system},
  description = {A system, in the context of this document, is typically a software application. In software engineering, a system is characterised by having a set of defined interface through which it interacts with its external environment} 
}

\newglossaryentry{model}
{ 
  name = {model},
  description = {A mathematical description that is used to describe a \gls{system} and its associated data, metadata and annotations. This description can be used to simulate the system under a set of given conditions. In \ddmore{}, such models are encoded in a machine readable format (\gls{MML}) and are typically used in drug development}
}

\newglossaryentry{revision}
{
	name = {revision},
	description = {A snapshot of a model at a given point in time}
}

\newglossaryentry{published model}
{
  name = {published model},
  description = {A model which has been released and is available publicly} 
}

\newglossaryentry{unpublished model}
{
  name = {unpublished model},
  description = {A model which is under development and is not publicly-available} 
}

\newglossaryentry{audit trail}
{
	name = {audit trail},
	description = {A chronological list of entries describing the events which happened in the Repository. Entries contain the action that was performed, along with the user that initiated it and the date and time of the event}
}

\newglossaryentry{metadata}
{
	name = {metadata},
	description = {Relevant additional information attached to (or included in) a \gls{model}. This can include information coming from third party data resources, cross-references to related data records (such as controlled vocabulary terms or database entries), the literature, ... This generally describes the context or the meaning of a model or its components, and is sometimes called \textit{annotation}}
}

\newglossaryentry{actor}
{ 
  name = {actor},
  description = {In the context of software requirements analysis this represents a person or a software tool who interacts with the system}
}

\newglossaryentry{process}
{
  name = {process},
  description = {A continuous and regular action or succession of actions occurring or performed in a definite manner, and having a particular result or outcome} 
}

\newglossaryentry{feature}
{
  name = {feature},
  description = {A description of some functionality that will be part of the implemented system}
}

\newglossaryentry{usecase}
{
  name = {use case},
  description = {A collection of steps that an \gls{actor} may undertake while interacting with the system in order to achieve a given task}
}

\newglossaryentry{subsystem}
{
  name = {subsystem},
  description = {A component of a larger system. A susbsystem is characterised by having a defined interface through which it interacts with the larger system and its external environment}
}

\newglossaryentry{functionalRequirement}
{
	name = {functional requirement},
	description = {A piece of functionality that must be performed by the system}
}

\newglossaryentry{nonFunctionalRequirement}
{
	name = {non-functional requirement},
	description = {A criterion or set of criteria that is used to measure how well a \gls{functionalRequirement} is performed by the system. Non-functional requirements typically relate to security, speed, cost or reliability}
}

\newglossaryentry{MML}
{
  name = {MML},
  description = {Acronym used within \ddmore{} for the Modelling Markup Language (MML). This is the data representation and associated standard specification that enables the exchange of models between software applications within \ddmore{}. The MML aims to ensure fidelity between applications writing and reading MML. The MML is to be specified in detail and may actually consist of a family of related model exchange standards (e.g.\, SBML~\cite{sbml}, CellML~\cite{cellml} or SedML~\cite{sedml}) and \ddmore{} specific standard} 
}

