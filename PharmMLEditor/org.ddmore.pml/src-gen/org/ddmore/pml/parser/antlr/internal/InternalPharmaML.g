/*
* generated by Xtext
*/
grammar InternalPharmaML;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.ddmore.pml.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.ddmore.pml.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.ddmore.pml.services.PharmaMLGrammarAccess;

}

@parser::members {

 	private PharmaMLGrammarAccess grammarAccess;
 	
    public InternalPharmaMLParser(TokenStream input, PharmaMLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Mml_PharmaML";	
   	}
   	
   	@Override
   	protected PharmaMLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleMml_PharmaML
entryRuleMml_PharmaML returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_XML_ANNOTATION");
	}
	:
	{ newCompositeNode(grammarAccess.getMml_PharmaMLRule()); }
	 iv_ruleMml_PharmaML=ruleMml_PharmaML 
	 { $current=$iv_ruleMml_PharmaML.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Mml_PharmaML
ruleMml_PharmaML returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_ML_COMMENT", "RULE_XML_ANNOTATION");
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMml_PharmaMLAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='PharmML' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMml_PharmaMLAccess().getPharmMLKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_PharmaMLAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_PharmaMLRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_PharmaMLAccess().getNameCt_NameParserRuleCall_3_0()); 
	    }
		lv_Name_3_0=rulect_Name		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_PharmaMLRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_3_0, 
        		"ct_Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_PharmaMLAccess().getIndependentVarCt_independentVarParserRuleCall_4_0()); 
	    }
		lv_IndependentVar_4_0=rulect_independentVar		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_PharmaMLRule());
	        }
       		set(
       			$current, 
       			"IndependentVar",
        		lv_IndependentVar_4_0, 
        		"ct_independentVar");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_PharmaMLAccess().getWrittenVersionCt_writtenVersionParserRuleCall_5_0()); 
	    }
		lv_writtenVersion_5_0=rulect_writtenVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_PharmaMLRule());
	        }
       		set(
       			$current, 
       			"writtenVersion",
        		lv_writtenVersion_5_0, 
        		"ct_writtenVersion");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMml_PharmaMLAccess().getTAG_CLOSEParserRuleCall_6()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_PharmaMLAccess().getSymbolDefinitionMml_SymbolDefinitionTypeParserRuleCall_7_0()); 
	    }
		lv_SymbolDefinition_7_0=ruleMml_SymbolDefinitionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_PharmaMLRule());
	        }
       		add(
       			$current, 
       			"SymbolDefinition",
        		lv_SymbolDefinition_7_0, 
        		"Mml_SymbolDefinitionType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_PharmaMLAccess().getStructuralModelMdef_StructuralModelTypeParserRuleCall_8_0()); 
	    }
		lv_StructuralModel_8_0=rulemdef_StructuralModelType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_PharmaMLRule());
	        }
       		add(
       			$current, 
       			"StructuralModel",
        		lv_StructuralModel_8_0, 
        		"mdef_StructuralModelType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_PharmaMLAccess().getModelDefinitionMdef_ModelDefinitionTypeParserRuleCall_9_0()); 
	    }
		lv_ModelDefinition_9_0=rulemdef_ModelDefinitionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_PharmaMLRule());
	        }
       		add(
       			$current, 
       			"ModelDefinition",
        		lv_ModelDefinition_9_0, 
        		"mdef_ModelDefinitionType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_PharmaMLAccess().getDesignDesign_TrialDesignTypeParserRuleCall_10_0()); 
	    }
		lv_Design_10_0=ruledesign_TrialDesignType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_PharmaMLRule());
	        }
       		set(
       			$current, 
       			"Design",
        		lv_Design_10_0, 
        		"design_TrialDesignType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_PharmaMLAccess().getModelingStepsMsteps_ModelingStepsParserRuleCall_11_0()); 
	    }
		lv_ModelingSteps_11_0=rulemsteps_ModelingSteps		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_PharmaMLRule());
	        }
       		set(
       			$current, 
       			"ModelingSteps",
        		lv_ModelingSteps_11_0, 
        		"msteps_ModelingSteps");
	        afterParserOrEnumRuleCall();
	    }

)
)?
    { 
        newCompositeNode(grammarAccess.getMml_PharmaMLAccess().getTAG_OPEN2ParserRuleCall_12()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_13='PharmML' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getMml_PharmaMLAccess().getPharmMLKeyword_13());
    }

    { 
        newCompositeNode(grammarAccess.getMml_PharmaMLAccess().getTAG_CLOSEParserRuleCall_14()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleMml_SymbolDefinitionType
entryRuleMml_SymbolDefinitionType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMml_SymbolDefinitionTypeRule()); }
	 iv_ruleMml_SymbolDefinitionType=ruleMml_SymbolDefinitionType 
	 { $current=$iv_ruleMml_SymbolDefinitionType.current; } 
	 EOF 
;

// Rule Mml_SymbolDefinitionType
ruleMml_SymbolDefinitionType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMml_SymbolDefinitionTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='SymbolDefinition' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMml_SymbolDefinitionTypeAccess().getSymbolDefinitionKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_SymbolDefinitionTypeAccess().getSymbIdCt_symbIdParserRuleCall_2_0()); 
	    }
		lv_symbId_2_0=rulect_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_SymbolDefinitionTypeRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_2_0, 
        		"ct_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_SymbolDefinitionTypeAccess().getSymbolTypeCt_symbolTypeParserRuleCall_3_0()); 
	    }
		lv_symbolType_3_0=rulect_symbolType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_SymbolDefinitionTypeRule());
	        }
       		set(
       			$current, 
       			"symbolType",
        		lv_symbolType_3_0, 
        		"ct_symbolType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_SymbolDefinitionTypeAccess().getNameCt_NameParserRuleCall_4_0()); 
	    }
		lv_Name_4_0=rulect_Name		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_SymbolDefinitionTypeRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_4_0, 
        		"ct_Name");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_SymbolDefinitionTypeAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_SymbolDefinitionTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMml_SymbolDefinitionTypeAccess().getTAG_CLOSEParserRuleCall_6()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_SymbolDefinitionTypeAccess().getDescriptionCt_AnnotationTypeParserRuleCall_7_0()); 
	    }
		lv_Description_7_0=rulect_AnnotationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_SymbolDefinitionTypeRule());
	        }
       		set(
       			$current, 
       			"Description",
        		lv_Description_7_0, 
        		"ct_AnnotationType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_SymbolDefinitionTypeAccess().getFunctionDefinitionMml_FunctionDefinitionTypeParserRuleCall_8_0()); 
	    }
		lv_FunctionDefinition_8_0=ruleMml_FunctionDefinitionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_SymbolDefinitionTypeRule());
	        }
       		set(
       			$current, 
       			"FunctionDefinition",
        		lv_FunctionDefinition_8_0, 
        		"Mml_FunctionDefinitionType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMml_SymbolDefinitionTypeAccess().getTAG_OPEN2ParserRuleCall_9()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_10='SymbolDefinition' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMml_SymbolDefinitionTypeAccess().getSymbolDefinitionKeyword_10());
    }

    { 
        newCompositeNode(grammarAccess.getMml_SymbolDefinitionTypeAccess().getTAG_CLOSEParserRuleCall_11()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMml_FunctionDefinitionType
entryRuleMml_FunctionDefinitionType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMml_FunctionDefinitionTypeRule()); }
	 iv_ruleMml_FunctionDefinitionType=ruleMml_FunctionDefinitionType 
	 { $current=$iv_ruleMml_FunctionDefinitionType.current; } 
	 EOF 
;

// Rule Mml_FunctionDefinitionType
ruleMml_FunctionDefinitionType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMml_FunctionDefinitionTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='FunctionDefinition' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMml_FunctionDefinitionTypeAccess().getFunctionDefinitionKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_FunctionDefinitionTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_FunctionDefinitionTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMml_FunctionDefinitionTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_FunctionDefinitionTypeAccess().getFunctionArgumentsMml_FuncParameterDefinitionTypeParserRuleCall_4_0()); 
	    }
		lv_FunctionArguments_4_0=ruleMml_FuncParameterDefinitionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_FunctionDefinitionTypeRule());
	        }
       		add(
       			$current, 
       			"FunctionArguments",
        		lv_FunctionArguments_4_0, 
        		"Mml_FuncParameterDefinitionType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_FunctionDefinitionTypeAccess().getDefinitionCt_DefinitionRhsTypeParserRuleCall_5_0()); 
	    }
		lv_Definition_5_0=rulect_DefinitionRhsType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_FunctionDefinitionTypeRule());
	        }
       		set(
       			$current, 
       			"Definition",
        		lv_Definition_5_0, 
        		"ct_DefinitionRhsType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMml_FunctionDefinitionTypeAccess().getTAG_OPEN2ParserRuleCall_6()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='FunctionDefinition' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMml_FunctionDefinitionTypeAccess().getFunctionDefinitionKeyword_7());
    }

    { 
        newCompositeNode(grammarAccess.getMml_FunctionDefinitionTypeAccess().getTAG_CLOSEParserRuleCall_8()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMml_FuncParameterDefinitionType
entryRuleMml_FuncParameterDefinitionType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMml_FuncParameterDefinitionTypeRule()); }
	 iv_ruleMml_FuncParameterDefinitionType=ruleMml_FuncParameterDefinitionType 
	 { $current=$iv_ruleMml_FuncParameterDefinitionType.current; } 
	 EOF 
;

// Rule Mml_FuncParameterDefinitionType
ruleMml_FuncParameterDefinitionType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMml_FuncParameterDefinitionTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='FunctionArgument' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMml_FuncParameterDefinitionTypeAccess().getFunctionArgumentKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_FuncParameterDefinitionTypeAccess().getSumbIdCt_symbIdParserRuleCall_2_0()); 
	    }
		lv_sumbId_2_0=rulect_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_FuncParameterDefinitionTypeRule());
	        }
       		set(
       			$current, 
       			"sumbId",
        		lv_sumbId_2_0, 
        		"ct_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_FuncParameterDefinitionTypeAccess().getSymbolTypeCt_symbolTypeParserRuleCall_3_0()); 
	    }
		lv_symbolType_3_0=rulect_symbolType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_FuncParameterDefinitionTypeRule());
	        }
       		set(
       			$current, 
       			"symbolType",
        		lv_symbolType_3_0, 
        		"ct_symbolType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_FuncParameterDefinitionTypeAccess().getXmlnsCt_xmlnsParserRuleCall_4_0()); 
	    }
		lv_xmlns_4_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_FuncParameterDefinitionTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_4_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getMml_FuncParameterDefinitionTypeAccess().getTAG_CLOSE2ParserRuleCall_5_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getMml_FuncParameterDefinitionTypeAccess().getTAG_CLOSEParserRuleCall_5_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMml_FuncParameterDefinitionTypeAccess().getDecsriptionCt_AnnotationTypeParserRuleCall_5_1_1_0()); 
	    }
		lv_Decsription_7_0=rulect_AnnotationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMml_FuncParameterDefinitionTypeRule());
	        }
       		set(
       			$current, 
       			"Decsription",
        		lv_Decsription_7_0, 
        		"ct_AnnotationType");
	        afterParserOrEnumRuleCall();
	    }

)
)?
    { 
        newCompositeNode(grammarAccess.getMml_FuncParameterDefinitionTypeAccess().getTAG_OPEN2ParserRuleCall_5_1_2()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9='FunctionArgument' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMml_FuncParameterDefinitionTypeAccess().getFunctionArgumentKeyword_5_1_3());
    }

    { 
        newCompositeNode(grammarAccess.getMml_FuncParameterDefinitionTypeAccess().getTAG_CLOSEParserRuleCall_5_1_4()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRuleMath_EquationType
entryRuleMath_EquationType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_EquationTypeRule()); }
	 iv_ruleMath_EquationType=ruleMath_EquationType 
	 { $current=$iv_ruleMath_EquationType.current; } 
	 EOF 
;

// Rule Math_EquationType
ruleMath_EquationType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMath_EquationTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Equation' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMath_EquationTypeAccess().getEquationKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_EquationTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_EquationTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_EquationTypeAccess().getWrittenVersionCt_writtenVersionParserRuleCall_3_0()); 
	    }
		lv_writtenVersion_3_0=rulect_writtenVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_EquationTypeRule());
	        }
       		set(
       			$current, 
       			"writtenVersion",
        		lv_writtenVersion_3_0, 
        		"ct_writtenVersion");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMath_EquationTypeAccess().getTAG_CLOSEParserRuleCall_4()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_EquationTypeAccess().getExprMath_EquationTypeContentParserRuleCall_5_0()); 
	    }
		lv_Expr_5_0=ruleMath_EquationTypeContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_EquationTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_5_0, 
        		"Math_EquationTypeContent");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMath_EquationTypeAccess().getTAG_OPEN2ParserRuleCall_6()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='Equation' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMath_EquationTypeAccess().getEquationKeyword_7());
    }

    { 
        newCompositeNode(grammarAccess.getMath_EquationTypeAccess().getTAG_CLOSEParserRuleCall_8()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMath_EquationTypeContent
entryRuleMath_EquationTypeContent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_EquationTypeContentRule()); }
	 iv_ruleMath_EquationTypeContent=ruleMath_EquationTypeContent 
	 { $current=$iv_ruleMath_EquationTypeContent.current; } 
	 EOF 
;

// Rule Math_EquationTypeContent
ruleMath_EquationTypeContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMath_EquationTypeContentAccess().getScalarMath_ScalarTypeParserRuleCall_0_0()); 
	    }
		lv_Scalar_0_0=ruleMath_ScalarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_EquationTypeContentRule());
	        }
       		set(
       			$current, 
       			"Scalar",
        		lv_Scalar_0_0, 
        		"Math_ScalarType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_EquationTypeContentAccess().getVarMath_VarTypeParserRuleCall_1_0()); 
	    }
		lv_Var_1_0=ruleMath_VarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_EquationTypeContentRule());
	        }
       		set(
       			$current, 
       			"Var",
        		lv_Var_1_0, 
        		"Math_VarType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_EquationTypeContentAccess().getBinopMath_BinopTypeParserRuleCall_2_0()); 
	    }
		lv_Binop_2_0=ruleMath_BinopType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_EquationTypeContentRule());
	        }
       		set(
       			$current, 
       			"Binop",
        		lv_Binop_2_0, 
        		"Math_BinopType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_EquationTypeContentAccess().getUniopMath_UniopTypeParserRuleCall_3_0()); 
	    }
		lv_Uniop_3_0=ruleMath_UniopType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_EquationTypeContentRule());
	        }
       		set(
       			$current, 
       			"Uniop",
        		lv_Uniop_3_0, 
        		"Math_UniopType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_EquationTypeContentAccess().getPiecewiseMath_PiecewiseTypeParserRuleCall_4_0()); 
	    }
		lv_Piecewise_4_0=ruleMath_PiecewiseType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_EquationTypeContentRule());
	        }
       		set(
       			$current, 
       			"Piecewise",
        		lv_Piecewise_4_0, 
        		"Math_PiecewiseType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMath_ScalarType
entryRuleMath_ScalarType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_ScalarTypeRule()); }
	 iv_ruleMath_ScalarType=ruleMath_ScalarType 
	 { $current=$iv_ruleMath_ScalarType.current; } 
	 EOF 
;

// Rule Math_ScalarType
ruleMath_ScalarType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMath_ScalarTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Scalar' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMath_ScalarTypeAccess().getScalarKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_ScalarTypeAccess().getValueCt_Decimal_ValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=rulect_Decimal_Value		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_ScalarTypeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"ct_Decimal_Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_ScalarTypeAccess().getXmlnsCt_xmlnsParserRuleCall_3_0()); 
	    }
		lv_xmlns_3_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_ScalarTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_3_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getMath_ScalarTypeAccess().getTAG_CLOSE2ParserRuleCall_4_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getMath_ScalarTypeAccess().getTAG_CLOSEParserRuleCall_4_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getMath_ScalarTypeAccess().getTAG_OPEN2ParserRuleCall_4_1_1()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='Scalar' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMath_ScalarTypeAccess().getScalarKeyword_4_1_2());
    }

    { 
        newCompositeNode(grammarAccess.getMath_ScalarTypeAccess().getTAG_CLOSEParserRuleCall_4_1_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRuleMath_VarType
entryRuleMath_VarType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_VarTypeRule()); }
	 iv_ruleMath_VarType=ruleMath_VarType 
	 { $current=$iv_ruleMath_VarType.current; } 
	 EOF 
;

// Rule Math_VarType
ruleMath_VarType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMath_VarTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Var' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMath_VarTypeAccess().getVarKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_VarTypeAccess().getBlockMath_blockParserRuleCall_2_0()); 
	    }
		lv_block_2_0=ruleMath_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_VarTypeRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_2_0, 
        		"Math_block");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_VarTypeAccess().getSymbIdMath_symbIdParserRuleCall_3_0()); 
	    }
		lv_symbId_3_0=ruleMath_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_VarTypeRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_3_0, 
        		"Math_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_VarTypeAccess().getXmlnsCt_xmlnsParserRuleCall_4_0()); 
	    }
		lv_xmlns_4_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_VarTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_4_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getMath_VarTypeAccess().getTAG_CLOSE2ParserRuleCall_5_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getMath_VarTypeAccess().getTAG_CLOSEParserRuleCall_5_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getMath_VarTypeAccess().getTAG_OPEN2ParserRuleCall_5_1_1()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_8='Var' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMath_VarTypeAccess().getVarKeyword_5_1_2());
    }

    { 
        newCompositeNode(grammarAccess.getMath_VarTypeAccess().getTAG_CLOSEParserRuleCall_5_1_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRuleMath_BinopType
entryRuleMath_BinopType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_BinopTypeRule()); }
	 iv_ruleMath_BinopType=ruleMath_BinopType 
	 { $current=$iv_ruleMath_BinopType.current; } 
	 EOF 
;

// Rule Math_BinopType
ruleMath_BinopType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMath_BinopTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Binop' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMath_BinopTypeAccess().getBinopKeyword_1());
    }
	otherlv_2='op' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMath_BinopTypeAccess().getOpKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMath_BinopTypeAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_BinopTypeAccess().getOpMath_BinopNameParserRuleCall_4_0()); 
	    }
		lv_op_4_0=ruleMath_BinopName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_BinopTypeRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_4_0, 
        		"Math_BinopName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_BinopTypeAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_BinopTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMath_BinopTypeAccess().getTAG_CLOSEParserRuleCall_6()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_BinopTypeAccess().getLeftExprMath_ExprTypeParserRuleCall_7_0()); 
	    }
		lv_LeftExpr_7_0=ruleMath_ExprType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_BinopTypeRule());
	        }
       		set(
       			$current, 
       			"LeftExpr",
        		lv_LeftExpr_7_0, 
        		"Math_ExprType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_BinopTypeAccess().getRightExprMath_ExprTypeParserRuleCall_8_0()); 
	    }
		lv_RightExpr_8_0=ruleMath_ExprType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_BinopTypeRule());
	        }
       		set(
       			$current, 
       			"RightExpr",
        		lv_RightExpr_8_0, 
        		"Math_ExprType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMath_BinopTypeAccess().getTAG_OPEN2ParserRuleCall_9()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_10='Binop' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMath_BinopTypeAccess().getBinopKeyword_10());
    }

    { 
        newCompositeNode(grammarAccess.getMath_BinopTypeAccess().getTAG_CLOSEParserRuleCall_11()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMath_UniopType
entryRuleMath_UniopType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_UniopTypeRule()); }
	 iv_ruleMath_UniopType=ruleMath_UniopType 
	 { $current=$iv_ruleMath_UniopType.current; } 
	 EOF 
;

// Rule Math_UniopType
ruleMath_UniopType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMath_UniopTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Uniop' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMath_UniopTypeAccess().getUniopKeyword_1());
    }
	otherlv_2='op' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMath_UniopTypeAccess().getOpKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMath_UniopTypeAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_UniopTypeAccess().getOpMath_UniopNameParserRuleCall_4_0()); 
	    }
		lv_op_4_0=ruleMath_UniopName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_UniopTypeRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_4_0, 
        		"Math_UniopName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_UniopTypeAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_UniopTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMath_UniopTypeAccess().getTAG_CLOSEParserRuleCall_6()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_UniopTypeAccess().getExprMath_ExprTypeParserRuleCall_7_0()); 
	    }
		lv_Expr_7_0=ruleMath_ExprType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_UniopTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_7_0, 
        		"Math_ExprType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMath_UniopTypeAccess().getTAG_OPEN2ParserRuleCall_8()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9='Uniop' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMath_UniopTypeAccess().getUniopKeyword_9());
    }

    { 
        newCompositeNode(grammarAccess.getMath_UniopTypeAccess().getTAG_CLOSEParserRuleCall_10()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMath_ExprType
entryRuleMath_ExprType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_ExprTypeRule()); }
	 iv_ruleMath_ExprType=ruleMath_ExprType 
	 { $current=$iv_ruleMath_ExprType.current; } 
	 EOF 
;

// Rule Math_ExprType
ruleMath_ExprType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMath_ExprTypeAccess().getScalarMath_ScalarTypeParserRuleCall_0_0()); 
	    }
		lv_Scalar_0_0=ruleMath_ScalarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_ExprTypeRule());
	        }
       		set(
       			$current, 
       			"Scalar",
        		lv_Scalar_0_0, 
        		"Math_ScalarType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_ExprTypeAccess().getVarMath_VarTypeParserRuleCall_1_0()); 
	    }
		lv_Var_1_0=ruleMath_VarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_ExprTypeRule());
	        }
       		set(
       			$current, 
       			"Var",
        		lv_Var_1_0, 
        		"Math_VarType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_ExprTypeAccess().getUniopMath_UniopTypeParserRuleCall_2_0()); 
	    }
		lv_Uniop_2_0=ruleMath_UniopType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_ExprTypeRule());
	        }
       		set(
       			$current, 
       			"Uniop",
        		lv_Uniop_2_0, 
        		"Math_UniopType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_ExprTypeAccess().getBinopMath_BinopTypeParserRuleCall_3_0()); 
	    }
		lv_Binop_3_0=ruleMath_BinopType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_ExprTypeRule());
	        }
       		set(
       			$current, 
       			"Binop",
        		lv_Binop_3_0, 
        		"Math_BinopType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_ExprTypeAccess().getConstantMath_ConstantTypeParserRuleCall_4_0()); 
	    }
		lv_Constant_4_0=ruleMath_ConstantType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_ExprTypeRule());
	        }
       		set(
       			$current, 
       			"Constant",
        		lv_Constant_4_0, 
        		"Math_ConstantType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_ExprTypeAccess().getFunctionCallMath_FunctionCallTypeParserRuleCall_5_0()); 
	    }
		lv_FunctionCall_5_0=ruleMath_FunctionCallType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_ExprTypeRule());
	        }
       		set(
       			$current, 
       			"FunctionCall",
        		lv_FunctionCall_5_0, 
        		"Math_FunctionCallType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMath_ConstantType
entryRuleMath_ConstantType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_ConstantTypeRule()); }
	 iv_ruleMath_ConstantType=ruleMath_ConstantType 
	 { $current=$iv_ruleMath_ConstantType.current; } 
	 EOF 
;

// Rule Math_ConstantType
ruleMath_ConstantType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMath_ConstantTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Constant' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMath_ConstantTypeAccess().getConstantKeyword_1());
    }
	otherlv_2='op' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMath_ConstantTypeAccess().getOpKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMath_ConstantTypeAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_ConstantTypeAccess().getOpMath_ConstantNameParserRuleCall_4_0()); 
	    }
		lv_op_4_0=ruleMath_ConstantName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_ConstantTypeRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_4_0, 
        		"Math_ConstantName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_ConstantTypeAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_ConstantTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getMath_ConstantTypeAccess().getTAG_CLOSE2ParserRuleCall_6_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getMath_ConstantTypeAccess().getTAG_CLOSEParserRuleCall_6_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getMath_ConstantTypeAccess().getTAG_OPEN2ParserRuleCall_6_1_1()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9='Constant' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMath_ConstantTypeAccess().getConstantKeyword_6_1_2());
    }

    { 
        newCompositeNode(grammarAccess.getMath_ConstantTypeAccess().getTAG_CLOSEParserRuleCall_6_1_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRuleMath_FunctionCallType
entryRuleMath_FunctionCallType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_FunctionCallTypeRule()); }
	 iv_ruleMath_FunctionCallType=ruleMath_FunctionCallType 
	 { $current=$iv_ruleMath_FunctionCallType.current; } 
	 EOF 
;

// Rule Math_FunctionCallType
ruleMath_FunctionCallType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMath_FunctionCallTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='FunctionCall' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMath_FunctionCallTypeAccess().getFunctionCallKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_FunctionCallTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_FunctionCallTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMath_FunctionCallTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_FunctionCallTypeAccess().getFunctionNameMath_VarTypeParserRuleCall_4_0()); 
	    }
		lv_FunctionName_4_0=ruleMath_VarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_FunctionCallTypeRule());
	        }
       		set(
       			$current, 
       			"FunctionName",
        		lv_FunctionName_4_0, 
        		"Math_VarType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_FunctionCallTypeAccess().getFunctionArgumentsMath_FunctionArgumentTypeParserRuleCall_5_0()); 
	    }
		lv_FunctionArguments_5_0=ruleMath_FunctionArgumentType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_FunctionCallTypeRule());
	        }
       		add(
       			$current, 
       			"FunctionArguments",
        		lv_FunctionArguments_5_0, 
        		"Math_FunctionArgumentType");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMath_FunctionCallTypeAccess().getTAG_OPEN2ParserRuleCall_6()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='FunctionCall' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMath_FunctionCallTypeAccess().getFunctionCallKeyword_7());
    }

    { 
        newCompositeNode(grammarAccess.getMath_FunctionCallTypeAccess().getTAG_CLOSEParserRuleCall_8()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMath_FunctionArgumentType
entryRuleMath_FunctionArgumentType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_FunctionArgumentTypeRule()); }
	 iv_ruleMath_FunctionArgumentType=ruleMath_FunctionArgumentType 
	 { $current=$iv_ruleMath_FunctionArgumentType.current; } 
	 EOF 
;

// Rule Math_FunctionArgumentType
ruleMath_FunctionArgumentType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMath_FunctionArgumentTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='FunctionArgument' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMath_FunctionArgumentTypeAccess().getFunctionArgumentKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_FunctionArgumentTypeAccess().getSymbIdMath_symbIdParserRuleCall_2_0()); 
	    }
		lv_symbId_2_0=ruleMath_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_FunctionArgumentTypeRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_2_0, 
        		"Math_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_FunctionArgumentTypeAccess().getXmlnsCt_xmlnsParserRuleCall_3_0()); 
	    }
		lv_xmlns_3_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_FunctionArgumentTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_3_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMath_FunctionArgumentTypeAccess().getTAG_CLOSEParserRuleCall_4()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_FunctionArgumentTypeAccess().getExprMath_FuncExprTypeParserRuleCall_5_0()); 
	    }
		lv_Expr_5_0=ruleMath_FuncExprType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_FunctionArgumentTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_5_0, 
        		"Math_FuncExprType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMath_FunctionArgumentTypeAccess().getTAG_OPEN2ParserRuleCall_6()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='FunctionArgument' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMath_FunctionArgumentTypeAccess().getFunctionArgumentKeyword_7());
    }

    { 
        newCompositeNode(grammarAccess.getMath_FunctionArgumentTypeAccess().getTAG_CLOSEParserRuleCall_8()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMath_FuncExprType
entryRuleMath_FuncExprType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_FuncExprTypeRule()); }
	 iv_ruleMath_FuncExprType=ruleMath_FuncExprType 
	 { $current=$iv_ruleMath_FuncExprType.current; } 
	 EOF 
;

// Rule Math_FuncExprType
ruleMath_FuncExprType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMath_FuncExprTypeAccess().getEquationMath_EquationTypeParserRuleCall_0_0()); 
	    }
		lv_Equation_0_0=ruleMath_EquationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_FuncExprTypeRule());
	        }
       		set(
       			$current, 
       			"Equation",
        		lv_Equation_0_0, 
        		"Math_EquationType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_FuncExprTypeAccess().getScalarMath_ScalarTypeParserRuleCall_1_0()); 
	    }
		lv_Scalar_1_0=ruleMath_ScalarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_FuncExprTypeRule());
	        }
       		set(
       			$current, 
       			"Scalar",
        		lv_Scalar_1_0, 
        		"Math_ScalarType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_FuncExprTypeAccess().getConstantMath_ConstantTypeParserRuleCall_2_0()); 
	    }
		lv_Constant_2_0=ruleMath_ConstantType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_FuncExprTypeRule());
	        }
       		set(
       			$current, 
       			"Constant",
        		lv_Constant_2_0, 
        		"Math_ConstantType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_FuncExprTypeAccess().getVarMath_VarTypeParserRuleCall_3_0()); 
	    }
		lv_Var_3_0=ruleMath_VarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_FuncExprTypeRule());
	        }
       		set(
       			$current, 
       			"Var",
        		lv_Var_3_0, 
        		"Math_VarType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMath_PiecewiseType
entryRuleMath_PiecewiseType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_PiecewiseTypeRule()); }
	 iv_ruleMath_PiecewiseType=ruleMath_PiecewiseType 
	 { $current=$iv_ruleMath_PiecewiseType.current; } 
	 EOF 
;

// Rule Math_PiecewiseType
ruleMath_PiecewiseType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMath_PiecewiseTypeAccess().getMath_PiecewiseTypeAction_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getMath_PiecewiseTypeAccess().getTAG_OPENParserRuleCall_1()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='Piecewise' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMath_PiecewiseTypeAccess().getPiecewiseKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_PiecewiseTypeAccess().getXmlnsCt_xmlnsParserRuleCall_3_0()); 
	    }
		lv_xmlns_3_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_PiecewiseTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_3_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMath_PiecewiseTypeAccess().getTAG_CLOSEParserRuleCall_4()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_PiecewiseTypeAccess().getPiecewiseMath_PieceTypeParserRuleCall_5_0()); 
	    }
		lv_Piecewise_5_0=ruleMath_PieceType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_PiecewiseTypeRule());
	        }
       		add(
       			$current, 
       			"Piecewise",
        		lv_Piecewise_5_0, 
        		"Math_PieceType");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMath_PiecewiseTypeAccess().getTAG_OPEN2ParserRuleCall_6()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='Piecewise' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMath_PiecewiseTypeAccess().getPiecewiseKeyword_7());
    }

    { 
        newCompositeNode(grammarAccess.getMath_PiecewiseTypeAccess().getTAG_CLOSEParserRuleCall_8()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMath_PieceType
entryRuleMath_PieceType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_PieceTypeRule()); }
	 iv_ruleMath_PieceType=ruleMath_PieceType 
	 { $current=$iv_ruleMath_PieceType.current; } 
	 EOF 
;

// Rule Math_PieceType
ruleMath_PieceType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMath_PieceTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Piece' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMath_PieceTypeAccess().getPieceKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_PieceTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_PieceTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMath_PieceTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_PieceTypeAccess().getContentMath_ExprTypeParserRuleCall_4_0()); 
	    }
		lv_Content_4_0=ruleMath_ExprType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_PieceTypeRule());
	        }
       		set(
       			$current, 
       			"Content",
        		lv_Content_4_0, 
        		"Math_ExprType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_PieceTypeAccess().getConditionMath_ConditionTypeParserRuleCall_5_0()); 
	    }
		lv_Condition_5_0=ruleMath_ConditionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_PieceTypeRule());
	        }
       		set(
       			$current, 
       			"Condition",
        		lv_Condition_5_0, 
        		"Math_ConditionType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMath_PieceTypeAccess().getTAG_OPEN2ParserRuleCall_6()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='Piece' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMath_PieceTypeAccess().getPieceKeyword_7());
    }

    { 
        newCompositeNode(grammarAccess.getMath_PieceTypeAccess().getTAG_CLOSEParserRuleCall_8()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMath_ConditionType
entryRuleMath_ConditionType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_ConditionTypeRule()); }
	 iv_ruleMath_ConditionType=ruleMath_ConditionType 
	 { $current=$iv_ruleMath_ConditionType.current; } 
	 EOF 
;

// Rule Math_ConditionType
ruleMath_ConditionType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMath_ConditionTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Condition' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMath_ConditionTypeAccess().getConditionKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_ConditionTypeAccess().getWrittenVersionCt_writtenVersionParserRuleCall_2_0()); 
	    }
		lv_writtenVersion_2_0=rulect_writtenVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_ConditionTypeRule());
	        }
       		set(
       			$current, 
       			"writtenVersion",
        		lv_writtenVersion_2_0, 
        		"ct_writtenVersion");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_ConditionTypeAccess().getXmlnsCt_xmlnsParserRuleCall_3_0()); 
	    }
		lv_xmlns_3_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_ConditionTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_3_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMath_ConditionTypeAccess().getTAG_CLOSEParserRuleCall_4()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_ConditionTypeAccess().getExprMath_LogicBaseTypeParserRuleCall_5_0()); 
	    }
		lv_Expr_5_0=ruleMath_LogicBaseType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_ConditionTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_5_0, 
        		"Math_LogicBaseType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMath_ConditionTypeAccess().getTAG_OPEN2ParserRuleCall_6()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='Condition' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMath_ConditionTypeAccess().getConditionKeyword_7());
    }

    { 
        newCompositeNode(grammarAccess.getMath_ConditionTypeAccess().getTAG_CLOSEParserRuleCall_8()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMath_LogicBaseType
entryRuleMath_LogicBaseType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_LogicBaseTypeRule()); }
	 iv_ruleMath_LogicBaseType=ruleMath_LogicBaseType 
	 { $current=$iv_ruleMath_LogicBaseType.current; } 
	 EOF 
;

// Rule Math_LogicBaseType
ruleMath_LogicBaseType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMath_LogicBaseTypeAccess().getLogicBinopTypeMath_LogicBinopTypeParserRuleCall_0_0()); 
	    }
		lv_LogicBinopType_0_0=ruleMath_LogicBinopType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_LogicBaseTypeRule());
	        }
       		set(
       			$current, 
       			"LogicBinopType",
        		lv_LogicBinopType_0_0, 
        		"Math_LogicBinopType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_LogicBaseTypeAccess().getLogicUniopTypeMath_LogicUniopTypeParserRuleCall_1_0()); 
	    }
		lv_LogicUniopType_1_0=ruleMath_LogicUniopType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_LogicBaseTypeRule());
	        }
       		set(
       			$current, 
       			"LogicUniopType",
        		lv_LogicUniopType_1_0, 
        		"Math_LogicUniopType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_LogicBaseTypeAccess().getTrueMath_TRUEParserRuleCall_2_0()); 
	    }
		lv_True_2_0=ruleMath_TRUE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_LogicBaseTypeRule());
	        }
       		set(
       			$current, 
       			"True",
        		lv_True_2_0, 
        		"Math_TRUE");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_LogicBaseTypeAccess().getFalseMath_FALSEParserRuleCall_3_0()); 
	    }
		lv_False_3_0=ruleMath_FALSE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_LogicBaseTypeRule());
	        }
       		set(
       			$current, 
       			"False",
        		lv_False_3_0, 
        		"Math_FALSE");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMath_LogicExprType
entryRuleMath_LogicExprType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_LogicExprTypeRule()); }
	 iv_ruleMath_LogicExprType=ruleMath_LogicExprType 
	 { $current=$iv_ruleMath_LogicExprType.current; } 
	 EOF 
;

// Rule Math_LogicExprType
ruleMath_LogicExprType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getMath_LogicExprTypeAccess().getMath_LogicBaseTypeParserRuleCall_0_0()); 
    }
    this_Math_LogicBaseType_0=ruleMath_LogicBaseType
    { 
        $current = $this_Math_LogicBaseType_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_LogicExprTypeAccess().getScalarMath_ScalarTypeParserRuleCall_0_1_0()); 
	    }
		lv_Scalar_1_0=ruleMath_ScalarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_LogicExprTypeRule());
	        }
       		set(
       			$current, 
       			"Scalar",
        		lv_Scalar_1_0, 
        		"Math_ScalarType");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_LogicExprTypeAccess().getConstantMath_ConstantTypeParserRuleCall_1_0()); 
	    }
		lv_Constant_2_0=ruleMath_ConstantType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_LogicExprTypeRule());
	        }
       		set(
       			$current, 
       			"Constant",
        		lv_Constant_2_0, 
        		"Math_ConstantType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_LogicExprTypeAccess().getVarMath_VarTypeParserRuleCall_2_0()); 
	    }
		lv_Var_3_0=ruleMath_VarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_LogicExprTypeRule());
	        }
       		set(
       			$current, 
       			"Var",
        		lv_Var_3_0, 
        		"Math_VarType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_LogicExprTypeAccess().getUniopMath_UniopTypeParserRuleCall_3_0()); 
	    }
		lv_Uniop_4_0=ruleMath_UniopType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_LogicExprTypeRule());
	        }
       		set(
       			$current, 
       			"Uniop",
        		lv_Uniop_4_0, 
        		"Math_UniopType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_LogicExprTypeAccess().getBinopMath_BinopTypeParserRuleCall_4_0()); 
	    }
		lv_Binop_5_0=ruleMath_BinopType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_LogicExprTypeRule());
	        }
       		set(
       			$current, 
       			"Binop",
        		lv_Binop_5_0, 
        		"Math_BinopType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_LogicExprTypeAccess().getFunctionCallMath_FunctionCallTypeParserRuleCall_5_0()); 
	    }
		lv_FunctionCall_6_0=ruleMath_FunctionCallType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_LogicExprTypeRule());
	        }
       		set(
       			$current, 
       			"FunctionCall",
        		lv_FunctionCall_6_0, 
        		"Math_FunctionCallType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_LogicExprTypeAccess().getStringMath_StringTypeParserRuleCall_6_0()); 
	    }
		lv_String_7_0=ruleMath_StringType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_LogicExprTypeRule());
	        }
       		set(
       			$current, 
       			"String",
        		lv_String_7_0, 
        		"Math_StringType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMath_StringType
entryRuleMath_StringType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_StringTypeRule()); }
	 iv_ruleMath_StringType=ruleMath_StringType 
	 { $current=$iv_ruleMath_StringType.current; } 
	 EOF 
;

// Rule Math_StringType
ruleMath_StringType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMath_StringTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='String' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMath_StringTypeAccess().getStringKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_StringTypeAccess().getValueCt_String_ValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=rulect_String_Value		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_StringTypeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"ct_String_Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_StringTypeAccess().getXmlnsCt_xmlnsParserRuleCall_3_0()); 
	    }
		lv_xmlns_3_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_StringTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_3_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getMath_StringTypeAccess().getTAG_CLOSE2ParserRuleCall_4_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getMath_StringTypeAccess().getTAG_CLOSEParserRuleCall_4_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getMath_StringTypeAccess().getTAG_OPEN2ParserRuleCall_4_1_1()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='String' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMath_StringTypeAccess().getStringKeyword_4_1_2());
    }

    { 
        newCompositeNode(grammarAccess.getMath_StringTypeAccess().getTAG_CLOSEParserRuleCall_4_1_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRuleMath_TRUE
entryRuleMath_TRUE returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_TRUERule()); }
	 iv_ruleMath_TRUE=ruleMath_TRUE 
	 { $current=$iv_ruleMath_TRUE.current; } 
	 EOF 
;

// Rule Math_TRUE
ruleMath_TRUE returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_true_0_1=	'"True"' 
    {
        newLeafNode(lv_true_0_1, grammarAccess.getMath_TRUEAccess().getTrueTrueKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_TRUERule());
	        }
       		setWithLastConsumed($current, "true", lv_true_0_1, null);
	    }

    |		lv_true_0_2=	'"true"' 
    {
        newLeafNode(lv_true_0_2, grammarAccess.getMath_TRUEAccess().getTrueTrueKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_TRUERule());
	        }
       		setWithLastConsumed($current, "true", lv_true_0_2, null);
	    }

    |		lv_true_0_3=	'"TRUE"' 
    {
        newLeafNode(lv_true_0_3, grammarAccess.getMath_TRUEAccess().getTrueTRUEKeyword_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_TRUERule());
	        }
       		setWithLastConsumed($current, "true", lv_true_0_3, null);
	    }

)

)
)
;





// Entry rule entryRuleMath_FALSE
entryRuleMath_FALSE returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_FALSERule()); }
	 iv_ruleMath_FALSE=ruleMath_FALSE 
	 { $current=$iv_ruleMath_FALSE.current; } 
	 EOF 
;

// Rule Math_FALSE
ruleMath_FALSE returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_false_0_1=	'"False"' 
    {
        newLeafNode(lv_false_0_1, grammarAccess.getMath_FALSEAccess().getFalseFalseKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_FALSERule());
	        }
       		setWithLastConsumed($current, "false", lv_false_0_1, null);
	    }

    |		lv_false_0_2=	'"false"' 
    {
        newLeafNode(lv_false_0_2, grammarAccess.getMath_FALSEAccess().getFalseFalseKeyword_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_FALSERule());
	        }
       		setWithLastConsumed($current, "false", lv_false_0_2, null);
	    }

    |		lv_false_0_3=	'"FALSE"' 
    {
        newLeafNode(lv_false_0_3, grammarAccess.getMath_FALSEAccess().getFalseFALSEKeyword_0_2());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_FALSERule());
	        }
       		setWithLastConsumed($current, "false", lv_false_0_3, null);
	    }

)

)
)
;





// Entry rule entryRuleMath_LogicBinopType
entryRuleMath_LogicBinopType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_LogicBinopTypeRule()); }
	 iv_ruleMath_LogicBinopType=ruleMath_LogicBinopType 
	 { $current=$iv_ruleMath_LogicBinopType.current; } 
	 EOF 
;

// Rule Math_LogicBinopType
ruleMath_LogicBinopType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMath_LogicBinopTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='LogicBinop' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMath_LogicBinopTypeAccess().getLogicBinopKeyword_1());
    }
	otherlv_2='op' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMath_LogicBinopTypeAccess().getOpKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMath_LogicBinopTypeAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_LogicBinopTypeAccess().getOpMath_LogicBinopNameParserRuleCall_4_0()); 
	    }
		lv_op_4_0=ruleMath_LogicBinopName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_LogicBinopTypeRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_4_0, 
        		"Math_LogicBinopName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_LogicBinopTypeAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_LogicBinopTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMath_LogicBinopTypeAccess().getTAG_CLOSEParserRuleCall_6()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_LogicBinopTypeAccess().getLeftExprMath_LogicExprTypeParserRuleCall_7_0()); 
	    }
		lv_LeftExpr_7_0=ruleMath_LogicExprType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_LogicBinopTypeRule());
	        }
       		set(
       			$current, 
       			"LeftExpr",
        		lv_LeftExpr_7_0, 
        		"Math_LogicExprType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_LogicBinopTypeAccess().getRightExprMath_LogicExprTypeParserRuleCall_8_0()); 
	    }
		lv_RightExpr_8_0=ruleMath_LogicExprType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_LogicBinopTypeRule());
	        }
       		set(
       			$current, 
       			"RightExpr",
        		lv_RightExpr_8_0, 
        		"Math_LogicExprType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMath_LogicBinopTypeAccess().getTAG_OPEN2ParserRuleCall_9()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_10='LogicBinop' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMath_LogicBinopTypeAccess().getLogicBinopKeyword_10());
    }

    { 
        newCompositeNode(grammarAccess.getMath_LogicBinopTypeAccess().getTAG_CLOSEParserRuleCall_11()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMath_LogicUniopType
entryRuleMath_LogicUniopType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_LogicUniopTypeRule()); }
	 iv_ruleMath_LogicUniopType=ruleMath_LogicUniopType 
	 { $current=$iv_ruleMath_LogicUniopType.current; } 
	 EOF 
;

// Rule Math_LogicUniopType
ruleMath_LogicUniopType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMath_LogicUniopTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='LogicUniop' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMath_LogicUniopTypeAccess().getLogicUniopKeyword_1());
    }
	otherlv_2='op' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMath_LogicUniopTypeAccess().getOpKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMath_LogicUniopTypeAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_LogicUniopTypeAccess().getOpMath_LogicUniopNameParserRuleCall_4_0()); 
	    }
		lv_op_4_0=ruleMath_LogicUniopName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_LogicUniopTypeRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_4_0, 
        		"Math_LogicUniopName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_LogicUniopTypeAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_LogicUniopTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMath_LogicUniopTypeAccess().getTAG_CLOSEParserRuleCall_6()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_LogicUniopTypeAccess().getExprMath_LogicExprTypeParserRuleCall_7_0()); 
	    }
		lv_Expr_7_0=ruleMath_LogicExprType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_LogicUniopTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_7_0, 
        		"Math_LogicExprType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMath_LogicUniopTypeAccess().getTAG_OPEN2ParserRuleCall_8()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9='LogicUniop' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMath_LogicUniopTypeAccess().getLogicUniopKeyword_9());
    }

    { 
        newCompositeNode(grammarAccess.getMath_LogicUniopTypeAccess().getTAG_CLOSEParserRuleCall_10()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMath_BinopName
entryRuleMath_BinopName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_BinopNameRule()); }
	 iv_ruleMath_BinopName=ruleMath_BinopName 
	 { $current=$iv_ruleMath_BinopName.current; } 
	 EOF 
;

// Rule Math_BinopName
ruleMath_BinopName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_binopName_0_0=	'"plus"' 
    {
        newLeafNode(lv_binopName_0_0, grammarAccess.getMath_BinopNameAccess().getBinopNamePlusKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_BinopNameRule());
	        }
       		setWithLastConsumed($current, "binopName", lv_binopName_0_0, "\"plus\"");
	    }

)
)
    |(
(
		lv_minus_1_0=	'"minus"' 
    {
        newLeafNode(lv_minus_1_0, grammarAccess.getMath_BinopNameAccess().getMinusMinusKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_BinopNameRule());
	        }
       		setWithLastConsumed($current, "minus", lv_minus_1_0, "\"minus\"");
	    }

)
)
    |(
(
		lv_times_2_0=	'"times"' 
    {
        newLeafNode(lv_times_2_0, grammarAccess.getMath_BinopNameAccess().getTimesTimesKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_BinopNameRule());
	        }
       		setWithLastConsumed($current, "times", lv_times_2_0, "\"times\"");
	    }

)
)
    |(
(
		lv_divide_3_0=	'"divide"' 
    {
        newLeafNode(lv_divide_3_0, grammarAccess.getMath_BinopNameAccess().getDivideDivideKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_BinopNameRule());
	        }
       		setWithLastConsumed($current, "divide", lv_divide_3_0, "\"divide\"");
	    }

)
)
    |(
(
		lv_power_4_0=	'"power"' 
    {
        newLeafNode(lv_power_4_0, grammarAccess.getMath_BinopNameAccess().getPowerPowerKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_BinopNameRule());
	        }
       		setWithLastConsumed($current, "power", lv_power_4_0, "\"power\"");
	    }

)
)
    |(
(
		lv_log_5_0=	'"log"' 
    {
        newLeafNode(lv_log_5_0, grammarAccess.getMath_BinopNameAccess().getLogLogKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_BinopNameRule());
	        }
       		setWithLastConsumed($current, "log", lv_log_5_0, "\"log\"");
	    }

)
)
    |(
(
		lv_root_6_0=	'"root"' 
    {
        newLeafNode(lv_root_6_0, grammarAccess.getMath_BinopNameAccess().getRootRootKeyword_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_BinopNameRule());
	        }
       		setWithLastConsumed($current, "root", lv_root_6_0, "\"root\"");
	    }

)
))
;





// Entry rule entryRuleMath_UniopName
entryRuleMath_UniopName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_UniopNameRule()); }
	 iv_ruleMath_UniopName=ruleMath_UniopName 
	 { $current=$iv_ruleMath_UniopName.current; } 
	 EOF 
;

// Rule Math_UniopName
ruleMath_UniopName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_exp_0_0=	'"exp"' 
    {
        newLeafNode(lv_exp_0_0, grammarAccess.getMath_UniopNameAccess().getExpExpKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "exp", lv_exp_0_0, "\"exp\"");
	    }

)
)
    |(
(
		lv_ln_1_0=	'"ln"' 
    {
        newLeafNode(lv_ln_1_0, grammarAccess.getMath_UniopNameAccess().getLnLnKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "ln", lv_ln_1_0, "\"ln\"");
	    }

)
)
    |(
(
		lv_minus_2_0=	'"minus"' 
    {
        newLeafNode(lv_minus_2_0, grammarAccess.getMath_UniopNameAccess().getMinusMinusKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "minus", lv_minus_2_0, "\"minus\"");
	    }

)
)
    |(
(
		lv_factorial_3_0=	'"factorial"' 
    {
        newLeafNode(lv_factorial_3_0, grammarAccess.getMath_UniopNameAccess().getFactorialFactorialKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "factorial", lv_factorial_3_0, "\"factorial\"");
	    }

)
)
    |(
(
		lv_sin_4_0=	'"sin"' 
    {
        newLeafNode(lv_sin_4_0, grammarAccess.getMath_UniopNameAccess().getSinSinKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "sin", lv_sin_4_0, "\"sin\"");
	    }

)
)
    |(
(
		lv_cos_5_0=	'"cos"' 
    {
        newLeafNode(lv_cos_5_0, grammarAccess.getMath_UniopNameAccess().getCosCosKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "cos", lv_cos_5_0, "\"cos\"");
	    }

)
)
    |(
(
		lv_tan_6_0=	'"tan"' 
    {
        newLeafNode(lv_tan_6_0, grammarAccess.getMath_UniopNameAccess().getTanTanKeyword_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "tan", lv_tan_6_0, "\"tan\"");
	    }

)
)
    |(
(
		lv_sec_7_0=	'"sec"' 
    {
        newLeafNode(lv_sec_7_0, grammarAccess.getMath_UniopNameAccess().getSecSecKeyword_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "sec", lv_sec_7_0, "\"sec\"");
	    }

)
)
    |(
(
		lv_csc_8_0=	'"csc"' 
    {
        newLeafNode(lv_csc_8_0, grammarAccess.getMath_UniopNameAccess().getCscCscKeyword_8_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "csc", lv_csc_8_0, "\"csc\"");
	    }

)
)
    |(
(
		lv_cot_9_0=	'"cot"' 
    {
        newLeafNode(lv_cot_9_0, grammarAccess.getMath_UniopNameAccess().getCotCotKeyword_9_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "cot", lv_cot_9_0, "\"cot\"");
	    }

)
)
    |(
(
		lv_sinh_10_0=	'"sinh"' 
    {
        newLeafNode(lv_sinh_10_0, grammarAccess.getMath_UniopNameAccess().getSinhSinhKeyword_10_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "sinh", lv_sinh_10_0, "\"sinh\"");
	    }

)
)
    |(
(
		lv_csch_11_0=	'"csch"' 
    {
        newLeafNode(lv_csch_11_0, grammarAccess.getMath_UniopNameAccess().getCschCschKeyword_11_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "csch", lv_csch_11_0, "\"csch\"");
	    }

)
)
    |(
(
		lv_coth_12_0=	'"coth"' 
    {
        newLeafNode(lv_coth_12_0, grammarAccess.getMath_UniopNameAccess().getCothCothKeyword_12_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "coth", lv_coth_12_0, "\"coth\"");
	    }

)
)
    |(
(
		lv_arcsin_13_0=	'"arcsin"' 
    {
        newLeafNode(lv_arcsin_13_0, grammarAccess.getMath_UniopNameAccess().getArcsinArcsinKeyword_13_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "arcsin", lv_arcsin_13_0, "\"arcsin\"");
	    }

)
)
    |(
(
		lv_arccos_14_0=	'"arccos"' 
    {
        newLeafNode(lv_arccos_14_0, grammarAccess.getMath_UniopNameAccess().getArccosArccosKeyword_14_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "arccos", lv_arccos_14_0, "\"arccos\"");
	    }

)
)
    |(
(
		lv_arctan_15_0=	'"arctan"' 
    {
        newLeafNode(lv_arctan_15_0, grammarAccess.getMath_UniopNameAccess().getArctanArctanKeyword_15_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "arctan", lv_arctan_15_0, "\"arctan\"");
	    }

)
)
    |(
(
		lv_arcsec_16_0=	'"arcsec"' 
    {
        newLeafNode(lv_arcsec_16_0, grammarAccess.getMath_UniopNameAccess().getArcsecArcsecKeyword_16_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "arcsec", lv_arcsec_16_0, "\"arcsec\"");
	    }

)
)
    |(
(
		lv_arccsc_17_0=	'"arccsc"' 
    {
        newLeafNode(lv_arccsc_17_0, grammarAccess.getMath_UniopNameAccess().getArccscArccscKeyword_17_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "arccsc", lv_arccsc_17_0, "\"arccsc\"");
	    }

)
)
    |(
(
		lv_arccot_18_0=	'"arccot"' 
    {
        newLeafNode(lv_arccot_18_0, grammarAccess.getMath_UniopNameAccess().getArccotArccotKeyword_18_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "arccot", lv_arccot_18_0, "\"arccot\"");
	    }

)
)
    |(
(
		lv_arcsinh_19_0=	'"arcsinh"' 
    {
        newLeafNode(lv_arcsinh_19_0, grammarAccess.getMath_UniopNameAccess().getArcsinhArcsinhKeyword_19_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "arcsinh", lv_arcsinh_19_0, "\"arcsinh\"");
	    }

)
)
    |(
(
		lv_arccosh_20_0=	'"arccosh"' 
    {
        newLeafNode(lv_arccosh_20_0, grammarAccess.getMath_UniopNameAccess().getArccoshArccoshKeyword_20_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "arccosh", lv_arccosh_20_0, "\"arccosh\"");
	    }

)
)
    |(
(
		lv_arctanh_21_0=	'"arctanh"' 
    {
        newLeafNode(lv_arctanh_21_0, grammarAccess.getMath_UniopNameAccess().getArctanhArctanhKeyword_21_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "arctanh", lv_arctanh_21_0, "\"arctanh\"");
	    }

)
)
    |(
(
		lv_arcsech_22_0=	'"arcsech"' 
    {
        newLeafNode(lv_arcsech_22_0, grammarAccess.getMath_UniopNameAccess().getArcsechArcsechKeyword_22_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "arcsech", lv_arcsech_22_0, "\"arcsech\"");
	    }

)
)
    |(
(
		lv_arccsch_23_0=	'"arccsch"' 
    {
        newLeafNode(lv_arccsch_23_0, grammarAccess.getMath_UniopNameAccess().getArccschArccschKeyword_23_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "arccsch", lv_arccsch_23_0, "\"arccsch\"");
	    }

)
)
    |(
(
		lv_arccoth_24_0=	'"arccoth"' 
    {
        newLeafNode(lv_arccoth_24_0, grammarAccess.getMath_UniopNameAccess().getArccothArccothKeyword_24_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "arccoth", lv_arccoth_24_0, "\"arccoth\"");
	    }

)
)
    |(
(
		lv_floor_25_0=	'"floor"' 
    {
        newLeafNode(lv_floor_25_0, grammarAccess.getMath_UniopNameAccess().getFloorFloorKeyword_25_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "floor", lv_floor_25_0, "\"floor\"");
	    }

)
)
    |(
(
		lv_abs_26_0=	'"abs"' 
    {
        newLeafNode(lv_abs_26_0, grammarAccess.getMath_UniopNameAccess().getAbsAbsKeyword_26_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "abs", lv_abs_26_0, "\"abs\"");
	    }

)
)
    |(
(
		lv_ceiling_27_0=	'"ceiling"' 
    {
        newLeafNode(lv_ceiling_27_0, grammarAccess.getMath_UniopNameAccess().getCeilingCeilingKeyword_27_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "ceiling", lv_ceiling_27_0, "\"ceiling\"");
	    }

)
)
    |(
(
		lv_logit_28_0=	'"logit"' 
    {
        newLeafNode(lv_logit_28_0, grammarAccess.getMath_UniopNameAccess().getLogitLogitKeyword_28_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_UniopNameRule());
	        }
       		setWithLastConsumed($current, "logit", lv_logit_28_0, "\"logit\"");
	    }

)
))
;





// Entry rule entryRuleMath_LogicUniopName
entryRuleMath_LogicUniopName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_LogicUniopNameRule()); }
	 iv_ruleMath_LogicUniopName=ruleMath_LogicUniopName 
	 { $current=$iv_ruleMath_LogicUniopName.current; } 
	 EOF 
;

// Rule Math_LogicUniopName
ruleMath_LogicUniopName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_isDefined_0_0=	'isDefined' 
    {
        newLeafNode(lv_isDefined_0_0, grammarAccess.getMath_LogicUniopNameAccess().getIsDefinedIsDefinedKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_LogicUniopNameRule());
	        }
       		setWithLastConsumed($current, "isDefined", lv_isDefined_0_0, "isDefined");
	    }

)
)
    |(
(
		lv_not_1_0=	'not' 
    {
        newLeafNode(lv_not_1_0, grammarAccess.getMath_LogicUniopNameAccess().getNotNotKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_LogicUniopNameRule());
	        }
       		setWithLastConsumed($current, "not", lv_not_1_0, "not");
	    }

)
))
;





// Entry rule entryRuleMath_LogicBinopName
entryRuleMath_LogicBinopName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_LogicBinopNameRule()); }
	 iv_ruleMath_LogicBinopName=ruleMath_LogicBinopName 
	 { $current=$iv_ruleMath_LogicBinopName.current; } 
	 EOF 
;

// Rule Math_LogicBinopName
ruleMath_LogicBinopName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMath_LogicBinopNameAccess().getQuotationMarkKeyword_0_0());
    }
(
(
		lv_lt_1_0=	'lt' 
    {
        newLeafNode(lv_lt_1_0, grammarAccess.getMath_LogicBinopNameAccess().getLtLtKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_LogicBinopNameRule());
	        }
       		setWithLastConsumed($current, "lt", lv_lt_1_0, "lt");
	    }

)
))
    |(
(
		lv_leq_2_0=	'leq' 
    {
        newLeafNode(lv_leq_2_0, grammarAccess.getMath_LogicBinopNameAccess().getLeqLeqKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_LogicBinopNameRule());
	        }
       		setWithLastConsumed($current, "leq", lv_leq_2_0, "leq");
	    }

)
)
    |(
(
		lv_gt_3_0=	'gt' 
    {
        newLeafNode(lv_gt_3_0, grammarAccess.getMath_LogicBinopNameAccess().getGtGtKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_LogicBinopNameRule());
	        }
       		setWithLastConsumed($current, "gt", lv_gt_3_0, "gt");
	    }

)
)
    |(
(
		lv_geq_4_0=	'geq' 
    {
        newLeafNode(lv_geq_4_0, grammarAccess.getMath_LogicBinopNameAccess().getGeqGeqKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_LogicBinopNameRule());
	        }
       		setWithLastConsumed($current, "geq", lv_geq_4_0, "geq");
	    }

)
)
    |(
(
		lv_eq_5_0=	'eq' 
    {
        newLeafNode(lv_eq_5_0, grammarAccess.getMath_LogicBinopNameAccess().getEqEqKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_LogicBinopNameRule());
	        }
       		setWithLastConsumed($current, "eq", lv_eq_5_0, "eq");
	    }

)
)
    |(
(
		lv_neq_6_0=	'neq' 
    {
        newLeafNode(lv_neq_6_0, grammarAccess.getMath_LogicBinopNameAccess().getNeqNeqKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_LogicBinopNameRule());
	        }
       		setWithLastConsumed($current, "neq", lv_neq_6_0, "neq");
	    }

)
)
    |(
(
		lv_and_7_0=	'and' 
    {
        newLeafNode(lv_and_7_0, grammarAccess.getMath_LogicBinopNameAccess().getAndAndKeyword_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_LogicBinopNameRule());
	        }
       		setWithLastConsumed($current, "and", lv_and_7_0, "and");
	    }

)
)
    |(
(
		lv_or_8_0=	'or' 
    {
        newLeafNode(lv_or_8_0, grammarAccess.getMath_LogicBinopNameAccess().getOrOrKeyword_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_LogicBinopNameRule());
	        }
       		setWithLastConsumed($current, "or", lv_or_8_0, "or");
	    }

)
)
    |((
(
		lv_xor_9_0=	'xor' 
    {
        newLeafNode(lv_xor_9_0, grammarAccess.getMath_LogicBinopNameAccess().getXorXorKeyword_8_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_LogicBinopNameRule());
	        }
       		setWithLastConsumed($current, "xor", lv_xor_9_0, "xor");
	    }

)
)	otherlv_10='"' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMath_LogicBinopNameAccess().getQuotationMarkKeyword_8_1());
    }
))
;





// Entry rule entryRuleMath_ConstantName
entryRuleMath_ConstantName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_ConstantNameRule()); }
	 iv_ruleMath_ConstantName=ruleMath_ConstantName 
	 { $current=$iv_ruleMath_ConstantName.current; } 
	 EOF 
;

// Rule Math_ConstantName
ruleMath_ConstantName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='"' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMath_ConstantNameAccess().getQuotationMarkKeyword_0_0());
    }
(
(
		lv_notanumber_1_0=	'notanumber' 
    {
        newLeafNode(lv_notanumber_1_0, grammarAccess.getMath_ConstantNameAccess().getNotanumberNotanumberKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_ConstantNameRule());
	        }
       		setWithLastConsumed($current, "notanumber", lv_notanumber_1_0, "notanumber");
	    }

)
))
    |(
(
		lv_pi_2_0=	'pi' 
    {
        newLeafNode(lv_pi_2_0, grammarAccess.getMath_ConstantNameAccess().getPiPiKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_ConstantNameRule());
	        }
       		setWithLastConsumed($current, "pi", lv_pi_2_0, "pi");
	    }

)
)
    |(
(
		lv_exponentiale_3_0=	'exponentiale' 
    {
        newLeafNode(lv_exponentiale_3_0, grammarAccess.getMath_ConstantNameAccess().getExponentialeExponentialeKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_ConstantNameRule());
	        }
       		setWithLastConsumed($current, "exponentiale", lv_exponentiale_3_0, "exponentiale");
	    }

)
)
    |((
(
		lv_infinity_4_0=	'infinity' 
    {
        newLeafNode(lv_infinity_4_0, grammarAccess.getMath_ConstantNameAccess().getInfinityInfinityKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_ConstantNameRule());
	        }
       		setWithLastConsumed($current, "infinity", lv_infinity_4_0, "infinity");
	    }

)
)	otherlv_5='"' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMath_ConstantNameAccess().getQuotationMarkKeyword_3_1());
    }
))
;





// Entry rule entryRuleMath_symbId
entryRuleMath_symbId returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_symbIdRule()); }
	 iv_ruleMath_symbId=ruleMath_symbId 
	 { $current=$iv_ruleMath_symbId.current; } 
	 EOF 
;

// Rule Math_symbId
ruleMath_symbId returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='symbId' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMath_symbIdAccess().getSymbIdKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMath_symbIdAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_symbIdAccess().getSymbIdMath_SymbolNameTypeParserRuleCall_2_0()); 
	    }
		lv_symbId_2_0=ruleMath_SymbolNameType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_symbIdRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_2_0, 
        		"Math_SymbolNameType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMath_id
entryRuleMath_id returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_idRule()); }
	 iv_ruleMath_id=ruleMath_id 
	 { $current=$iv_ruleMath_id.current; } 
	 EOF 
;

// Rule Math_id
ruleMath_id returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='id' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMath_idAccess().getIdKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMath_idAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_idAccess().getIdMath_BlockNameTypeParserRuleCall_2_0()); 
	    }
		lv_id_2_0=ruleMath_BlockNameType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_idRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"Math_BlockNameType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMath_block
entryRuleMath_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_blockRule()); }
	 iv_ruleMath_block=ruleMath_block 
	 { $current=$iv_ruleMath_block.current; } 
	 EOF 
;

// Rule Math_block
ruleMath_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='block' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMath_blockAccess().getBlockKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMath_blockAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMath_blockAccess().getBlockMath_BlockNameTypeParserRuleCall_2_0()); 
	    }
		lv_block_2_0=ruleMath_BlockNameType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMath_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_2_0, 
        		"Math_BlockNameType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulect_independentVar
entryRulect_independentVar returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_independentVarRule()); }
	 iv_rulect_independentVar=rulect_independentVar 
	 { $current=$iv_rulect_independentVar.current; } 
	 EOF 
;

// Rule ct_independentVar
rulect_independentVar returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='independentVar' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCt_independentVarAccess().getIndependentVarKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_independentVarAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_independentVarAccess().getIndependentVarCt_SymbolNameTypeParserRuleCall_2_0()); 
	    }
		lv_independentVar_2_0=rulect_SymbolNameType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_independentVarRule());
	        }
       		set(
       			$current, 
       			"independentVar",
        		lv_independentVar_2_0, 
        		"ct_SymbolNameType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleMath_SymbolNameType
entryRuleMath_SymbolNameType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_SymbolNameTypeRule()); } 
	 iv_ruleMath_SymbolNameType=ruleMath_SymbolNameType 
	 { $current=$iv_ruleMath_SymbolNameType.current.getText(); }  
	 EOF 
;

// Rule Math_SymbolNameType
ruleMath_SymbolNameType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STR_0=RULE_STR    {
		$current.merge(this_STR_0);
    }

    { 
    newLeafNode(this_STR_0, grammarAccess.getMath_SymbolNameTypeAccess().getSTRTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleMath_EstimationOperationType
entryRuleMath_EstimationOperationType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_EstimationOperationTypeRule()); }
	 iv_ruleMath_EstimationOperationType=ruleMath_EstimationOperationType 
	 { $current=$iv_ruleMath_EstimationOperationType.current; } 
	 EOF 
;

// Rule Math_EstimationOperationType
ruleMath_EstimationOperationType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_estPop_0_0=	'"estPop"' 
    {
        newLeafNode(lv_estPop_0_0, grammarAccess.getMath_EstimationOperationTypeAccess().getEstPopEstPopKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_EstimationOperationTypeRule());
	        }
       		setWithLastConsumed($current, "estPop", lv_estPop_0_0, "\"estPop\"");
	    }

)
)
    |(
(
		lv_estFIM_1_0=	'"estFIM"' 
    {
        newLeafNode(lv_estFIM_1_0, grammarAccess.getMath_EstimationOperationTypeAccess().getEstFIMEstFIMKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_EstimationOperationTypeRule());
	        }
       		setWithLastConsumed($current, "estFIM", lv_estFIM_1_0, "\"estFIM\"");
	    }

)
)
    |(
(
		lv_estIndiv_2_0=	'"estIndiv"' 
    {
        newLeafNode(lv_estIndiv_2_0, grammarAccess.getMath_EstimationOperationTypeAccess().getEstIndivEstIndivKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMath_EstimationOperationTypeRule());
	        }
       		setWithLastConsumed($current, "estIndiv", lv_estIndiv_2_0, "\"estIndiv\"");
	    }

)
))
;





// Entry rule entryRulemdef_ParameterTypeName
entryRulemdef_ParameterTypeName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_ParameterTypeNameRule()); }
	 iv_rulemdef_ParameterTypeName=rulemdef_ParameterTypeName 
	 { $current=$iv_rulemdef_ParameterTypeName.current; } 
	 EOF 
;

// Rule mdef_ParameterTypeName
rulemdef_ParameterTypeName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_log_0_0=	'"log"' 
    {
        newLeafNode(lv_log_0_0, grammarAccess.getMdef_ParameterTypeNameAccess().getLogLogKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMdef_ParameterTypeNameRule());
	        }
       		setWithLastConsumed($current, "log", lv_log_0_0, "\"log\"");
	    }

)
)
    |(
(
		lv_logit_1_0=	'"logit"' 
    {
        newLeafNode(lv_logit_1_0, grammarAccess.getMdef_ParameterTypeNameAccess().getLogitLogitKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMdef_ParameterTypeNameRule());
	        }
       		setWithLastConsumed($current, "logit", lv_logit_1_0, "\"logit\"");
	    }

)
)
    |(
(
		lv_none_2_0=	'"none"' 
    {
        newLeafNode(lv_none_2_0, grammarAccess.getMdef_ParameterTypeNameAccess().getNoneNoneKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMdef_ParameterTypeNameRule());
	        }
       		setWithLastConsumed($current, "none", lv_none_2_0, "\"none\"");
	    }

)
))
;





// Entry rule entryRuleMath_BlockNameType
entryRuleMath_BlockNameType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMath_BlockNameTypeRule()); } 
	 iv_ruleMath_BlockNameType=ruleMath_BlockNameType 
	 { $current=$iv_ruleMath_BlockNameType.current.getText(); }  
	 EOF 
;

// Rule Math_BlockNameType
ruleMath_BlockNameType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STR_0=RULE_STR    {
		$current.merge(this_STR_0);
    }

    { 
    newLeafNode(this_STR_0, grammarAccess.getMath_BlockNameTypeAccess().getSTRTerminalRuleCall()); 
    }

    ;





// Entry rule entryRulemdef_ModelDefinitionType
entryRulemdef_ModelDefinitionType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_ModelDefinitionTypeRule()); }
	 iv_rulemdef_ModelDefinitionType=rulemdef_ModelDefinitionType 
	 { $current=$iv_rulemdef_ModelDefinitionType.current; } 
	 EOF 
;

// Rule mdef_ModelDefinitionType
rulemdef_ModelDefinitionType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMdef_ModelDefinitionTypeAccess().getMdef_ModelDefinitionTypeAction_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getMdef_ModelDefinitionTypeAccess().getTAG_OPENParserRuleCall_1()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='ModelDefinition' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMdef_ModelDefinitionTypeAccess().getModelDefinitionKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ModelDefinitionTypeAccess().getXmlnsCt_xmlnsParserRuleCall_3_0()); 
	    }
		lv_xmlns_3_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ModelDefinitionTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_3_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_ModelDefinitionTypeAccess().getTAG_CLOSEParserRuleCall_4()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ModelDefinitionTypeAccess().getVariabilityLevelMdef_VariabilityLevelDefnTypeParserRuleCall_5_0()); 
	    }
		lv_VariabilityLevel_5_0=rulemdef_VariabilityLevelDefnType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ModelDefinitionTypeRule());
	        }
       		add(
       			$current, 
       			"VariabilityLevel",
        		lv_VariabilityLevel_5_0, 
        		"mdef_VariabilityLevelDefnType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ModelDefinitionTypeAccess().getCovariateModelMdef_CovariateModelTypeParserRuleCall_6_0()); 
	    }
		lv_CovariateModel_6_0=rulemdef_CovariateModelType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ModelDefinitionTypeRule());
	        }
       		set(
       			$current, 
       			"CovariateModel",
        		lv_CovariateModel_6_0, 
        		"mdef_CovariateModelType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ModelDefinitionTypeAccess().getParameterModelMdef_ParameterModelTypeParserRuleCall_7_0()); 
	    }
		lv_ParameterModel_7_0=rulemdef_ParameterModelType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ModelDefinitionTypeRule());
	        }
       		set(
       			$current, 
       			"ParameterModel",
        		lv_ParameterModel_7_0, 
        		"mdef_ParameterModelType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ModelDefinitionTypeAccess().getStructuraModelMdef_StructuralModelTypeParserRuleCall_8_0()); 
	    }
		lv_StructuraModel_8_0=rulemdef_StructuralModelType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ModelDefinitionTypeRule());
	        }
       		add(
       			$current, 
       			"StructuraModel",
        		lv_StructuraModel_8_0, 
        		"mdef_StructuralModelType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ModelDefinitionTypeAccess().getObservationModelMdef_ObservationModelTypeParserRuleCall_9_0()); 
	    }
		lv_ObservationModel_9_0=rulemdef_ObservationModelType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ModelDefinitionTypeRule());
	        }
       		set(
       			$current, 
       			"ObservationModel",
        		lv_ObservationModel_9_0, 
        		"mdef_ObservationModelType");
	        afterParserOrEnumRuleCall();
	    }

)
)?
    { 
        newCompositeNode(grammarAccess.getMdef_ModelDefinitionTypeAccess().getTAG_OPEN2ParserRuleCall_10()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_11='ModelDefinition' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMdef_ModelDefinitionTypeAccess().getModelDefinitionKeyword_11());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_ModelDefinitionTypeAccess().getTAG_CLOSEParserRuleCall_12()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemdef_StructuralModelType
entryRulemdef_StructuralModelType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_StructuralModelTypeRule()); }
	 iv_rulemdef_StructuralModelType=rulemdef_StructuralModelType 
	 { $current=$iv_rulemdef_StructuralModelType.current; } 
	 EOF 
;

// Rule mdef_StructuralModelType
rulemdef_StructuralModelType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMdef_StructuralModelTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='StructuralModel' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMdef_StructuralModelTypeAccess().getStructuralModelKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_StructuralModelTypeAccess().getIdCt_idParserRuleCall_2_0()); 
	    }
		lv_id_2_0=rulect_id		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_StructuralModelTypeRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"ct_id");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_StructuralModelTypeAccess().getXmlnsCt_xmlnsParserRuleCall_3_0()); 
	    }
		lv_xmlns_3_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_StructuralModelTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_3_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_StructuralModelTypeAccess().getTAG_CLOSEParserRuleCall_4()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_StructuralModelTypeAccess().getDescriptionCt_AnnotationTypeParserRuleCall_5_0()); 
	    }
		lv_Description_5_0=rulect_AnnotationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_StructuralModelTypeRule());
	        }
       		set(
       			$current, 
       			"Description",
        		lv_Description_5_0, 
        		"ct_AnnotationType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_StructuralModelTypeAccess().getParameterMdef_ParameterTypeParserRuleCall_6_0()); 
	    }
		lv_Parameter_6_0=rulemdef_ParameterType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_StructuralModelTypeRule());
	        }
       		add(
       			$current, 
       			"Parameter",
        		lv_Parameter_6_0, 
        		"mdef_ParameterType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_StructuralModelTypeAccess().getVariableCt_VariableDefinitionTypeParserRuleCall_7_0()); 
	    }
		lv_Variable_7_0=rulect_VariableDefinitionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_StructuralModelTypeRule());
	        }
       		add(
       			$current, 
       			"Variable",
        		lv_Variable_7_0, 
        		"ct_VariableDefinitionType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_StructuralModelTypeAccess().getImportMdef_ImportTypeParserRuleCall_8_0()); 
	    }
		lv_Import_8_0=rulemdef_ImportType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_StructuralModelTypeRule());
	        }
       		add(
       			$current, 
       			"Import",
        		lv_Import_8_0, 
        		"mdef_ImportType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_StructuralModelTypeAccess().getInitiaConditionMdef_InitialConditionTypeParserRuleCall_9_0()); 
	    }
		lv_InitiaCondition_9_0=rulemdef_InitialConditionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_StructuralModelTypeRule());
	        }
       		add(
       			$current, 
       			"InitiaCondition",
        		lv_InitiaCondition_9_0, 
        		"mdef_InitialConditionType");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_StructuralModelTypeAccess().getTAG_OPEN2ParserRuleCall_10()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_11='StructuralModel' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMdef_StructuralModelTypeAccess().getStructuralModelKeyword_11());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_StructuralModelTypeAccess().getTAG_CLOSEParserRuleCall_12()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemdef_ObservationModelType
entryRulemdef_ObservationModelType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_ObservationModelTypeRule()); }
	 iv_rulemdef_ObservationModelType=rulemdef_ObservationModelType 
	 { $current=$iv_rulemdef_ObservationModelType.current; } 
	 EOF 
;

// Rule mdef_ObservationModelType
rulemdef_ObservationModelType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMdef_ObservationModelTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='ObservationModel' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMdef_ObservationModelTypeAccess().getObservationModelKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ObservationModelTypeAccess().getIdCt_idParserRuleCall_2_0()); 
	    }
		lv_id_2_0=rulect_id		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ObservationModelTypeRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"ct_id");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ObservationModelTypeAccess().getNameCt_NameParserRuleCall_3_0()); 
	    }
		lv_Name_3_0=rulect_Name		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ObservationModelTypeRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_3_0, 
        		"ct_Name");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ObservationModelTypeAccess().getXmlnsCt_xmlnsParserRuleCall_4_0()); 
	    }
		lv_xmlns_4_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ObservationModelTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_4_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_ObservationModelTypeAccess().getTAG_CLOSEParserRuleCall_5()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ObservationModelTypeAccess().getParameterMdef_ParameterTypeParserRuleCall_6_0()); 
	    }
		lv_Parameter_6_0=rulemdef_ParameterType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ObservationModelTypeRule());
	        }
       		add(
       			$current, 
       			"Parameter",
        		lv_Parameter_6_0, 
        		"mdef_ParameterType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ObservationModelTypeAccess().getContinuousMdef_ContinuousTypeParserRuleCall_7_0()); 
	    }
		lv_Continuous_7_0=rulemdef_ContinuousType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ObservationModelTypeRule());
	        }
       		add(
       			$current, 
       			"Continuous",
        		lv_Continuous_7_0, 
        		"mdef_ContinuousType");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_ObservationModelTypeAccess().getTAG_OPEN2ParserRuleCall_8()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9='ObservationModel' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMdef_ObservationModelTypeAccess().getObservationModelKeyword_9());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_ObservationModelTypeAccess().getTAG_CLOSEParserRuleCall_10()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemdef_ParameterModelType
entryRulemdef_ParameterModelType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_ParameterModelTypeRule()); }
	 iv_rulemdef_ParameterModelType=rulemdef_ParameterModelType 
	 { $current=$iv_rulemdef_ParameterModelType.current; } 
	 EOF 
;

// Rule mdef_ParameterModelType
rulemdef_ParameterModelType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMdef_ParameterModelTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='ParameterModel' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMdef_ParameterModelTypeAccess().getParameterModelKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ParameterModelTypeAccess().getIdCt_idParserRuleCall_2_0()); 
	    }
		lv_id_2_0=rulect_id		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ParameterModelTypeRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"ct_id");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ParameterModelTypeAccess().getNameCt_NameParserRuleCall_3_0()); 
	    }
		lv_Name_3_0=rulect_Name		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ParameterModelTypeRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_3_0, 
        		"ct_Name");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ParameterModelTypeAccess().getXmlnsCt_xmlnsParserRuleCall_4_0()); 
	    }
		lv_xmlns_4_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ParameterModelTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_4_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_ParameterModelTypeAccess().getTAG_CLOSEParserRuleCall_5()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ParameterModelTypeAccess().getParameterMdef_ParameterTypeParserRuleCall_6_0()); 
	    }
		lv_Parameter_6_0=rulemdef_ParameterType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ParameterModelTypeRule());
	        }
       		add(
       			$current, 
       			"Parameter",
        		lv_Parameter_6_0, 
        		"mdef_ParameterType");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ParameterModelTypeAccess().getCorrelationMdef_CorrelationTypeParserRuleCall_7_0()); 
	    }
		lv_Correlation_7_0=rulemdef_CorrelationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ParameterModelTypeRule());
	        }
       		add(
       			$current, 
       			"Correlation",
        		lv_Correlation_7_0, 
        		"mdef_CorrelationType");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_ParameterModelTypeAccess().getTAG_OPEN2ParserRuleCall_8()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9='ParameterModel' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMdef_ParameterModelTypeAccess().getParameterModelKeyword_9());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_ParameterModelTypeAccess().getTAG_CLOSEParserRuleCall_10()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemdef_CorrelationType
entryRulemdef_CorrelationType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_CorrelationTypeRule()); }
	 iv_rulemdef_CorrelationType=rulemdef_CorrelationType 
	 { $current=$iv_rulemdef_CorrelationType.current; } 
	 EOF 
;

// Rule mdef_CorrelationType
rulemdef_CorrelationType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMdef_CorrelationTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='ParameterModel' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMdef_CorrelationTypeAccess().getParameterModelKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CorrelationTypeAccess().getLevelIdCt_levelIdParserRuleCall_2_0()); 
	    }
		lv_levelId_2_0=rulect_levelId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CorrelationTypeRule());
	        }
       		set(
       			$current, 
       			"levelId",
        		lv_levelId_2_0, 
        		"ct_levelId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CorrelationTypeAccess().getXmlnsCt_xmlnsParserRuleCall_3_0()); 
	    }
		lv_xmlns_3_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CorrelationTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_3_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_CorrelationTypeAccess().getTAG_CLOSEParserRuleCall_4()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CorrelationTypeAccess().getParamVar1Math_VarTypeParserRuleCall_5_0()); 
	    }
		lv_ParamVar1_5_0=ruleMath_VarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CorrelationTypeRule());
	        }
       		set(
       			$current, 
       			"ParamVar1",
        		lv_ParamVar1_5_0, 
        		"Math_VarType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CorrelationTypeAccess().getParamVar2Math_VarTypeParserRuleCall_6_0()); 
	    }
		lv_ParamVar2_6_0=ruleMath_VarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CorrelationTypeRule());
	        }
       		set(
       			$current, 
       			"ParamVar2",
        		lv_ParamVar2_6_0, 
        		"Math_VarType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CorrelationTypeAccess().getCorrelationCoefficientMdef_CorrelationCoefficientTypeParserRuleCall_7_0()); 
	    }
		lv_CorrelationCoefficient_7_0=rulemdef_CorrelationCoefficientType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CorrelationTypeRule());
	        }
       		set(
       			$current, 
       			"CorrelationCoefficient",
        		lv_CorrelationCoefficient_7_0, 
        		"mdef_CorrelationCoefficientType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CorrelationTypeAccess().getCovarianceMdefCovarianceTypeParserRuleCall_8_0()); 
	    }
		lv_Covariance_8_0=rulemdefCovarianceType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CorrelationTypeRule());
	        }
       		set(
       			$current, 
       			"Covariance",
        		lv_Covariance_8_0, 
        		"mdefCovarianceType");
	        afterParserOrEnumRuleCall();
	    }

)
)?
    { 
        newCompositeNode(grammarAccess.getMdef_CorrelationTypeAccess().getTAG_OPEN2ParserRuleCall_9()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_10='ParameterModel' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMdef_CorrelationTypeAccess().getParameterModelKeyword_10());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_CorrelationTypeAccess().getTAG_CLOSEParserRuleCall_11()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemdefCovarianceType
entryRulemdefCovarianceType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdefCovarianceTypeRule()); }
	 iv_rulemdefCovarianceType=rulemdefCovarianceType 
	 { $current=$iv_rulemdefCovarianceType.current; } 
	 EOF 
;

// Rule mdefCovarianceType
rulemdefCovarianceType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMdefCovarianceTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Covariance' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMdefCovarianceTypeAccess().getCovarianceKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdefCovarianceTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdefCovarianceTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdefCovarianceTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdefCovarianceTypeAccess().getExprCt_ScalarRhsParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=rulect_ScalarRhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdefCovarianceTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"ct_ScalarRhs");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMdefCovarianceTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='Covariance' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMdefCovarianceTypeAccess().getCovarianceKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getMdefCovarianceTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemdef_CorrelationCoefficientType
entryRulemdef_CorrelationCoefficientType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_CorrelationCoefficientTypeRule()); }
	 iv_rulemdef_CorrelationCoefficientType=rulemdef_CorrelationCoefficientType 
	 { $current=$iv_rulemdef_CorrelationCoefficientType.current; } 
	 EOF 
;

// Rule mdef_CorrelationCoefficientType
rulemdef_CorrelationCoefficientType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMdef_CorrelationCoefficientTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='CorrelationCoefficient' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMdef_CorrelationCoefficientTypeAccess().getCorrelationCoefficientKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CorrelationCoefficientTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CorrelationCoefficientTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_CorrelationCoefficientTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CorrelationCoefficientTypeAccess().getExprCt_ScalarRhsParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=rulect_ScalarRhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CorrelationCoefficientTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"ct_ScalarRhs");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMdef_CorrelationCoefficientTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='CorrelationCoefficient' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMdef_CorrelationCoefficientTypeAccess().getCorrelationCoefficientKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_CorrelationCoefficientTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemdef_CovariateModelType
entryRulemdef_CovariateModelType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_CovariateModelTypeRule()); }
	 iv_rulemdef_CovariateModelType=rulemdef_CovariateModelType 
	 { $current=$iv_rulemdef_CovariateModelType.current; } 
	 EOF 
;

// Rule mdef_CovariateModelType
rulemdef_CovariateModelType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMdef_CovariateModelTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='CovariateModel' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMdef_CovariateModelTypeAccess().getCovariateModelKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CovariateModelTypeAccess().getIdCt_idParserRuleCall_2_0()); 
	    }
		lv_id_2_0=rulect_id		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CovariateModelTypeRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"ct_id");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CovariateModelTypeAccess().getNameCt_NameParserRuleCall_3_0()); 
	    }
		lv_Name_3_0=rulect_Name		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CovariateModelTypeRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_3_0, 
        		"ct_Name");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CovariateModelTypeAccess().getXmlnsCt_xmlnsParserRuleCall_4_0()); 
	    }
		lv_xmlns_4_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CovariateModelTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_4_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_CovariateModelTypeAccess().getTAG_CLOSEParserRuleCall_5()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CovariateModelTypeAccess().getParameterMdef_ParameterTypeParserRuleCall_6_0()); 
	    }
		lv_Parameter_6_0=rulemdef_ParameterType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CovariateModelTypeRule());
	        }
       		add(
       			$current, 
       			"Parameter",
        		lv_Parameter_6_0, 
        		"mdef_ParameterType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CovariateModelTypeAccess().getCovariateMdef_CovariateVariabilityTypeParserRuleCall_7_0()); 
	    }
		lv_Covariate_7_0=rulemdef_CovariateVariabilityType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CovariateModelTypeRule());
	        }
       		add(
       			$current, 
       			"Covariate",
        		lv_Covariate_7_0, 
        		"mdef_CovariateVariabilityType");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    { 
        newCompositeNode(grammarAccess.getMdef_CovariateModelTypeAccess().getTAG_OPEN2ParserRuleCall_8()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9='CovariateModel' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMdef_CovariateModelTypeAccess().getCovariateModelKeyword_9());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_CovariateModelTypeAccess().getTAG_CLOSEParserRuleCall_10()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemdef_ParameterType
entryRulemdef_ParameterType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_ParameterTypeRule()); }
	 iv_rulemdef_ParameterType=rulemdef_ParameterType 
	 { $current=$iv_rulemdef_ParameterType.current; } 
	 EOF 
;

// Rule mdef_ParameterType
rulemdef_ParameterType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMdef_ParameterTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Parameter' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMdef_ParameterTypeAccess().getParameterKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ParameterTypeAccess().getNameCt_NameParserRuleCall_2_0()); 
	    }
		lv_Name_2_0=rulect_Name		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ParameterTypeRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_2_0, 
        		"ct_Name");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ParameterTypeAccess().getSymbIdMath_symbIdParserRuleCall_3_0()); 
	    }
		lv_symbId_3_0=ruleMath_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ParameterTypeRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_3_0, 
        		"Math_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ParameterTypeAccess().getTransformationMdef_transformationParserRuleCall_4_0()); 
	    }
		lv_transformation_4_0=rulemdef_transformation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ParameterTypeRule());
	        }
       		set(
       			$current, 
       			"transformation",
        		lv_transformation_4_0, 
        		"mdef_transformation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ParameterTypeAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ParameterTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getMdef_ParameterTypeAccess().getTAG_CLOSE2ParserRuleCall_6_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getMdef_ParameterTypeAccess().getTAG_CLOSEParserRuleCall_6_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ParameterTypeAccess().getVarMath_VarTypeParserRuleCall_6_1_1_0()); 
	    }
		lv_Var_8_0=ruleMath_VarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ParameterTypeRule());
	        }
       		set(
       			$current, 
       			"Var",
        		lv_Var_8_0, 
        		"Math_VarType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ParameterTypeAccess().getScalarMath_ScalarTypeParserRuleCall_6_1_2_0()); 
	    }
		lv_Scalar_9_0=ruleMath_ScalarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ParameterTypeRule());
	        }
       		set(
       			$current, 
       			"Scalar",
        		lv_Scalar_9_0, 
        		"Math_ScalarType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ParameterTypeAccess().getEquationMath_EquationTypeParserRuleCall_6_1_3_0()); 
	    }
		lv_Equation_10_0=ruleMath_EquationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ParameterTypeRule());
	        }
       		set(
       			$current, 
       			"Equation",
        		lv_Equation_10_0, 
        		"Math_EquationType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ParameterTypeAccess().getRandomEffectMdef_RandomEffectTypeParserRuleCall_6_1_4_0()); 
	    }
		lv_RandomEffect_11_0=rulemdef_RandomEffectType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ParameterTypeRule());
	        }
       		add(
       			$current, 
       			"RandomEffect",
        		lv_RandomEffect_11_0, 
        		"mdef_RandomEffectType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ParameterTypeAccess().getCovariateMdef_CovariateTypeParserRuleCall_6_1_5_0()); 
	    }
		lv_Covariate_12_0=rulemdef_CovariateType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ParameterTypeRule());
	        }
       		add(
       			$current, 
       			"Covariate",
        		lv_Covariate_12_0, 
        		"mdef_CovariateType");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_ParameterTypeAccess().getTAG_OPEN2ParserRuleCall_6_1_6()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_14='Parameter' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getMdef_ParameterTypeAccess().getParameterKeyword_6_1_7());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_ParameterTypeAccess().getTAG_CLOSEParserRuleCall_6_1_8()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRulemdef_CovariateVariabilityType
entryRulemdef_CovariateVariabilityType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_CovariateVariabilityTypeRule()); }
	 iv_rulemdef_CovariateVariabilityType=rulemdef_CovariateVariabilityType 
	 { $current=$iv_rulemdef_CovariateVariabilityType.current; } 
	 EOF 
;

// Rule mdef_CovariateVariabilityType
rulemdef_CovariateVariabilityType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMdef_CovariateVariabilityTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Covariate' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMdef_CovariateVariabilityTypeAccess().getCovariateKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CovariateVariabilityTypeAccess().getNameCt_NameParserRuleCall_2_0()); 
	    }
		lv_Name_2_0=rulect_Name		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CovariateVariabilityTypeRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_2_0, 
        		"ct_Name");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CovariateVariabilityTypeAccess().getSymbIdCt_symbIdParserRuleCall_3_0()); 
	    }
		lv_symbId_3_0=rulect_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CovariateVariabilityTypeRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_3_0, 
        		"ct_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CovariateVariabilityTypeAccess().getTransformationMdef_transformationParserRuleCall_4_0()); 
	    }
		lv_transformation_4_0=rulemdef_transformation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CovariateVariabilityTypeRule());
	        }
       		set(
       			$current, 
       			"transformation",
        		lv_transformation_4_0, 
        		"mdef_transformation");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CovariateVariabilityTypeAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CovariateVariabilityTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getMdef_CovariateVariabilityTypeAccess().getTAG_CLOSE2ParserRuleCall_6_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getMdef_CovariateVariabilityTypeAccess().getTAG_CLOSEParserRuleCall_6_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CovariateVariabilityTypeAccess().getContinuousMdef_ContinuousTypeParserRuleCall_6_1_1_0()); 
	    }
		lv_Continuous_8_0=rulemdef_ContinuousType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CovariateVariabilityTypeRule());
	        }
       		set(
       			$current, 
       			"Continuous",
        		lv_Continuous_8_0, 
        		"mdef_ContinuousType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CovariateVariabilityTypeAccess().getCategoricalMdef_CategoricalTypeParserRuleCall_6_1_2_0()); 
	    }
		lv_Categorical_9_0=rulemdef_CategoricalType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CovariateVariabilityTypeRule());
	        }
       		set(
       			$current, 
       			"Categorical",
        		lv_Categorical_9_0, 
        		"mdef_CategoricalType");
	        afterParserOrEnumRuleCall();
	    }

)
)?
    { 
        newCompositeNode(grammarAccess.getMdef_CovariateVariabilityTypeAccess().getTAG_OPEN2ParserRuleCall_6_1_3()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_11='Covariate' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMdef_CovariateVariabilityTypeAccess().getCovariateKeyword_6_1_4());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_CovariateVariabilityTypeAccess().getTAG_CLOSEParserRuleCall_6_1_5()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRulemdef_transformation
entryRulemdef_transformation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_transformationRule()); }
	 iv_rulemdef_transformation=rulemdef_transformation 
	 { $current=$iv_rulemdef_transformation.current; } 
	 EOF 
;

// Rule mdef_transformation
rulemdef_transformation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='transformation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMdef_transformationAccess().getTransformationKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMdef_transformationAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_transformationAccess().getTransformationMdef_ParameterTypeNameParserRuleCall_2_0()); 
	    }
		lv_transformation_2_0=rulemdef_ParameterTypeName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_transformationRule());
	        }
       		set(
       			$current, 
       			"transformation",
        		lv_transformation_2_0, 
        		"mdef_ParameterTypeName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulemdef_CategoricalType
entryRulemdef_CategoricalType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_CategoricalTypeRule()); }
	 iv_rulemdef_CategoricalType=rulemdef_CategoricalType 
	 { $current=$iv_rulemdef_CategoricalType.current; } 
	 EOF 
;

// Rule mdef_CategoricalType
rulemdef_CategoricalType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getMdef_CategoricalTypeAccess().getMdef_CategoricalTypeAction_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getMdef_CategoricalTypeAccess().getTAG_OPENParserRuleCall_1()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='Categorical' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMdef_CategoricalTypeAccess().getCategoricalKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CategoricalTypeAccess().getXmlnsCt_xmlnsParserRuleCall_3_0()); 
	    }
		lv_xmlns_3_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CategoricalTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_3_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_CategoricalTypeAccess().getTAG_CLOSEParserRuleCall_4()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CategoricalTypeAccess().getCategoryMdef_CategoryTypeParserRuleCall_5_0()); 
	    }
		lv_Category_5_0=rulemdef_CategoryType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CategoricalTypeRule());
	        }
       		add(
       			$current, 
       			"Category",
        		lv_Category_5_0, 
        		"mdef_CategoryType");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_CategoricalTypeAccess().getTAG_OPEN2ParserRuleCall_6()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='Categorical' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMdef_CategoricalTypeAccess().getCategoricalKeyword_7());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_CategoricalTypeAccess().getTAG_CLOSEParserRuleCall_8()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemdef_ContinuousType
entryRulemdef_ContinuousType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_ContinuousTypeRule()); }
	 iv_rulemdef_ContinuousType=rulemdef_ContinuousType 
	 { $current=$iv_rulemdef_ContinuousType.current; } 
	 EOF 
;

// Rule mdef_ContinuousType
rulemdef_ContinuousType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMdef_ContinuousTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Continuous' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMdef_ContinuousTypeAccess().getContinuousKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ContinuousTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ContinuousTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_ContinuousTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ContinuousTypeAccess().getDistributionUncert_DistributionTypeParserRuleCall_4_0()); 
	    }
		lv_Distribution_4_0=ruleuncert_DistributionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ContinuousTypeRule());
	        }
       		set(
       			$current, 
       			"Distribution",
        		lv_Distribution_4_0, 
        		"uncert_DistributionType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ContinuousTypeAccess().getTransformationMdef_TransformationTypeParserRuleCall_5_0()); 
	    }
		lv_Transformation_5_0=rulemdef_TransformationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ContinuousTypeRule());
	        }
       		set(
       			$current, 
       			"Transformation",
        		lv_Transformation_5_0, 
        		"mdef_TransformationType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMdef_ContinuousTypeAccess().getTAG_OPEN2ParserRuleCall_6()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='Continuous' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMdef_ContinuousTypeAccess().getContinuousKeyword_7());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_ContinuousTypeAccess().getTAG_CLOSEParserRuleCall_8()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemdef_TransformationType
entryRulemdef_TransformationType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_TransformationTypeRule()); }
	 iv_rulemdef_TransformationType=rulemdef_TransformationType 
	 { $current=$iv_rulemdef_TransformationType.current; } 
	 EOF 
;

// Rule mdef_TransformationType
rulemdef_TransformationType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMdef_TransformationTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Transformation' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMdef_TransformationTypeAccess().getTransformationKeyword_1());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_TransformationTypeAccess().getTAG_CLOSEParserRuleCall_2()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_TransformationTypeAccess().getExprCt_RhsParserRuleCall_3_0()); 
	    }
		lv_Expr_3_0=rulect_Rhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_TransformationTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_3_0, 
        		"ct_Rhs");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMdef_TransformationTypeAccess().getTAG_OPEN2ParserRuleCall_4()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_5='Transformation' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMdef_TransformationTypeAccess().getTransformationKeyword_5());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_TransformationTypeAccess().getTAG_CLOSEParserRuleCall_6()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemdef_VariabilityLevelDefnType
entryRulemdef_VariabilityLevelDefnType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_VariabilityLevelDefnTypeRule()); }
	 iv_rulemdef_VariabilityLevelDefnType=rulemdef_VariabilityLevelDefnType 
	 { $current=$iv_rulemdef_VariabilityLevelDefnType.current; } 
	 EOF 
;

// Rule mdef_VariabilityLevelDefnType
rulemdef_VariabilityLevelDefnType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMdef_VariabilityLevelDefnTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='VariabilityLevel' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMdef_VariabilityLevelDefnTypeAccess().getVariabilityLevelKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_VariabilityLevelDefnTypeAccess().getIdCt_idParserRuleCall_2_0()); 
	    }
		lv_id_2_0=rulect_id		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_VariabilityLevelDefnTypeRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"ct_id");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_VariabilityLevelDefnTypeAccess().getNameCt_NameParserRuleCall_3_0()); 
	    }
		lv_Name_3_0=rulect_Name		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_VariabilityLevelDefnTypeRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_3_0, 
        		"ct_Name");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_VariabilityLevelDefnTypeAccess().getXmlnsCt_xmlnsParserRuleCall_4_0()); 
	    }
		lv_xmlns_4_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_VariabilityLevelDefnTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_4_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getMdef_VariabilityLevelDefnTypeAccess().getTAG_CLOSE2ParserRuleCall_5_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getMdef_VariabilityLevelDefnTypeAccess().getTAG_CLOSEParserRuleCall_5_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getMdef_VariabilityLevelDefnTypeAccess().getTAG_OPEN2ParserRuleCall_5_1_1()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_8='VariabilityLevel' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMdef_VariabilityLevelDefnTypeAccess().getVariabilityLevelKeyword_5_1_2());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_VariabilityLevelDefnTypeAccess().getTAG_CLOSEParserRuleCall_5_1_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRulemdef_ImportType
entryRulemdef_ImportType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_ImportTypeRule()); }
	 iv_rulemdef_ImportType=rulemdef_ImportType 
	 { $current=$iv_rulemdef_ImportType.current; } 
	 EOF 
;

// Rule mdef_ImportType
rulemdef_ImportType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMdef_ImportTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Import' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMdef_ImportTypeAccess().getImportKeyword_1());
    }
	otherlv_2='resource' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMdef_ImportTypeAccess().getResourceKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMdef_ImportTypeAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ImportTypeAccess().getResourceXS_ANY_URIParserRuleCall_4_0()); 
	    }
		lv_resource_4_0=ruleXS_ANY_URI		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ImportTypeRule());
	        }
       		set(
       			$current, 
       			"resource",
        		lv_resource_4_0, 
        		"XS_ANY_URI");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='resourceType' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMdef_ImportTypeAccess().getResourceTypeKeyword_5());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMdef_ImportTypeAccess().getEqualsSignKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ImportTypeAccess().getResourceTypeMdef_ImportResourceTypeTypeParserRuleCall_7_0()); 
	    }
		lv_resourceType_7_0=rulemdef_ImportResourceTypeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ImportTypeRule());
	        }
       		set(
       			$current, 
       			"resourceType",
        		lv_resourceType_7_0, 
        		"mdef_ImportResourceTypeType");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8='source' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMdef_ImportTypeAccess().getSourceKeyword_8());
    }
	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMdef_ImportTypeAccess().getEqualsSignKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ImportTypeAccess().getSourceXS_TOKENParserRuleCall_10_0()); 
	    }
		lv_source_10_0=ruleXS_TOKEN		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ImportTypeRule());
	        }
       		set(
       			$current, 
       			"source",
        		lv_source_10_0, 
        		"XS_TOKEN");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ImportTypeAccess().getXmlnsCt_xmlnsParserRuleCall_11_0()); 
	    }
		lv_xmlns_11_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ImportTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_11_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_ImportTypeAccess().getTAG_CLOSEParserRuleCall_12()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ImportTypeAccess().getLinkMdef_ImportLinkTypeParserRuleCall_13_0()); 
	    }
		lv_Link_13_0=rulemdef_ImportLinkType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ImportTypeRule());
	        }
       		add(
       			$current, 
       			"Link",
        		lv_Link_13_0, 
        		"mdef_ImportLinkType");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    { 
        newCompositeNode(grammarAccess.getMdef_ImportTypeAccess().getTAG_OPEN2ParserRuleCall_14()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_15='Import' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getMdef_ImportTypeAccess().getImportKeyword_15());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_ImportTypeAccess().getTAG_CLOSEParserRuleCall_16()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemdef_ImportLinkType
entryRulemdef_ImportLinkType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_ImportLinkTypeRule()); }
	 iv_rulemdef_ImportLinkType=rulemdef_ImportLinkType 
	 { $current=$iv_rulemdef_ImportLinkType.current; } 
	 EOF 
;

// Rule mdef_ImportLinkType
rulemdef_ImportLinkType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMdef_ImportLinkTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Link' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMdef_ImportLinkTypeAccess().getLinkKeyword_1());
    }
	otherlv_2='symbolPtr' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMdef_ImportLinkTypeAccess().getSymbolPtrKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMdef_ImportLinkTypeAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ImportLinkTypeAccess().getSymbolPtrXS_STRINGParserRuleCall_4_0()); 
	    }
		lv_symbolPtr_4_0=ruleXS_STRING		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ImportLinkTypeRule());
	        }
       		set(
       			$current, 
       			"symbolPtr",
        		lv_symbolPtr_4_0, 
        		"XS_STRING");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ImportLinkTypeAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ImportLinkTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_ImportLinkTypeAccess().getTAG_CLOSEParserRuleCall_6()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ImportLinkTypeAccess().getVarMath_VarTypeParserRuleCall_7_0()); 
	    }
		lv_Var_7_0=ruleMath_VarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ImportLinkTypeRule());
	        }
       		set(
       			$current, 
       			"Var",
        		lv_Var_7_0, 
        		"Math_VarType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMdef_ImportLinkTypeAccess().getTAG_OPEN2ParserRuleCall_8()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9='Link' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMdef_ImportLinkTypeAccess().getLinkKeyword_9());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_ImportLinkTypeAccess().getTAG_CLOSEParserRuleCall_10()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemdef_ImportResourceTypeType
entryRulemdef_ImportResourceTypeType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_ImportResourceTypeTypeRule()); }
	 iv_rulemdef_ImportResourceTypeType=rulemdef_ImportResourceTypeType 
	 { $current=$iv_rulemdef_ImportResourceTypeType.current; } 
	 EOF 
;

// Rule mdef_ImportResourceTypeType
rulemdef_ImportResourceTypeType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_sbml_0_0=	'sbml' 
    {
        newLeafNode(lv_sbml_0_0, grammarAccess.getMdef_ImportResourceTypeTypeAccess().getSbmlSbmlKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMdef_ImportResourceTypeTypeRule());
	        }
       		setWithLastConsumed($current, "sbml", lv_sbml_0_0, "sbml");
	    }

)
)
    |(
(
		lv_pharmml_1_0=	'pharmml' 
    {
        newLeafNode(lv_pharmml_1_0, grammarAccess.getMdef_ImportResourceTypeTypeAccess().getPharmmlPharmmlKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMdef_ImportResourceTypeTypeRule());
	        }
       		setWithLastConsumed($current, "pharmml", lv_pharmml_1_0, "pharmml");
	    }

)
))
;





// Entry rule entryRulemdef_CovariateType
entryRulemdef_CovariateType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_CovariateTypeRule()); }
	 iv_rulemdef_CovariateType=rulemdef_CovariateType 
	 { $current=$iv_rulemdef_CovariateType.current; } 
	 EOF 
;

// Rule mdef_CovariateType
rulemdef_CovariateType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMdef_CovariateTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Covariate' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMdef_CovariateTypeAccess().getCovariateKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CovariateTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CovariateTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_CovariateTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CovariateTypeAccess().getVarMath_VarTypeParserRuleCall_4_0()); 
	    }
		lv_Var_4_0=ruleMath_VarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CovariateTypeRule());
	        }
       		set(
       			$current, 
       			"Var",
        		lv_Var_4_0, 
        		"Math_VarType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CovariateTypeAccess().getFixedEffectMdef_FixedEffectTypeParserRuleCall_5_0()); 
	    }
		lv_FixedEffect_5_0=rulemdef_FixedEffectType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CovariateTypeRule());
	        }
       		add(
       			$current, 
       			"FixedEffect",
        		lv_FixedEffect_5_0, 
        		"mdef_FixedEffectType");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    { 
        newCompositeNode(grammarAccess.getMdef_CovariateTypeAccess().getTAG_OPEN2ParserRuleCall_6()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='Covariate' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMdef_CovariateTypeAccess().getCovariateKeyword_7());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_CovariateTypeAccess().getTAG_CLOSEParserRuleCall_8()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemdef_FixedEffectType
entryRulemdef_FixedEffectType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_FixedEffectTypeRule()); }
	 iv_rulemdef_FixedEffectType=rulemdef_FixedEffectType 
	 { $current=$iv_rulemdef_FixedEffectType.current; } 
	 EOF 
;

// Rule mdef_FixedEffectType
rulemdef_FixedEffectType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMdef_FixedEffectTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='FixedEffect' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMdef_FixedEffectTypeAccess().getFixedEffectKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_FixedEffectTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_FixedEffectTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_FixedEffectTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_FixedEffectTypeAccess().getVarMath_VarTypeParserRuleCall_4_0()); 
	    }
		lv_Var_4_0=ruleMath_VarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_FixedEffectTypeRule());
	        }
       		set(
       			$current, 
       			"Var",
        		lv_Var_4_0, 
        		"Math_VarType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_FixedEffectTypeAccess().getCategoryMdef_CategoryTypeParserRuleCall_5_0()); 
	    }
		lv_Category_5_0=rulemdef_CategoryType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_FixedEffectTypeRule());
	        }
       		set(
       			$current, 
       			"Category",
        		lv_Category_5_0, 
        		"mdef_CategoryType");
	        afterParserOrEnumRuleCall();
	    }

)
)?
    { 
        newCompositeNode(grammarAccess.getMdef_FixedEffectTypeAccess().getTAG_OPEN2ParserRuleCall_6()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='FixedEffect' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMdef_FixedEffectTypeAccess().getFixedEffectKeyword_7());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_FixedEffectTypeAccess().getTAG_CLOSEParserRuleCall_8()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemdef_CategoryType
entryRulemdef_CategoryType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_CategoryTypeRule()); }
	 iv_rulemdef_CategoryType=rulemdef_CategoryType 
	 { $current=$iv_rulemdef_CategoryType.current; } 
	 EOF 
;

// Rule mdef_CategoryType
rulemdef_CategoryType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMdef_CategoryTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Category' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMdef_CategoryTypeAccess().getCategoryKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CategoryTypeAccess().getCatIdCt_catIdParserRuleCall_2_0()); 
	    }
		lv_catId_2_0=rulect_catId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CategoryTypeRule());
	        }
       		set(
       			$current, 
       			"catId",
        		lv_catId_2_0, 
        		"ct_catId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CategoryTypeAccess().getNameCt_NameParserRuleCall_3_0()); 
	    }
		lv_Name_3_0=rulect_Name		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CategoryTypeRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_3_0, 
        		"ct_Name");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CategoryTypeAccess().getXmlnsCt_xmlnsParserRuleCall_4_0()); 
	    }
		lv_xmlns_4_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CategoryTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_4_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_CategoryTypeAccess().getTAG_CLOSEParserRuleCall_5()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_CategoryTypeAccess().getProbabilityMdef_ProbabilityTypeParserRuleCall_6_0()); 
	    }
		lv_Probability_6_0=rulemdef_ProbabilityType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_CategoryTypeRule());
	        }
       		set(
       			$current, 
       			"Probability",
        		lv_Probability_6_0, 
        		"mdef_ProbabilityType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMdef_CategoryTypeAccess().getTAG_OPEN2ParserRuleCall_7()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_8='Category' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMdef_CategoryTypeAccess().getCategoryKeyword_8());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_CategoryTypeAccess().getTAG_CLOSEParserRuleCall_9()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemdef_ProbabilityType
entryRulemdef_ProbabilityType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_ProbabilityTypeRule()); }
	 iv_rulemdef_ProbabilityType=rulemdef_ProbabilityType 
	 { $current=$iv_rulemdef_ProbabilityType.current; } 
	 EOF 
;

// Rule mdef_ProbabilityType
rulemdef_ProbabilityType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMdef_ProbabilityTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Probability' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMdef_ProbabilityTypeAccess().getProbabilityKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ProbabilityTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ProbabilityTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_ProbabilityTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_ProbabilityTypeAccess().getExprCt_RhsParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=rulect_Rhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_ProbabilityTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"ct_Rhs");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMdef_ProbabilityTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='Probability' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMdef_ProbabilityTypeAccess().getProbabilityKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_ProbabilityTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemdef_RandomEffectType
entryRulemdef_RandomEffectType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_RandomEffectTypeRule()); }
	 iv_rulemdef_RandomEffectType=rulemdef_RandomEffectType 
	 { $current=$iv_rulemdef_RandomEffectType.current; } 
	 EOF 
;

// Rule mdef_RandomEffectType
rulemdef_RandomEffectType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMdef_RandomEffectTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='RandomEffect' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMdef_RandomEffectTypeAccess().getRandomEffectKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_RandomEffectTypeAccess().getLevelIdCt_levelIdParserRuleCall_2_0()); 
	    }
		lv_levelId_2_0=rulect_levelId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_RandomEffectTypeRule());
	        }
       		set(
       			$current, 
       			"levelId",
        		lv_levelId_2_0, 
        		"ct_levelId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_RandomEffectTypeAccess().getNameCt_NameParserRuleCall_3_0()); 
	    }
		lv_Name_3_0=rulect_Name		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_RandomEffectTypeRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_3_0, 
        		"ct_Name");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_RandomEffectTypeAccess().getSymbIdCt_symbIdParserRuleCall_4_0()); 
	    }
		lv_symbId_4_0=rulect_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_RandomEffectTypeRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_4_0, 
        		"ct_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_RandomEffectTypeAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_RandomEffectTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_RandomEffectTypeAccess().getTAG_CLOSEParserRuleCall_6()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_RandomEffectTypeAccess().getDistributionUncert_DistributionTypeParserRuleCall_7_0()); 
	    }
		lv_Distribution_7_0=ruleuncert_DistributionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_RandomEffectTypeRule());
	        }
       		set(
       			$current, 
       			"Distribution",
        		lv_Distribution_7_0, 
        		"uncert_DistributionType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMdef_RandomEffectTypeAccess().getTAG_OPEN2ParserRuleCall_8()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9='RandomEffect' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMdef_RandomEffectTypeAccess().getRandomEffectKeyword_9());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_RandomEffectTypeAccess().getTAG_CLOSEParserRuleCall_10()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemdef_InitialConditionType
entryRulemdef_InitialConditionType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMdef_InitialConditionTypeRule()); }
	 iv_rulemdef_InitialConditionType=rulemdef_InitialConditionType 
	 { $current=$iv_rulemdef_InitialConditionType.current; } 
	 EOF 
;

// Rule mdef_InitialConditionType
rulemdef_InitialConditionType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMdef_InitialConditionTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='InitialCondition' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMdef_InitialConditionTypeAccess().getInitialConditionKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_InitialConditionTypeAccess().getSymbIDMath_symbIdParserRuleCall_2_0()); 
	    }
		lv_symbID_2_0=ruleMath_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_InitialConditionTypeRule());
	        }
       		set(
       			$current, 
       			"symbID",
        		lv_symbID_2_0, 
        		"Math_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_InitialConditionTypeAccess().getBlockMath_blockParserRuleCall_3_0()); 
	    }
		lv_block_3_0=ruleMath_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_InitialConditionTypeRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_3_0, 
        		"Math_block");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_InitialConditionTypeAccess().getXmlnsCt_xmlnsParserRuleCall_4_0()); 
	    }
		lv_xmlns_4_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_InitialConditionTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_4_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMdef_InitialConditionTypeAccess().getTAG_CLOSEParserRuleCall_5()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMdef_InitialConditionTypeAccess().getExprCt_RhsParserRuleCall_6_0()); 
	    }
		lv_Expr_6_0=rulect_Rhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMdef_InitialConditionTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_6_0, 
        		"ct_Rhs");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMdef_InitialConditionTypeAccess().getTAG_OPEN2ParserRuleCall_7()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_8='InitialCondition' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMdef_InitialConditionTypeAccess().getInitialConditionKeyword_8());
    }

    { 
        newCompositeNode(grammarAccess.getMdef_InitialConditionTypeAccess().getTAG_CLOSEParserRuleCall_9()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuledesign_TrialDesignType
entryRuledesign_TrialDesignType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_TrialDesignTypeRule()); }
	 iv_ruledesign_TrialDesignType=ruledesign_TrialDesignType 
	 { $current=$iv_ruledesign_TrialDesignType.current; } 
	 EOF 
;

// Rule design_TrialDesignType
ruledesign_TrialDesignType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesign_TrialDesignTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Design' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDesign_TrialDesignTypeAccess().getDesignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_TrialDesignTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_TrialDesignTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getDesign_TrialDesignTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_TrialDesignTypeAccess().getTreatmentDesign_TreatmentTypeParserRuleCall_4_0()); 
	    }
		lv_Treatment_4_0=ruledesign_TreatmentType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_TrialDesignTypeRule());
	        }
       		add(
       			$current, 
       			"Treatment",
        		lv_Treatment_4_0, 
        		"design_TreatmentType");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_TrialDesignTypeAccess().getTreatmentEpochDesign_TreatmentEpohTypeParserRuleCall_5_0()); 
	    }
		lv_TreatmentEpoch_5_0=ruledesign_TreatmentEpohType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_TrialDesignTypeRule());
	        }
       		add(
       			$current, 
       			"TreatmentEpoch",
        		lv_TreatmentEpoch_5_0, 
        		"design_TreatmentEpohType");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_TrialDesignTypeAccess().getGroupDesign_GroupTypeParserRuleCall_6_0()); 
	    }
		lv_Group_6_0=ruledesign_GroupType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_TrialDesignTypeRule());
	        }
       		add(
       			$current, 
       			"Group",
        		lv_Group_6_0, 
        		"design_GroupType");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    { 
        newCompositeNode(grammarAccess.getDesign_TrialDesignTypeAccess().getTAG_OPEN2ParserRuleCall_7()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_8='Design' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDesign_TrialDesignTypeAccess().getDesignKeyword_8());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_TrialDesignTypeAccess().getTAG_CLOSEParserRuleCall_9()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuledesign_GroupType
entryRuledesign_GroupType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_GroupTypeRule()); }
	 iv_ruledesign_GroupType=ruledesign_GroupType 
	 { $current=$iv_ruledesign_GroupType.current; } 
	 EOF 
;

// Rule design_GroupType
ruledesign_GroupType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesign_GroupTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Group' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDesign_GroupTypeAccess().getGroupKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_GroupTypeAccess().getIdCt_idParserRuleCall_2_0()); 
	    }
		lv_id_2_0=rulect_id		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_GroupTypeRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"ct_id");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_GroupTypeAccess().getNameCt_NameParserRuleCall_3_0()); 
	    }
		lv_Name_3_0=rulect_Name		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_GroupTypeRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_3_0, 
        		"ct_Name");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_GroupTypeAccess().getXmlnsCt_xmlnsParserRuleCall_4_0()); 
	    }
		lv_xmlns_4_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_GroupTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_4_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getDesign_GroupTypeAccess().getTAG_CLOSEParserRuleCall_5()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_GroupTypeAccess().getTreatmentEpochRefDesign_TreatmentRefTypeParserRuleCall_6_0()); 
	    }
		lv_TreatmentEpochRef_6_0=ruledesign_TreatmentRefType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_GroupTypeRule());
	        }
       		add(
       			$current, 
       			"TreatmentEpochRef",
        		lv_TreatmentEpochRef_6_0, 
        		"design_TreatmentRefType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_GroupTypeAccess().getWashoutDesign_WashoutTypeParserRuleCall_7_0()); 
	    }
		lv_Washout_7_0=ruledesign_WashoutType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_GroupTypeRule());
	        }
       		add(
       			$current, 
       			"Washout",
        		lv_Washout_7_0, 
        		"design_WashoutType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_GroupTypeAccess().getIndividualsDesign_IdividualsTypeParserRuleCall_8_0()); 
	    }
		lv_Individuals_8_0=ruledesign_IdividualsType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_GroupTypeRule());
	        }
       		set(
       			$current, 
       			"Individuals",
        		lv_Individuals_8_0, 
        		"design_IdividualsType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getDesign_GroupTypeAccess().getTAG_OPEN2ParserRuleCall_9()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_10='Group' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDesign_GroupTypeAccess().getGroupKeyword_10());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_GroupTypeAccess().getTAG_CLOSEParserRuleCall_11()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuledesign_IdividualsType
entryRuledesign_IdividualsType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_IdividualsTypeRule()); }
	 iv_ruledesign_IdividualsType=ruledesign_IdividualsType 
	 { $current=$iv_ruledesign_IdividualsType.current; } 
	 EOF 
;

// Rule design_IdividualsType
ruledesign_IdividualsType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesign_IdividualsTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Individuals' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDesign_IdividualsTypeAccess().getIndividualsKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_IdividualsTypeAccess().getSymbIdCt_symbIdParserRuleCall_2_0()); 
	    }
		lv_symbId_2_0=rulect_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_IdividualsTypeRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_2_0, 
        		"ct_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_IdividualsTypeAccess().getNameCt_NameParserRuleCall_3_0()); 
	    }
		lv_Name_3_0=rulect_Name		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_IdividualsTypeRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_3_0, 
        		"ct_Name");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_IdividualsTypeAccess().getLevelIdCt_levelIdParserRuleCall_4_0()); 
	    }
		lv_levelId_4_0=rulect_levelId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_IdividualsTypeRule());
	        }
       		set(
       			$current, 
       			"levelId",
        		lv_levelId_4_0, 
        		"ct_levelId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_IdividualsTypeAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_IdividualsTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getDesign_IdividualsTypeAccess().getTAG_CLOSEParserRuleCall_6()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_IdividualsTypeAccess().getExprCt_RhsParserRuleCall_7_0()); 
	    }
		lv_Expr_7_0=rulect_Rhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_IdividualsTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_7_0, 
        		"ct_Rhs");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getDesign_IdividualsTypeAccess().getTAG_OPEN2ParserRuleCall_8()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9='Individuals' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDesign_IdividualsTypeAccess().getIndividualsKeyword_9());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_IdividualsTypeAccess().getTAG_CLOSEParserRuleCall_10()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuledesign_WashoutType
entryRuledesign_WashoutType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_WashoutTypeRule()); }
	 iv_ruledesign_WashoutType=ruledesign_WashoutType 
	 { $current=$iv_ruledesign_WashoutType.current; } 
	 EOF 
;

// Rule design_WashoutType
ruledesign_WashoutType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDesign_WashoutTypeAccess().getDesign_WashoutTypeAction_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getDesign_WashoutTypeAccess().getTAG_OPENParserRuleCall_1()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='Washout' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDesign_WashoutTypeAccess().getWashoutKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_WashoutTypeAccess().getXmlnsCt_xmlnsParserRuleCall_3_0()); 
	    }
		lv_xmlns_3_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_WashoutTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_3_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getDesign_WashoutTypeAccess().getTAG_CLOSE2ParserRuleCall_4_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getDesign_WashoutTypeAccess().getTAG_CLOSEParserRuleCall_4_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getDesign_WashoutTypeAccess().getTAG_OPEN2ParserRuleCall_4_1_1()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='Washout' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDesign_WashoutTypeAccess().getWashoutKeyword_4_1_2());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_WashoutTypeAccess().getTAG_CLOSEParserRuleCall_4_1_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRuledesign_TreatmentEpohType
entryRuledesign_TreatmentEpohType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_TreatmentEpohTypeRule()); }
	 iv_ruledesign_TreatmentEpohType=ruledesign_TreatmentEpohType 
	 { $current=$iv_ruledesign_TreatmentEpohType.current; } 
	 EOF 
;

// Rule design_TreatmentEpohType
ruledesign_TreatmentEpohType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesign_TreatmentEpohTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='TreatmentEpoch' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDesign_TreatmentEpohTypeAccess().getTreatmentEpochKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_TreatmentEpohTypeAccess().getSymbIdCt_symbIdParserRuleCall_2_0()); 
	    }
		lv_symbId_2_0=rulect_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_TreatmentEpohTypeRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_2_0, 
        		"ct_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_TreatmentEpohTypeAccess().getNameCt_NameParserRuleCall_3_0()); 
	    }
		lv_Name_3_0=rulect_Name		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_TreatmentEpohTypeRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_3_0, 
        		"ct_Name");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_TreatmentEpohTypeAccess().getXmlnsCt_xmlnsParserRuleCall_4_0()); 
	    }
		lv_xmlns_4_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_TreatmentEpohTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_4_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getDesign_TreatmentEpohTypeAccess().getTAG_CLOSEParserRuleCall_5()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_TreatmentEpohTypeAccess().getTreatmentRefDesign_TreatmentRefTypeParserRuleCall_6_0()); 
	    }
		lv_TreatmentRef_6_0=ruledesign_TreatmentRefType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_TreatmentEpohTypeRule());
	        }
       		add(
       			$current, 
       			"TreatmentRef",
        		lv_TreatmentRef_6_0, 
        		"design_TreatmentRefType");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_TreatmentEpohTypeAccess().getStartDesign_StartTypeParserRuleCall_7_0()); 
	    }
		lv_Start_7_0=ruledesign_StartType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_TreatmentEpohTypeRule());
	        }
       		set(
       			$current, 
       			"Start",
        		lv_Start_7_0, 
        		"design_StartType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_TreatmentEpohTypeAccess().getEndDesign_EndTypeParserRuleCall_8_0()); 
	    }
		lv_End_8_0=ruledesign_EndType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_TreatmentEpohTypeRule());
	        }
       		set(
       			$current, 
       			"End",
        		lv_End_8_0, 
        		"design_EndType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_TreatmentEpohTypeAccess().getOccasionDesign_OccasionTypeParserRuleCall_9_0()); 
	    }
		lv_Occasion_9_0=ruledesign_OccasionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_TreatmentEpohTypeRule());
	        }
       		set(
       			$current, 
       			"Occasion",
        		lv_Occasion_9_0, 
        		"design_OccasionType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getDesign_TreatmentEpohTypeAccess().getTAG_OPEN2ParserRuleCall_10()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_11='TreatmentEpoch' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDesign_TreatmentEpohTypeAccess().getTreatmentEpochKeyword_11());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_TreatmentEpohTypeAccess().getTAG_CLOSEParserRuleCall_12()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuledesign_OccasionType
entryRuledesign_OccasionType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_OccasionTypeRule()); }
	 iv_ruledesign_OccasionType=ruledesign_OccasionType 
	 { $current=$iv_ruledesign_OccasionType.current; } 
	 EOF 
;

// Rule design_OccasionType
ruledesign_OccasionType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesign_OccasionTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Occasion' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDesign_OccasionTypeAccess().getOccasionKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_OccasionTypeAccess().getSymbIdCt_symbIdParserRuleCall_2_0()); 
	    }
		lv_symbId_2_0=rulect_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_OccasionTypeRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_2_0, 
        		"ct_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_OccasionTypeAccess().getNameCt_NameParserRuleCall_3_0()); 
	    }
		lv_Name_3_0=rulect_Name		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_OccasionTypeRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_3_0, 
        		"ct_Name");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_OccasionTypeAccess().getLevelIdCt_levelIdParserRuleCall_4_0()); 
	    }
		lv_levelId_4_0=rulect_levelId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_OccasionTypeRule());
	        }
       		set(
       			$current, 
       			"levelId",
        		lv_levelId_4_0, 
        		"ct_levelId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_OccasionTypeAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_OccasionTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getDesign_OccasionTypeAccess().getTAG_CLOSEParserRuleCall_6()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_OccasionTypeAccess().getBeginDesign_BeginTypeParserRuleCall_7_0()); 
	    }
		lv_Begin_7_0=ruledesign_BeginType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_OccasionTypeRule());
	        }
       		set(
       			$current, 
       			"Begin",
        		lv_Begin_7_0, 
        		"design_BeginType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_OccasionTypeAccess().getEndDesign_EndTypeParserRuleCall_8_0()); 
	    }
		lv_End_8_0=ruledesign_EndType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_OccasionTypeRule());
	        }
       		set(
       			$current, 
       			"End",
        		lv_End_8_0, 
        		"design_EndType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getDesign_OccasionTypeAccess().getTAG_OPEN2ParserRuleCall_9()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_10='Occasion' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDesign_OccasionTypeAccess().getOccasionKeyword_10());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_OccasionTypeAccess().getTAG_CLOSEParserRuleCall_11()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuledesign_BeginType
entryRuledesign_BeginType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_BeginTypeRule()); }
	 iv_ruledesign_BeginType=ruledesign_BeginType 
	 { $current=$iv_ruledesign_BeginType.current; } 
	 EOF 
;

// Rule design_BeginType
ruledesign_BeginType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesign_BeginTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Begin' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDesign_BeginTypeAccess().getBeginKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_BeginTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_BeginTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getDesign_BeginTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_BeginTypeAccess().getExprCt_ScalarRhsParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=rulect_ScalarRhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_BeginTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"ct_ScalarRhs");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getDesign_BeginTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='Begin' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDesign_BeginTypeAccess().getBeginKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_BeginTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuledesign_EndType
entryRuledesign_EndType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_EndTypeRule()); }
	 iv_ruledesign_EndType=ruledesign_EndType 
	 { $current=$iv_ruledesign_EndType.current; } 
	 EOF 
;

// Rule design_EndType
ruledesign_EndType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesign_EndTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='End' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDesign_EndTypeAccess().getEndKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_EndTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_EndTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getDesign_EndTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_EndTypeAccess().getExprCt_ScalarRhsParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=rulect_ScalarRhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_EndTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"ct_ScalarRhs");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getDesign_EndTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='End' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDesign_EndTypeAccess().getEndKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_EndTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuledesign_StartType
entryRuledesign_StartType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_StartTypeRule()); }
	 iv_ruledesign_StartType=ruledesign_StartType 
	 { $current=$iv_ruledesign_StartType.current; } 
	 EOF 
;

// Rule design_StartType
ruledesign_StartType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesign_StartTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Start' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDesign_StartTypeAccess().getStartKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_StartTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_StartTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getDesign_StartTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_StartTypeAccess().getExprCt_ScalarRhsParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=rulect_ScalarRhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_StartTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"ct_ScalarRhs");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getDesign_StartTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='Start' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDesign_StartTypeAccess().getStartKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_StartTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuledesign_TreatmentRefType
entryRuledesign_TreatmentRefType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_TreatmentRefTypeRule()); }
	 iv_ruledesign_TreatmentRefType=ruledesign_TreatmentRefType 
	 { $current=$iv_ruledesign_TreatmentRefType.current; } 
	 EOF 
;

// Rule design_TreatmentRefType
ruledesign_TreatmentRefType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesign_TreatmentRefTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='TreatmentRef' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDesign_TreatmentRefTypeAccess().getTreatmentRefKeyword_1());
    }
	otherlv_2='idRef' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDesign_TreatmentRefTypeAccess().getIdRefKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDesign_TreatmentRefTypeAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_TreatmentRefTypeAccess().getIdRefMath_BlockNameTypeParserRuleCall_4_0()); 
	    }
		lv_idRef_4_0=ruleMath_BlockNameType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_TreatmentRefTypeRule());
	        }
       		set(
       			$current, 
       			"idRef",
        		lv_idRef_4_0, 
        		"Math_BlockNameType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_TreatmentRefTypeAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_TreatmentRefTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getDesign_TreatmentRefTypeAccess().getTAG_CLOSE2ParserRuleCall_6_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getDesign_TreatmentRefTypeAccess().getTAG_CLOSEParserRuleCall_6_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getDesign_TreatmentRefTypeAccess().getTAG_OPEN2ParserRuleCall_6_1_1()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9='TreatmentRef' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDesign_TreatmentRefTypeAccess().getTreatmentRefKeyword_6_1_2());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_TreatmentRefTypeAccess().getTAG_CLOSEParserRuleCall_6_1_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRuledesign_TreatmentType
entryRuledesign_TreatmentType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_TreatmentTypeRule()); }
	 iv_ruledesign_TreatmentType=ruledesign_TreatmentType 
	 { $current=$iv_ruledesign_TreatmentType.current; } 
	 EOF 
;

// Rule design_TreatmentType
ruledesign_TreatmentType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesign_TreatmentTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Treatment' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDesign_TreatmentTypeAccess().getTreatmentKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_TreatmentTypeAccess().getSymbIdMath_symbIdParserRuleCall_2_0()); 
	    }
		lv_symbId_2_0=ruleMath_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_TreatmentTypeRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_2_0, 
        		"Math_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_TreatmentTypeAccess().getNameCt_NameParserRuleCall_3_0()); 
	    }
		lv_Name_3_0=rulect_Name		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_TreatmentTypeRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_3_0, 
        		"ct_Name");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_TreatmentTypeAccess().getXmlnsCt_xmlnsParserRuleCall_4_0()); 
	    }
		lv_xmlns_4_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_TreatmentTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_4_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getDesign_TreatmentTypeAccess().getTAG_CLOSEParserRuleCall_5()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_TreatmentTypeAccess().getDosingRegimenDesign_DosingRegimenTypeParserRuleCall_6_0()); 
	    }
		lv_DosingRegimen_6_0=ruledesign_DosingRegimenType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_TreatmentTypeRule());
	        }
       		add(
       			$current, 
       			"DosingRegimen",
        		lv_DosingRegimen_6_0, 
        		"design_DosingRegimenType");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    { 
        newCompositeNode(grammarAccess.getDesign_TreatmentTypeAccess().getTAG_OPEN2ParserRuleCall_7()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_8='Treatment' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDesign_TreatmentTypeAccess().getTreatmentKeyword_8());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_TreatmentTypeAccess().getTAG_CLOSEParserRuleCall_9()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuledesign_DosingRegimenType
entryRuledesign_DosingRegimenType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_DosingRegimenTypeRule()); }
	 iv_ruledesign_DosingRegimenType=ruledesign_DosingRegimenType 
	 { $current=$iv_ruledesign_DosingRegimenType.current; } 
	 EOF 
;

// Rule design_DosingRegimenType
ruledesign_DosingRegimenType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDesign_DosingRegimenTypeAccess().getDesign_DosingRegimenTypeAction_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getDesign_DosingRegimenTypeAccess().getTAG_OPENParserRuleCall_1()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='DosingRegimen' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDesign_DosingRegimenTypeAccess().getDosingRegimenKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_DosingRegimenTypeAccess().getXmlnsCt_xmlnsParserRuleCall_3_0()); 
	    }
		lv_xmlns_3_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_DosingRegimenTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_3_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getDesign_DosingRegimenTypeAccess().getTAG_CLOSEParserRuleCall_4()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_DosingRegimenTypeAccess().getBolusDesign_BolusTypeParserRuleCall_5_0()); 
	    }
		lv_Bolus_5_0=ruledesign_BolusType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_DosingRegimenTypeRule());
	        }
       		set(
       			$current, 
       			"Bolus",
        		lv_Bolus_5_0, 
        		"design_BolusType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_DosingRegimenTypeAccess().getInfusionDesign_InfusionTypeParserRuleCall_6_0()); 
	    }
		lv_Infusion_6_0=ruledesign_InfusionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_DosingRegimenTypeRule());
	        }
       		set(
       			$current, 
       			"Infusion",
        		lv_Infusion_6_0, 
        		"design_InfusionType");
	        afterParserOrEnumRuleCall();
	    }

)
)?
    { 
        newCompositeNode(grammarAccess.getDesign_DosingRegimenTypeAccess().getTAG_OPEN2ParserRuleCall_7()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_8='DosingRegimen' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDesign_DosingRegimenTypeAccess().getDosingRegimenKeyword_8());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_DosingRegimenTypeAccess().getTAG_CLOSEParserRuleCall_9()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuledesign_InfusionType
entryRuledesign_InfusionType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_InfusionTypeRule()); }
	 iv_ruledesign_InfusionType=ruledesign_InfusionType 
	 { $current=$iv_ruledesign_InfusionType.current; } 
	 EOF 
;

// Rule design_InfusionType
ruledesign_InfusionType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesign_InfusionTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Infusion' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDesign_InfusionTypeAccess().getInfusionKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_InfusionTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_InfusionTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getDesign_InfusionTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_InfusionTypeAccess().getDoseAmountDesign_DoseAmountTypeParserRuleCall_4_0()); 
	    }
		lv_DoseAmount_4_0=ruledesign_DoseAmountType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_InfusionTypeRule());
	        }
       		set(
       			$current, 
       			"DoseAmount",
        		lv_DoseAmount_4_0, 
        		"design_DoseAmountType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_InfusionTypeAccess().getSteadyStateDesign_SteadyStateTypeParserRuleCall_5_0()); 
	    }
		lv_SteadyState_5_0=ruledesign_SteadyStateType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_InfusionTypeRule());
	        }
       		set(
       			$current, 
       			"SteadyState",
        		lv_SteadyState_5_0, 
        		"design_SteadyStateType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_InfusionTypeAccess().getDosingTimesDesign_DosingTimesTypeParserRuleCall_6_0()); 
	    }
		lv_DosingTimes_6_0=ruledesign_DosingTimesType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_InfusionTypeRule());
	        }
       		set(
       			$current, 
       			"DosingTimes",
        		lv_DosingTimes_6_0, 
        		"design_DosingTimesType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_InfusionTypeAccess().getDurationDesign_DurationTypeParserRuleCall_7_0()); 
	    }
		lv_Duration_7_0=ruledesign_DurationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_InfusionTypeRule());
	        }
       		set(
       			$current, 
       			"Duration",
        		lv_Duration_7_0, 
        		"design_DurationType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getDesign_InfusionTypeAccess().getTAG_OPEN2ParserRuleCall_8()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9='Infusion' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDesign_InfusionTypeAccess().getInfusionKeyword_9());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_InfusionTypeAccess().getTAG_CLOSEParserRuleCall_10()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuledesign_DurationType
entryRuledesign_DurationType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_DurationTypeRule()); }
	 iv_ruledesign_DurationType=ruledesign_DurationType 
	 { $current=$iv_ruledesign_DurationType.current; } 
	 EOF 
;

// Rule design_DurationType
ruledesign_DurationType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesign_DurationTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Duration' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDesign_DurationTypeAccess().getDurationKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_DurationTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_DurationTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getDesign_DurationTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_DurationTypeAccess().getExprDesign_DosingVariableTypeParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=ruledesign_DosingVariableType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_DurationTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"design_DosingVariableType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getDesign_DurationTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='Duration' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDesign_DurationTypeAccess().getDurationKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_DurationTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuledesign_BolusType
entryRuledesign_BolusType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_BolusTypeRule()); }
	 iv_ruledesign_BolusType=ruledesign_BolusType 
	 { $current=$iv_ruledesign_BolusType.current; } 
	 EOF 
;

// Rule design_BolusType
ruledesign_BolusType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesign_BolusTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Bolus' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDesign_BolusTypeAccess().getBolusKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_BolusTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_BolusTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getDesign_BolusTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_BolusTypeAccess().getDoseAmountDesign_DoseAmountTypeParserRuleCall_4_0()); 
	    }
		lv_DoseAmount_4_0=ruledesign_DoseAmountType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_BolusTypeRule());
	        }
       		set(
       			$current, 
       			"DoseAmount",
        		lv_DoseAmount_4_0, 
        		"design_DoseAmountType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_BolusTypeAccess().getSteadyStateDesign_SteadyStateTypeParserRuleCall_5_0()); 
	    }
		lv_SteadyState_5_0=ruledesign_SteadyStateType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_BolusTypeRule());
	        }
       		set(
       			$current, 
       			"SteadyState",
        		lv_SteadyState_5_0, 
        		"design_SteadyStateType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_BolusTypeAccess().getDosingTimesDesign_DosingTimesTypeParserRuleCall_6_0()); 
	    }
		lv_DosingTimes_6_0=ruledesign_DosingTimesType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_BolusTypeRule());
	        }
       		set(
       			$current, 
       			"DosingTimes",
        		lv_DosingTimes_6_0, 
        		"design_DosingTimesType");
	        afterParserOrEnumRuleCall();
	    }

)
)?
    { 
        newCompositeNode(grammarAccess.getDesign_BolusTypeAccess().getTAG_OPEN2ParserRuleCall_7()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_8='Bolus' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDesign_BolusTypeAccess().getBolusKeyword_8());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_BolusTypeAccess().getTAG_CLOSEParserRuleCall_9()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuledesign_DosingTimesType
entryRuledesign_DosingTimesType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_DosingTimesTypeRule()); }
	 iv_ruledesign_DosingTimesType=ruledesign_DosingTimesType 
	 { $current=$iv_ruledesign_DosingTimesType.current; } 
	 EOF 
;

// Rule design_DosingTimesType
ruledesign_DosingTimesType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesign_DosingTimesTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='DosingTimes' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDesign_DosingTimesTypeAccess().getDosingTimesKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_DosingTimesTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_DosingTimesTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getDesign_DosingTimesTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_DosingTimesTypeAccess().getExprCt_VectorTypeParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=rulect_VectorType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_DosingTimesTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"ct_VectorType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getDesign_DosingTimesTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='DosingTimes' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDesign_DosingTimesTypeAccess().getDosingTimesKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_DosingTimesTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuledesign_SteadyStateType
entryRuledesign_SteadyStateType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_SteadyStateTypeRule()); }
	 iv_ruledesign_SteadyStateType=ruledesign_SteadyStateType 
	 { $current=$iv_ruledesign_SteadyStateType.current; } 
	 EOF 
;

// Rule design_SteadyStateType
ruledesign_SteadyStateType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesign_SteadyStateTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='SteadyState' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDesign_SteadyStateTypeAccess().getSteadyStateKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_SteadyStateTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_SteadyStateTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getDesign_SteadyStateTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_SteadyStateTypeAccess().getDosingStartDesign_DosingStartTypeParserRuleCall_4_0()); 
	    }
		lv_DosingStart_4_0=ruledesign_DosingStartType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_SteadyStateTypeRule());
	        }
       		set(
       			$current, 
       			"DosingStart",
        		lv_DosingStart_4_0, 
        		"design_DosingStartType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_SteadyStateTypeAccess().getDosingPeriodDesign_DosingPeriodTypeParserRuleCall_5_0()); 
	    }
		lv_DosingPeriod_5_0=ruledesign_DosingPeriodType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_SteadyStateTypeRule());
	        }
       		set(
       			$current, 
       			"DosingPeriod",
        		lv_DosingPeriod_5_0, 
        		"design_DosingPeriodType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getDesign_SteadyStateTypeAccess().getTAG_OPEN2ParserRuleCall_6()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='SteadyState' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDesign_SteadyStateTypeAccess().getSteadyStateKeyword_7());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_SteadyStateTypeAccess().getTAG_CLOSEParserRuleCall_8()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuledesign_DosingStartType
entryRuledesign_DosingStartType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_DosingStartTypeRule()); }
	 iv_ruledesign_DosingStartType=ruledesign_DosingStartType 
	 { $current=$iv_ruledesign_DosingStartType.current; } 
	 EOF 
;

// Rule design_DosingStartType
ruledesign_DosingStartType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesign_DosingStartTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='DosingStart' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDesign_DosingStartTypeAccess().getDosingStartKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_DosingStartTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_DosingStartTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getDesign_DosingStartTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_DosingStartTypeAccess().getExprDesign_DosingVariableTypeParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=ruledesign_DosingVariableType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_DosingStartTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"design_DosingVariableType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getDesign_DosingStartTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='DosingStart' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDesign_DosingStartTypeAccess().getDosingStartKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_DosingStartTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuledesign_DosingPeriodType
entryRuledesign_DosingPeriodType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_DosingPeriodTypeRule()); }
	 iv_ruledesign_DosingPeriodType=ruledesign_DosingPeriodType 
	 { $current=$iv_ruledesign_DosingPeriodType.current; } 
	 EOF 
;

// Rule design_DosingPeriodType
ruledesign_DosingPeriodType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesign_DosingPeriodTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='DosingPeriod' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDesign_DosingPeriodTypeAccess().getDosingPeriodKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_DosingPeriodTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_DosingPeriodTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getDesign_DosingPeriodTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_DosingPeriodTypeAccess().getExprDesign_DosingVariableTypeParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=ruledesign_DosingVariableType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_DosingPeriodTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"design_DosingVariableType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getDesign_DosingPeriodTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='DosingPeriod' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDesign_DosingPeriodTypeAccess().getDosingPeriodKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_DosingPeriodTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuledesign_DoseAmountType
entryRuledesign_DoseAmountType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_DoseAmountTypeRule()); }
	 iv_ruledesign_DoseAmountType=ruledesign_DoseAmountType 
	 { $current=$iv_ruledesign_DoseAmountType.current; } 
	 EOF 
;

// Rule design_DoseAmountType
ruledesign_DoseAmountType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesign_DoseAmountTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='DoseAmount' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDesign_DoseAmountTypeAccess().getDoseAmountKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_DoseAmountTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_DoseAmountTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getDesign_DoseAmountTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_DoseAmountTypeAccess().getExprDesign_DosingVariableTypeParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=ruledesign_DosingVariableType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_DoseAmountTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"design_DosingVariableType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getDesign_DoseAmountTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='DoseAmount' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDesign_DoseAmountTypeAccess().getDoseAmountKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_DoseAmountTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuledesign_DosingVariableType
entryRuledesign_DosingVariableType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_DosingVariableTypeRule()); }
	 iv_ruledesign_DosingVariableType=ruledesign_DosingVariableType 
	 { $current=$iv_ruledesign_DosingVariableType.current; } 
	 EOF 
;

// Rule design_DosingVariableType
ruledesign_DosingVariableType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_DosingVariableTypeAccess().getDoseVarDesign_DoseVarTypeParserRuleCall_0_0()); 
	    }
		lv_DoseVar_0_0=ruledesign_DoseVarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_DosingVariableTypeRule());
	        }
       		set(
       			$current, 
       			"DoseVar",
        		lv_DoseVar_0_0, 
        		"design_DoseVarType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_DosingVariableTypeAccess().getTargetVarDesign_TargetVarTypeParserRuleCall_1_0()); 
	    }
		lv_TargetVar_1_0=ruledesign_TargetVarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_DosingVariableTypeRule());
	        }
       		set(
       			$current, 
       			"TargetVar",
        		lv_TargetVar_1_0, 
        		"design_TargetVarType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_DosingVariableTypeAccess().getAmountDesign_AmountTypeParserRuleCall_2_0()); 
	    }
		lv_Amount_2_0=ruledesign_AmountType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_DosingVariableTypeRule());
	        }
       		set(
       			$current, 
       			"Amount",
        		lv_Amount_2_0, 
        		"design_AmountType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuledesign_AmountType
entryRuledesign_AmountType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_AmountTypeRule()); }
	 iv_ruledesign_AmountType=ruledesign_AmountType 
	 { $current=$iv_ruledesign_AmountType.current; } 
	 EOF 
;

// Rule design_AmountType
ruledesign_AmountType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesign_AmountTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Amount' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDesign_AmountTypeAccess().getAmountKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_AmountTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_AmountTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getDesign_AmountTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_AmountTypeAccess().getExprCt_RhsParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=rulect_Rhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_AmountTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"ct_Rhs");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getDesign_AmountTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='Amount' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDesign_AmountTypeAccess().getAmountKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_AmountTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuledesign_TargetVarType
entryRuledesign_TargetVarType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_TargetVarTypeRule()); }
	 iv_ruledesign_TargetVarType=ruledesign_TargetVarType 
	 { $current=$iv_ruledesign_TargetVarType.current; } 
	 EOF 
;

// Rule design_TargetVarType
ruledesign_TargetVarType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesign_TargetVarTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='TargetVar' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDesign_TargetVarTypeAccess().getTargetVarKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_TargetVarTypeAccess().getSymbIdMath_symbIdParserRuleCall_2_0()); 
	    }
		lv_symbId_2_0=ruleMath_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_TargetVarTypeRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_2_0, 
        		"Math_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_TargetVarTypeAccess().getBlockMath_blockParserRuleCall_3_0()); 
	    }
		lv_block_3_0=ruleMath_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_TargetVarTypeRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_3_0, 
        		"Math_block");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_TargetVarTypeAccess().getXmlnsCt_xmlnsParserRuleCall_4_0()); 
	    }
		lv_xmlns_4_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_TargetVarTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_4_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getDesign_TargetVarTypeAccess().getTAG_CLOSE2ParserRuleCall_5_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getDesign_TargetVarTypeAccess().getTAG_CLOSEParserRuleCall_5_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getDesign_TargetVarTypeAccess().getTAG_OPEN2ParserRuleCall_5_1_1()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_8='TargetVar' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDesign_TargetVarTypeAccess().getTargetVarKeyword_5_1_2());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_TargetVarTypeAccess().getTAG_CLOSEParserRuleCall_5_1_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRuledesign_DoseVarType
entryRuledesign_DoseVarType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDesign_DoseVarTypeRule()); }
	 iv_ruledesign_DoseVarType=ruledesign_DoseVarType 
	 { $current=$iv_ruledesign_DoseVarType.current; } 
	 EOF 
;

// Rule design_DoseVarType
ruledesign_DoseVarType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getDesign_DoseVarTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='DoseVar' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDesign_DoseVarTypeAccess().getDoseVarKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_DoseVarTypeAccess().getSymbIdMath_symbIdParserRuleCall_2_0()); 
	    }
		lv_symbId_2_0=ruleMath_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_DoseVarTypeRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_2_0, 
        		"Math_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_DoseVarTypeAccess().getBlockMath_blockParserRuleCall_3_0()); 
	    }
		lv_block_3_0=ruleMath_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_DoseVarTypeRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_3_0, 
        		"Math_block");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDesign_DoseVarTypeAccess().getXmlnsCt_xmlnsParserRuleCall_4_0()); 
	    }
		lv_xmlns_4_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDesign_DoseVarTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_4_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getDesign_DoseVarTypeAccess().getTAG_CLOSE2ParserRuleCall_5_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getDesign_DoseVarTypeAccess().getTAG_CLOSEParserRuleCall_5_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getDesign_DoseVarTypeAccess().getTAG_OPEN2ParserRuleCall_5_1_1()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_8='DoseVar' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDesign_DoseVarTypeAccess().getDoseVarKeyword_5_1_2());
    }

    { 
        newCompositeNode(grammarAccess.getDesign_DoseVarTypeAccess().getTAG_CLOSEParserRuleCall_5_1_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRulemsteps_ModelingSteps
entryRulemsteps_ModelingSteps returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMsteps_ModelingStepsRule()); }
	 iv_rulemsteps_ModelingSteps=rulemsteps_ModelingSteps 
	 { $current=$iv_rulemsteps_ModelingSteps.current; } 
	 EOF 
;

// Rule msteps_ModelingSteps
rulemsteps_ModelingSteps returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMsteps_ModelingStepsAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='ModelingSteps' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMsteps_ModelingStepsAccess().getModelingStepsKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_ModelingStepsAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_ModelingStepsRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMsteps_ModelingStepsAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_ModelingStepsAccess().getVariableCt_VariableDefinitionTypeParserRuleCall_4_0()); 
	    }
		lv_Variable_4_0=rulect_VariableDefinitionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_ModelingStepsRule());
	        }
       		add(
       			$current, 
       			"Variable",
        		lv_Variable_4_0, 
        		"ct_VariableDefinitionType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_ModelingStepsAccess().getEstimationStepMsteps_EstimationStepParserRuleCall_5_0()); 
	    }
		lv_EstimationStep_5_0=rulemsteps_EstimationStep		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_ModelingStepsRule());
	        }
       		add(
       			$current, 
       			"EstimationStep",
        		lv_EstimationStep_5_0, 
        		"msteps_EstimationStep");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_ModelingStepsAccess().getSimulationStepMsteps_SimulationStepParserRuleCall_6_0()); 
	    }
		lv_SimulationStep_6_0=rulemsteps_SimulationStep		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_ModelingStepsRule());
	        }
       		add(
       			$current, 
       			"SimulationStep",
        		lv_SimulationStep_6_0, 
        		"msteps_SimulationStep");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_ModelingStepsAccess().getStepDependenciesMsteps_StepDependenciesTypeParserRuleCall_7_0()); 
	    }
		lv_StepDependencies_7_0=rulemsteps_StepDependenciesType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_ModelingStepsRule());
	        }
       		set(
       			$current, 
       			"StepDependencies",
        		lv_StepDependencies_7_0, 
        		"msteps_StepDependenciesType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMsteps_ModelingStepsAccess().getTAG_OPEN2ParserRuleCall_8()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9='ModelingSteps' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMsteps_ModelingStepsAccess().getModelingStepsKeyword_9());
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_ModelingStepsAccess().getTAG_CLOSEParserRuleCall_10()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemsteps_StepDependenciesType
entryRulemsteps_StepDependenciesType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMsteps_StepDependenciesTypeRule()); }
	 iv_rulemsteps_StepDependenciesType=rulemsteps_StepDependenciesType 
	 { $current=$iv_rulemsteps_StepDependenciesType.current; } 
	 EOF 
;

// Rule msteps_StepDependenciesType
rulemsteps_StepDependenciesType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMsteps_StepDependenciesTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='StepDependencies' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMsteps_StepDependenciesTypeAccess().getStepDependenciesKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_StepDependenciesTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_StepDependenciesTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMsteps_StepDependenciesTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_StepDependenciesTypeAccess().getDescriptionCt_AnnotationTypeParserRuleCall_4_0()); 
	    }
		lv_Description_4_0=rulect_AnnotationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_StepDependenciesTypeRule());
	        }
       		set(
       			$current, 
       			"Description",
        		lv_Description_4_0, 
        		"ct_AnnotationType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_StepDependenciesTypeAccess().getStepMsteps_StepTypeParserRuleCall_5_0()); 
	    }
		lv_Step_5_0=rulemsteps_StepType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_StepDependenciesTypeRule());
	        }
       		add(
       			$current, 
       			"Step",
        		lv_Step_5_0, 
        		"msteps_StepType");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    { 
        newCompositeNode(grammarAccess.getMsteps_StepDependenciesTypeAccess().getTAG_OPEN2ParserRuleCall_6()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='StepDependencies' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMsteps_StepDependenciesTypeAccess().getStepDependenciesKeyword_7());
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_StepDependenciesTypeAccess().getTAG_CLOSEParserRuleCall_8()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemsteps_StepType
entryRulemsteps_StepType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMsteps_StepTypeRule()); }
	 iv_rulemsteps_StepType=rulemsteps_StepType 
	 { $current=$iv_rulemsteps_StepType.current; } 
	 EOF 
;

// Rule msteps_StepType
rulemsteps_StepType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMsteps_StepTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Step' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMsteps_StepTypeAccess().getStepKeyword_1());
    }
	otherlv_2='idRef' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMsteps_StepTypeAccess().getIdRefKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMsteps_StepTypeAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_StepTypeAccess().getIdRefXS_STRINGParserRuleCall_4_0()); 
	    }
		lv_idRef_4_0=ruleXS_STRING		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_StepTypeRule());
	        }
       		set(
       			$current, 
       			"idRef",
        		lv_idRef_4_0, 
        		"XS_STRING");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_StepTypeAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_StepTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMsteps_StepTypeAccess().getTAG_CLOSEParserRuleCall_6()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_StepTypeAccess().getDependantStepMsteps_DependantStepTypeParserRuleCall_7_0()); 
	    }
		lv_DependantStep_7_0=rulemsteps_DependantStepType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_StepTypeRule());
	        }
       		add(
       			$current, 
       			"DependantStep",
        		lv_DependantStep_7_0, 
        		"msteps_DependantStepType");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    { 
        newCompositeNode(grammarAccess.getMsteps_StepTypeAccess().getTAG_OPEN2ParserRuleCall_8()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9='Step' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMsteps_StepTypeAccess().getStepKeyword_9());
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_StepTypeAccess().getTAG_CLOSEParserRuleCall_10()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemsteps_DependantStepType
entryRulemsteps_DependantStepType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMsteps_DependantStepTypeRule()); }
	 iv_rulemsteps_DependantStepType=rulemsteps_DependantStepType 
	 { $current=$iv_rulemsteps_DependantStepType.current; } 
	 EOF 
;

// Rule msteps_DependantStepType
rulemsteps_DependantStepType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMsteps_DependantStepTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='DependantStep' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMsteps_DependantStepTypeAccess().getDependantStepKeyword_1());
    }
	otherlv_2='idRef' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMsteps_DependantStepTypeAccess().getIdRefKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMsteps_DependantStepTypeAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_DependantStepTypeAccess().getIdRefCt_BlockNameTypeParserRuleCall_4_0()); 
	    }
		lv_idRef_4_0=rulect_BlockNameType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_DependantStepTypeRule());
	        }
       		set(
       			$current, 
       			"idRef",
        		lv_idRef_4_0, 
        		"ct_BlockNameType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_DependantStepTypeAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_DependantStepTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getMsteps_DependantStepTypeAccess().getTAG_CLOSE2ParserRuleCall_6_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getMsteps_DependantStepTypeAccess().getTAG_CLOSEParserRuleCall_6_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_DependantStepTypeAccess().getTAG_OPEN2ParserRuleCall_6_1_1()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9='DependantStep' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMsteps_DependantStepTypeAccess().getDependantStepKeyword_6_1_2());
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_DependantStepTypeAccess().getTAG_CLOSEParserRuleCall_6_1_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRulemsteps_EstimationStep
entryRulemsteps_EstimationStep returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMsteps_EstimationStepRule()); }
	 iv_rulemsteps_EstimationStep=rulemsteps_EstimationStep 
	 { $current=$iv_rulemsteps_EstimationStep.current; } 
	 EOF 
;

// Rule msteps_EstimationStep
rulemsteps_EstimationStep returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMsteps_EstimationStepAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='EstimationStep' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMsteps_EstimationStepAccess().getEstimationStepKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_EstimationStepAccess().getIdCt_idParserRuleCall_2_0()); 
	    }
		lv_id_2_0=rulect_id		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_EstimationStepRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"ct_id");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_EstimationStepAccess().getXmlnsCt_xmlnsParserRuleCall_3_0()); 
	    }
		lv_xmlns_3_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_EstimationStepRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_3_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMsteps_EstimationStepAccess().getTAG_CLOSEParserRuleCall_4()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_EstimationStepAccess().getDescriptionCt_AnnotationTypeParserRuleCall_5_0()); 
	    }
		lv_Description_5_0=rulect_AnnotationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_EstimationStepRule());
	        }
       		set(
       			$current, 
       			"Description",
        		lv_Description_5_0, 
        		"ct_AnnotationType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_EstimationStepAccess().getInitialValueMsteps_InitialValueTypeParserRuleCall_6_0()); 
	    }
		lv_InitialValue_6_0=rulemsteps_InitialValueType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_EstimationStepRule());
	        }
       		add(
       			$current, 
       			"InitialValue",
        		lv_InitialValue_6_0, 
        		"msteps_InitialValueType");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_EstimationStepAccess().getObjectiveDataSetMsteps_ObjectiveDataSetTypeParserRuleCall_7_0()); 
	    }
		lv_ObjectiveDataSet_7_0=rulemsteps_ObjectiveDataSetType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_EstimationStepRule());
	        }
       		set(
       			$current, 
       			"ObjectiveDataSet",
        		lv_ObjectiveDataSet_7_0, 
        		"msteps_ObjectiveDataSetType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_EstimationStepAccess().getParametersToEstimateMsteps_ParametersToEstimateTypeParserRuleCall_8_0()); 
	    }
		lv_ParametersToEstimate_8_0=rulemsteps_ParametersToEstimateType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_EstimationStepRule());
	        }
       		set(
       			$current, 
       			"ParametersToEstimate",
        		lv_ParametersToEstimate_8_0, 
        		"msteps_ParametersToEstimateType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_EstimationStepAccess().getEstimationOperationMsteps_EstimationOperationTypeParserRuleCall_9_0()); 
	    }
		lv_EstimationOperation_9_0=rulemsteps_EstimationOperationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_EstimationStepRule());
	        }
       		add(
       			$current, 
       			"EstimationOperation",
        		lv_EstimationOperation_9_0, 
        		"msteps_EstimationOperationType");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    { 
        newCompositeNode(grammarAccess.getMsteps_EstimationStepAccess().getTAG_OPEN2ParserRuleCall_10()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_11='EstimationStep' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMsteps_EstimationStepAccess().getEstimationStepKeyword_11());
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_EstimationStepAccess().getTAG_CLOSEParserRuleCall_12()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemsteps_ParametersToEstimateType
entryRulemsteps_ParametersToEstimateType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMsteps_ParametersToEstimateTypeRule()); }
	 iv_rulemsteps_ParametersToEstimateType=rulemsteps_ParametersToEstimateType 
	 { $current=$iv_rulemsteps_ParametersToEstimateType.current; } 
	 EOF 
;

// Rule msteps_ParametersToEstimateType
rulemsteps_ParametersToEstimateType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMsteps_ParametersToEstimateTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='ParametersToEstimate' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMsteps_ParametersToEstimateTypeAccess().getParametersToEstimateKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_ParametersToEstimateTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_ParametersToEstimateTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMsteps_ParametersToEstimateTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_ParametersToEstimateTypeAccess().getVariableMSteps_VariableEstimateTypeParserRuleCall_4_0()); 
	    }
		lv_Variable_4_0=rulemSteps_VariableEstimateType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_ParametersToEstimateTypeRule());
	        }
       		add(
       			$current, 
       			"Variable",
        		lv_Variable_4_0, 
        		"mSteps_VariableEstimateType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMsteps_ParametersToEstimateTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='ParametersToEstimate' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMsteps_ParametersToEstimateTypeAccess().getParametersToEstimateKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_ParametersToEstimateTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemSteps_VariableEstimateType
entryRulemSteps_VariableEstimateType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMSteps_VariableEstimateTypeRule()); }
	 iv_rulemSteps_VariableEstimateType=rulemSteps_VariableEstimateType 
	 { $current=$iv_rulemSteps_VariableEstimateType.current; } 
	 EOF 
;

// Rule mSteps_VariableEstimateType
rulemSteps_VariableEstimateType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMSteps_VariableEstimateTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Variable' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMSteps_VariableEstimateTypeAccess().getVariableKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMSteps_VariableEstimateTypeAccess().getSymbIDMath_symbIdParserRuleCall_2_0()); 
	    }
		lv_symbID_2_0=ruleMath_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMSteps_VariableEstimateTypeRule());
	        }
       		set(
       			$current, 
       			"symbID",
        		lv_symbID_2_0, 
        		"Math_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMSteps_VariableEstimateTypeAccess().getFixedMSteps_fixedParserRuleCall_3_0()); 
	    }
		lv_fixed_3_0=rulemSteps_fixed		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMSteps_VariableEstimateTypeRule());
	        }
       		set(
       			$current, 
       			"fixed",
        		lv_fixed_3_0, 
        		"mSteps_fixed");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMSteps_VariableEstimateTypeAccess().getBlockMath_blockParserRuleCall_4_0()); 
	    }
		lv_block_4_0=ruleMath_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMSteps_VariableEstimateTypeRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_4_0, 
        		"Math_block");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMSteps_VariableEstimateTypeAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMSteps_VariableEstimateTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMSteps_VariableEstimateTypeAccess().getTAG_CLOSEParserRuleCall_6()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMSteps_VariableEstimateTypeAccess().getInitialEstimateMSteps_InitialEstimateTypeParserRuleCall_7_0()); 
	    }
		lv_InitialEstimate_7_0=rulemSteps_InitialEstimateType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMSteps_VariableEstimateTypeRule());
	        }
       		set(
       			$current, 
       			"InitialEstimate",
        		lv_InitialEstimate_7_0, 
        		"mSteps_InitialEstimateType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMSteps_VariableEstimateTypeAccess().getLowerBoundMSteps_LowerBoundTypeParserRuleCall_8_0()); 
	    }
		lv_LowerBound_8_0=rulemSteps_LowerBoundType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMSteps_VariableEstimateTypeRule());
	        }
       		set(
       			$current, 
       			"LowerBound",
        		lv_LowerBound_8_0, 
        		"mSteps_LowerBoundType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMSteps_VariableEstimateTypeAccess().getUpperBoundMSteps_UpperBoundTypeParserRuleCall_9_0()); 
	    }
		lv_UpperBound_9_0=rulemSteps_UpperBoundType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMSteps_VariableEstimateTypeRule());
	        }
       		set(
       			$current, 
       			"UpperBound",
        		lv_UpperBound_9_0, 
        		"mSteps_UpperBoundType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMSteps_VariableEstimateTypeAccess().getTAG_OPEN2ParserRuleCall_10()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_11='Variable' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMSteps_VariableEstimateTypeAccess().getVariableKeyword_11());
    }

    { 
        newCompositeNode(grammarAccess.getMSteps_VariableEstimateTypeAccess().getTAG_CLOSEParserRuleCall_12()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemSteps_fixed
entryRulemSteps_fixed returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMSteps_fixedRule()); }
	 iv_rulemSteps_fixed=rulemSteps_fixed 
	 { $current=$iv_rulemSteps_fixed.current; } 
	 EOF 
;

// Rule mSteps_fixed
rulemSteps_fixed returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='fixed' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMSteps_fixedAccess().getFixedKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMSteps_fixedAccess().getEqualsSignKeyword_1());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getMSteps_fixedAccess().getFixedMath_TRUEParserRuleCall_2_0_0()); 
	    }
		lv_fixed_2_1=ruleMath_TRUE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMSteps_fixedRule());
	        }
       		set(
       			$current, 
       			"fixed",
        		lv_fixed_2_1, 
        		"Math_TRUE");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getMSteps_fixedAccess().getFixedMath_FALSEParserRuleCall_2_0_1()); 
	    }
		lv_fixed_2_2=ruleMath_FALSE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMSteps_fixedRule());
	        }
       		set(
       			$current, 
       			"fixed",
        		lv_fixed_2_2, 
        		"Math_FALSE");
	        afterParserOrEnumRuleCall();
	    }

)

)
))
;





// Entry rule entryRulemSteps_UpperBoundType
entryRulemSteps_UpperBoundType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMSteps_UpperBoundTypeRule()); }
	 iv_rulemSteps_UpperBoundType=rulemSteps_UpperBoundType 
	 { $current=$iv_rulemSteps_UpperBoundType.current; } 
	 EOF 
;

// Rule mSteps_UpperBoundType
rulemSteps_UpperBoundType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMSteps_UpperBoundTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='UpperBound' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMSteps_UpperBoundTypeAccess().getUpperBoundKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMSteps_UpperBoundTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMSteps_UpperBoundTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMSteps_UpperBoundTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMSteps_UpperBoundTypeAccess().getExprCt_ScalarRhsParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=rulect_ScalarRhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMSteps_UpperBoundTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"ct_ScalarRhs");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMSteps_UpperBoundTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='UpperBound' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMSteps_UpperBoundTypeAccess().getUpperBoundKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getMSteps_UpperBoundTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemSteps_LowerBoundType
entryRulemSteps_LowerBoundType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMSteps_LowerBoundTypeRule()); }
	 iv_rulemSteps_LowerBoundType=rulemSteps_LowerBoundType 
	 { $current=$iv_rulemSteps_LowerBoundType.current; } 
	 EOF 
;

// Rule mSteps_LowerBoundType
rulemSteps_LowerBoundType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMSteps_LowerBoundTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='LowerBound' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMSteps_LowerBoundTypeAccess().getLowerBoundKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMSteps_LowerBoundTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMSteps_LowerBoundTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMSteps_LowerBoundTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMSteps_LowerBoundTypeAccess().getExprCt_ScalarRhsParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=rulect_ScalarRhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMSteps_LowerBoundTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"ct_ScalarRhs");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMSteps_LowerBoundTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='LowerBound' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMSteps_LowerBoundTypeAccess().getLowerBoundKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getMSteps_LowerBoundTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemSteps_InitialEstimateType
entryRulemSteps_InitialEstimateType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMSteps_InitialEstimateTypeRule()); }
	 iv_rulemSteps_InitialEstimateType=rulemSteps_InitialEstimateType 
	 { $current=$iv_rulemSteps_InitialEstimateType.current; } 
	 EOF 
;

// Rule mSteps_InitialEstimateType
rulemSteps_InitialEstimateType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMSteps_InitialEstimateTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='InitialEstimate' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMSteps_InitialEstimateTypeAccess().getInitialEstimateKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMSteps_InitialEstimateTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMSteps_InitialEstimateTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMSteps_InitialEstimateTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMSteps_InitialEstimateTypeAccess().getExprCt_ScalarRhsParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=rulect_ScalarRhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMSteps_InitialEstimateTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"ct_ScalarRhs");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMSteps_InitialEstimateTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='InitialEstimate' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMSteps_InitialEstimateTypeAccess().getInitialEstimateKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getMSteps_InitialEstimateTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemsteps_ObjectiveDataSetType
entryRulemsteps_ObjectiveDataSetType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMsteps_ObjectiveDataSetTypeRule()); }
	 iv_rulemsteps_ObjectiveDataSetType=rulemsteps_ObjectiveDataSetType 
	 { $current=$iv_rulemsteps_ObjectiveDataSetType.current; } 
	 EOF 
;

// Rule msteps_ObjectiveDataSetType
rulemsteps_ObjectiveDataSetType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMsteps_ObjectiveDataSetTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='ObjectiveDataSet' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMsteps_ObjectiveDataSetTypeAccess().getObjectiveDataSetKeyword_1());
    }
	otherlv_2='dataSetRef' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMsteps_ObjectiveDataSetTypeAccess().getDataSetRefKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMsteps_ObjectiveDataSetTypeAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_ObjectiveDataSetTypeAccess().getDataSetRefCt_SymbolNameTypeParserRuleCall_4_0()); 
	    }
		lv_dataSetRef_4_0=rulect_SymbolNameType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_ObjectiveDataSetTypeRule());
	        }
       		set(
       			$current, 
       			"dataSetRef",
        		lv_dataSetRef_4_0, 
        		"ct_SymbolNameType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_ObjectiveDataSetTypeAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_ObjectiveDataSetTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMsteps_ObjectiveDataSetTypeAccess().getTAG_CLOSEParserRuleCall_6()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_ObjectiveDataSetTypeAccess().getMappingMsteps_MappingTypeParserRuleCall_7_0()); 
	    }
		lv_Mapping_7_0=rulemsteps_MappingType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_ObjectiveDataSetTypeRule());
	        }
       		add(
       			$current, 
       			"Mapping",
        		lv_Mapping_7_0, 
        		"msteps_MappingType");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    { 
        newCompositeNode(grammarAccess.getMsteps_ObjectiveDataSetTypeAccess().getTAG_OPEN2ParserRuleCall_8()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9='ObjectiveDataSet' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMsteps_ObjectiveDataSetTypeAccess().getObjectiveDataSetKeyword_9());
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_ObjectiveDataSetTypeAccess().getTAG_CLOSEParserRuleCall_10()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemsteps_MappingType
entryRulemsteps_MappingType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMsteps_MappingTypeRule()); }
	 iv_rulemsteps_MappingType=rulemsteps_MappingType 
	 { $current=$iv_rulemsteps_MappingType.current; } 
	 EOF 
;

// Rule msteps_MappingType
rulemsteps_MappingType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMsteps_MappingTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Mapping' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMsteps_MappingTypeAccess().getMappingKeyword_1());
    }
	otherlv_2='columnName' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMsteps_MappingTypeAccess().getColumnNameKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMsteps_MappingTypeAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_MappingTypeAccess().getColumnNameCt_SymbolNameTypeParserRuleCall_4_0()); 
	    }
		lv_columnName_4_0=rulect_SymbolNameType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_MappingTypeRule());
	        }
       		set(
       			$current, 
       			"columnName",
        		lv_columnName_4_0, 
        		"ct_SymbolNameType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_MappingTypeAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_MappingTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMsteps_MappingTypeAccess().getTAG_CLOSEParserRuleCall_6()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_MappingTypeAccess().getVarMath_VarTypeParserRuleCall_7_0()); 
	    }
		lv_Var_7_0=ruleMath_VarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_MappingTypeRule());
	        }
       		set(
       			$current, 
       			"Var",
        		lv_Var_7_0, 
        		"Math_VarType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_MappingTypeAccess().getUseVariabilityLevelMsteps_UseVariabilityLevelParserRuleCall_8_0()); 
	    }
		lv_UseVariabilityLevel_8_0=rulemsteps_UseVariabilityLevel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_MappingTypeRule());
	        }
       		set(
       			$current, 
       			"UseVariabilityLevel",
        		lv_UseVariabilityLevel_8_0, 
        		"msteps_UseVariabilityLevel");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_MappingTypeAccess().getUseVariabilityNodeMsteps_UseVariabilityNodeParserRuleCall_9_0()); 
	    }
		lv_UseVariabilityNode_9_0=rulemsteps_UseVariabilityNode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_MappingTypeRule());
	        }
       		set(
       			$current, 
       			"UseVariabilityNode",
        		lv_UseVariabilityNode_9_0, 
        		"msteps_UseVariabilityNode");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_MappingTypeAccess().getDoseVarDesign_DoseVarTypeParserRuleCall_10_0()); 
	    }
		lv_DoseVar_10_0=ruledesign_DoseVarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_MappingTypeRule());
	        }
       		set(
       			$current, 
       			"DoseVar",
        		lv_DoseVar_10_0, 
        		"design_DoseVarType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_MappingTypeAccess().getTargetVarMsteps_TargetVarTypeParserRuleCall_11_0()); 
	    }
		lv_TargetVar_11_0=rulemsteps_TargetVarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_MappingTypeRule());
	        }
       		set(
       			$current, 
       			"TargetVar",
        		lv_TargetVar_11_0, 
        		"msteps_TargetVarType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_MappingTypeAccess().getAssignMsteps_AssignTypeParserRuleCall_12_0()); 
	    }
		lv_Assign_12_0=rulemsteps_AssignType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_MappingTypeRule());
	        }
       		set(
       			$current, 
       			"Assign",
        		lv_Assign_12_0, 
        		"msteps_AssignType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_MappingTypeAccess().getOutputMsteps_OutputTypeParserRuleCall_13_0()); 
	    }
		lv_Output_13_0=rulemsteps_OutputType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_MappingTypeRule());
	        }
       		set(
       			$current, 
       			"Output",
        		lv_Output_13_0, 
        		"msteps_OutputType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_MappingTypeAccess().getRestrictionCt_RestrictionTypeParserRuleCall_14_0()); 
	    }
		lv_Restriction_14_0=rulect_RestrictionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_MappingTypeRule());
	        }
       		set(
       			$current, 
       			"Restriction",
        		lv_Restriction_14_0, 
        		"ct_RestrictionType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMsteps_MappingTypeAccess().getTAG_OPEN2ParserRuleCall_15()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_16='Mapping' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getMsteps_MappingTypeAccess().getMappingKeyword_16());
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_MappingTypeAccess().getTAG_CLOSEParserRuleCall_17()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemsteps_OutputType
entryRulemsteps_OutputType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMsteps_OutputTypeRule()); }
	 iv_rulemsteps_OutputType=rulemsteps_OutputType 
	 { $current=$iv_rulemsteps_OutputType.current; } 
	 EOF 
;

// Rule msteps_OutputType
rulemsteps_OutputType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMsteps_OutputTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Output' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMsteps_OutputTypeAccess().getOutputKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_OutputTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_OutputTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMsteps_OutputTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_OutputTypeAccess().getVarsMath_VarTypeParserRuleCall_4_0()); 
	    }
		lv_Vars_4_0=ruleMath_VarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_OutputTypeRule());
	        }
       		set(
       			$current, 
       			"Vars",
        		lv_Vars_4_0, 
        		"Math_VarType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMsteps_OutputTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='Output' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMsteps_OutputTypeAccess().getOutputKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_OutputTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemsteps_AssignType
entryRulemsteps_AssignType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMsteps_AssignTypeRule()); }
	 iv_rulemsteps_AssignType=rulemsteps_AssignType 
	 { $current=$iv_rulemsteps_AssignType.current; } 
	 EOF 
;

// Rule msteps_AssignType
rulemsteps_AssignType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMsteps_AssignTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Assign' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMsteps_AssignTypeAccess().getAssignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_AssignTypeAccess().getSymbIdMath_symbIdParserRuleCall_2_0()); 
	    }
		lv_symbId_2_0=ruleMath_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_AssignTypeRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_2_0, 
        		"Math_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_AssignTypeAccess().getBlockMath_blockParserRuleCall_3_0()); 
	    }
		lv_block_3_0=ruleMath_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_AssignTypeRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_3_0, 
        		"Math_block");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_AssignTypeAccess().getXmlnsCt_xmlnsParserRuleCall_4_0()); 
	    }
		lv_xmlns_4_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_AssignTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_4_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMsteps_AssignTypeAccess().getTAG_CLOSEParserRuleCall_5()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_AssignTypeAccess().getExprCt_RhsParserRuleCall_6_0()); 
	    }
		lv_Expr_6_0=rulect_Rhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_AssignTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_6_0, 
        		"ct_Rhs");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMsteps_AssignTypeAccess().getTAG_OPEN2ParserRuleCall_7()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_8='Assign' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMsteps_AssignTypeAccess().getAssignKeyword_8());
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_AssignTypeAccess().getTAG_CLOSEParserRuleCall_9()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemsteps_TargetVarType
entryRulemsteps_TargetVarType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMsteps_TargetVarTypeRule()); }
	 iv_rulemsteps_TargetVarType=rulemsteps_TargetVarType 
	 { $current=$iv_rulemsteps_TargetVarType.current; } 
	 EOF 
;

// Rule msteps_TargetVarType
rulemsteps_TargetVarType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMsteps_TargetVarTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='TargetVar' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMsteps_TargetVarTypeAccess().getTargetVarKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_TargetVarTypeAccess().getSymbIdMath_symbIdParserRuleCall_2_0()); 
	    }
		lv_symbId_2_0=ruleMath_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_TargetVarTypeRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_2_0, 
        		"Math_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_TargetVarTypeAccess().getBlockMath_blockParserRuleCall_3_0()); 
	    }
		lv_block_3_0=ruleMath_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_TargetVarTypeRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_3_0, 
        		"Math_block");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_TargetVarTypeAccess().getXmlnsCt_xmlnsParserRuleCall_4_0()); 
	    }
		lv_xmlns_4_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_TargetVarTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_4_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getMsteps_TargetVarTypeAccess().getTAG_CLOSE2ParserRuleCall_5_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getMsteps_TargetVarTypeAccess().getTAG_CLOSEParserRuleCall_5_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_TargetVarTypeAccess().getTAG_OPEN2ParserRuleCall_5_1_1()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_8='TargetVar' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMsteps_TargetVarTypeAccess().getTargetVarKeyword_5_1_2());
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_TargetVarTypeAccess().getTAG_CLOSEParserRuleCall_5_1_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRulemsteps_UseVariabilityLevel
entryRulemsteps_UseVariabilityLevel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMsteps_UseVariabilityLevelRule()); }
	 iv_rulemsteps_UseVariabilityLevel=rulemsteps_UseVariabilityLevel 
	 { $current=$iv_rulemsteps_UseVariabilityLevel.current; } 
	 EOF 
;

// Rule msteps_UseVariabilityLevel
rulemsteps_UseVariabilityLevel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMsteps_UseVariabilityLevelAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='UseVariabilityLevel' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMsteps_UseVariabilityLevelAccess().getUseVariabilityLevelKeyword_1());
    }
	otherlv_2='levelId' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMsteps_UseVariabilityLevelAccess().getLevelIdKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMsteps_UseVariabilityLevelAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_UseVariabilityLevelAccess().getLevelIdCt_BlockNameTypeParserRuleCall_4_0()); 
	    }
		lv_levelId_4_0=rulect_BlockNameType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_UseVariabilityLevelRule());
	        }
       		set(
       			$current, 
       			"levelId",
        		lv_levelId_4_0, 
        		"ct_BlockNameType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_UseVariabilityLevelAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_UseVariabilityLevelRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getMsteps_UseVariabilityLevelAccess().getTAG_CLOSE2ParserRuleCall_6_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getMsteps_UseVariabilityLevelAccess().getTAG_CLOSEParserRuleCall_6_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_UseVariabilityLevelAccess().getTAG_OPEN2ParserRuleCall_6_1_1()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9='UseVariabilityLevel' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMsteps_UseVariabilityLevelAccess().getUseVariabilityLevelKeyword_6_1_2());
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_UseVariabilityLevelAccess().getTAG_CLOSEParserRuleCall_6_1_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRulemsteps_UseVariabilityNode
entryRulemsteps_UseVariabilityNode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMsteps_UseVariabilityNodeRule()); }
	 iv_rulemsteps_UseVariabilityNode=rulemsteps_UseVariabilityNode 
	 { $current=$iv_rulemsteps_UseVariabilityNode.current; } 
	 EOF 
;

// Rule msteps_UseVariabilityNode
rulemsteps_UseVariabilityNode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMsteps_UseVariabilityNodeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='UseVariabilityNode' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMsteps_UseVariabilityNodeAccess().getUseVariabilityNodeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_UseVariabilityNodeAccess().getSymbIdMath_symbIdParserRuleCall_2_0()); 
	    }
		lv_symbId_2_0=ruleMath_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_UseVariabilityNodeRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_2_0, 
        		"Math_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_UseVariabilityNodeAccess().getBlockMath_blockParserRuleCall_3_0()); 
	    }
		lv_block_3_0=ruleMath_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_UseVariabilityNodeRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_3_0, 
        		"Math_block");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_UseVariabilityNodeAccess().getXmlnsCt_xmlnsParserRuleCall_4_0()); 
	    }
		lv_xmlns_4_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_UseVariabilityNodeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_4_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getMsteps_UseVariabilityNodeAccess().getTAG_CLOSE2ParserRuleCall_5_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getMsteps_UseVariabilityNodeAccess().getTAG_CLOSEParserRuleCall_5_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_UseVariabilityNodeAccess().getTAG_OPEN2ParserRuleCall_5_1_1()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_8='UseVariabilityNode' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMsteps_UseVariabilityNodeAccess().getUseVariabilityNodeKeyword_5_1_2());
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_UseVariabilityNodeAccess().getTAG_CLOSEParserRuleCall_5_1_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRulemsteps_SimulationStep
entryRulemsteps_SimulationStep returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMsteps_SimulationStepRule()); }
	 iv_rulemsteps_SimulationStep=rulemsteps_SimulationStep 
	 { $current=$iv_rulemsteps_SimulationStep.current; } 
	 EOF 
;

// Rule msteps_SimulationStep
rulemsteps_SimulationStep returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMsteps_SimulationStepAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='SimulationStep' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMsteps_SimulationStepAccess().getSimulationStepKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_SimulationStepAccess().getIdCt_idParserRuleCall_2_0()); 
	    }
		lv_id_2_0=rulect_id		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_SimulationStepRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"ct_id");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_SimulationStepAccess().getXmlnsCt_xmlnsParserRuleCall_3_0()); 
	    }
		lv_xmlns_3_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_SimulationStepRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_3_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMsteps_SimulationStepAccess().getTAG_CLOSEParserRuleCall_4()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_SimulationStepAccess().getDescriptionCt_AnnotationTypeParserRuleCall_5_0()); 
	    }
		lv_Description_5_0=rulect_AnnotationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_SimulationStepRule());
	        }
       		set(
       			$current, 
       			"Description",
        		lv_Description_5_0, 
        		"ct_AnnotationType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_SimulationStepAccess().getReplicatesCt_ReplicatesTypeParserRuleCall_6_0()); 
	    }
		lv_Replicates_6_0=rulect_ReplicatesType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_SimulationStepRule());
	        }
       		set(
       			$current, 
       			"Replicates",
        		lv_Replicates_6_0, 
        		"ct_ReplicatesType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_SimulationStepAccess().getInitialValueMsteps_InitialValueTypeParserRuleCall_7_0()); 
	    }
		lv_InitialValue_7_0=rulemsteps_InitialValueType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_SimulationStepRule());
	        }
       		add(
       			$current, 
       			"InitialValue",
        		lv_InitialValue_7_0, 
        		"msteps_InitialValueType");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_SimulationStepAccess().getSimDataSetMsteps_SimDataSetTypeParserRuleCall_8_0()); 
	    }
		lv_SimDataSet_8_0=rulemsteps_SimDataSetType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_SimulationStepRule());
	        }
       		set(
       			$current, 
       			"SimDataSet",
        		lv_SimDataSet_8_0, 
        		"msteps_SimDataSetType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_SimulationStepAccess().getObservationsMsteps_ObservationsTypeParserRuleCall_9_0()); 
	    }
		lv_Observations_9_0=rulemsteps_ObservationsType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_SimulationStepRule());
	        }
       		set(
       			$current, 
       			"Observations",
        		lv_Observations_9_0, 
        		"msteps_ObservationsType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMsteps_SimulationStepAccess().getTAG_OPEN2ParserRuleCall_10()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_11='SimulationStep' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getMsteps_SimulationStepAccess().getSimulationStepKeyword_11());
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_SimulationStepAccess().getTAG_CLOSEParserRuleCall_12()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemsteps_SimDataSetType
entryRulemsteps_SimDataSetType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMsteps_SimDataSetTypeRule()); }
	 iv_rulemsteps_SimDataSetType=rulemsteps_SimDataSetType 
	 { $current=$iv_rulemsteps_SimDataSetType.current; } 
	 EOF 
;

// Rule msteps_SimDataSetType
rulemsteps_SimDataSetType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMsteps_SimDataSetTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='SimDataSet' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMsteps_SimDataSetTypeAccess().getSimDataSetKeyword_1());
    }
	otherlv_2='dataSetRef' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMsteps_SimDataSetTypeAccess().getDataSetRefKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMsteps_SimDataSetTypeAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_SimDataSetTypeAccess().getDataSetRefCt_SymbolNameTypeParserRuleCall_4_0()); 
	    }
		lv_dataSetRef_4_0=rulect_SymbolNameType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_SimDataSetTypeRule());
	        }
       		set(
       			$current, 
       			"dataSetRef",
        		lv_dataSetRef_4_0, 
        		"ct_SymbolNameType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_SimDataSetTypeAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_SimDataSetTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMsteps_SimDataSetTypeAccess().getTAG_CLOSEParserRuleCall_6()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_SimDataSetTypeAccess().getMappingMsteps_MappingTypeParserRuleCall_7_0()); 
	    }
		lv_Mapping_7_0=rulemsteps_MappingType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_SimDataSetTypeRule());
	        }
       		add(
       			$current, 
       			"Mapping",
        		lv_Mapping_7_0, 
        		"msteps_MappingType");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    { 
        newCompositeNode(grammarAccess.getMsteps_SimDataSetTypeAccess().getTAG_OPEN2ParserRuleCall_8()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9='SimDataSet' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMsteps_SimDataSetTypeAccess().getSimDataSetKeyword_9());
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_SimDataSetTypeAccess().getTAG_CLOSEParserRuleCall_10()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemsteps_ObservationsType
entryRulemsteps_ObservationsType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMsteps_ObservationsTypeRule()); }
	 iv_rulemsteps_ObservationsType=rulemsteps_ObservationsType 
	 { $current=$iv_rulemsteps_ObservationsType.current; } 
	 EOF 
;

// Rule msteps_ObservationsType
rulemsteps_ObservationsType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMsteps_ObservationsTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Observations' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMsteps_ObservationsTypeAccess().getObservationsKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_ObservationsTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_ObservationsTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMsteps_ObservationsTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_ObservationsTypeAccess().getTimepointsMsteps_TimepointsTypeParserRuleCall_4_0()); 
	    }
		lv_Timepoints_4_0=rulemsteps_TimepointsType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_ObservationsTypeRule());
	        }
       		set(
       			$current, 
       			"Timepoints",
        		lv_Timepoints_4_0, 
        		"msteps_TimepointsType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_ObservationsTypeAccess().getOutputMsteps_OutputTypeParserRuleCall_5_0()); 
	    }
		lv_Output_5_0=rulemsteps_OutputType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_ObservationsTypeRule());
	        }
       		add(
       			$current, 
       			"Output",
        		lv_Output_5_0, 
        		"msteps_OutputType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_ObservationsTypeAccess().getWriteToMsteps_WriteToTypeParserRuleCall_6_0()); 
	    }
		lv_WriteTo_6_0=rulemsteps_WriteToType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_ObservationsTypeRule());
	        }
       		add(
       			$current, 
       			"WriteTo",
        		lv_WriteTo_6_0, 
        		"msteps_WriteToType");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMsteps_ObservationsTypeAccess().getTAG_OPEN2ParserRuleCall_7()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_8='Observations' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMsteps_ObservationsTypeAccess().getObservationsKeyword_8());
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_ObservationsTypeAccess().getTAG_CLOSEParserRuleCall_9()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemsteps_WriteToType
entryRulemsteps_WriteToType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMsteps_WriteToTypeRule()); }
	 iv_rulemsteps_WriteToType=rulemsteps_WriteToType 
	 { $current=$iv_rulemsteps_WriteToType.current; } 
	 EOF 
;

// Rule msteps_WriteToType
rulemsteps_WriteToType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMsteps_WriteToTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='WriteTo' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMsteps_WriteToTypeAccess().getWriteToKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_WriteToTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_WriteToTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMsteps_WriteToTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_WriteToTypeAccess().getVarMath_VarTypeParserRuleCall_4_0()); 
	    }
		lv_Var_4_0=ruleMath_VarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_WriteToTypeRule());
	        }
       		set(
       			$current, 
       			"Var",
        		lv_Var_4_0, 
        		"Math_VarType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_WriteToTypeAccess().getMappingMsteps_MappingTypeParserRuleCall_5_0()); 
	    }
		lv_Mapping_5_0=rulemsteps_MappingType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_WriteToTypeRule());
	        }
       		add(
       			$current, 
       			"Mapping",
        		lv_Mapping_5_0, 
        		"msteps_MappingType");
	        afterParserOrEnumRuleCall();
	    }

)
)+
    { 
        newCompositeNode(grammarAccess.getMsteps_WriteToTypeAccess().getTAG_OPEN2ParserRuleCall_6()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='WriteTo' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMsteps_WriteToTypeAccess().getWriteToKeyword_7());
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_WriteToTypeAccess().getTAG_CLOSEParserRuleCall_8()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemsteps_TimepointsType
entryRulemsteps_TimepointsType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMsteps_TimepointsTypeRule()); }
	 iv_rulemsteps_TimepointsType=rulemsteps_TimepointsType 
	 { $current=$iv_rulemsteps_TimepointsType.current; } 
	 EOF 
;

// Rule msteps_TimepointsType
rulemsteps_TimepointsType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMsteps_TimepointsTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Timepoints' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMsteps_TimepointsTypeAccess().getTimepointsKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_TimepointsTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_TimepointsTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMsteps_TimepointsTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_TimepointsTypeAccess().getExprCt_RhsParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=rulect_Rhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_TimepointsTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"ct_Rhs");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMsteps_TimepointsTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='Timepoints' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMsteps_TimepointsTypeAccess().getTimepointsKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_TimepointsTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemsteps_InitialValueType
entryRulemsteps_InitialValueType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMsteps_InitialValueTypeRule()); }
	 iv_rulemsteps_InitialValueType=rulemsteps_InitialValueType 
	 { $current=$iv_rulemsteps_InitialValueType.current; } 
	 EOF 
;

// Rule msteps_InitialValueType
rulemsteps_InitialValueType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMsteps_InitialValueTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='InitialValue' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMsteps_InitialValueTypeAccess().getInitialValueKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_InitialValueTypeAccess().getSymbIdMath_symbIdParserRuleCall_2_0()); 
	    }
		lv_symbId_2_0=ruleMath_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_InitialValueTypeRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_2_0, 
        		"Math_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_InitialValueTypeAccess().getXmlnsCt_xmlnsParserRuleCall_3_0()); 
	    }
		lv_xmlns_3_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_InitialValueTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_3_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getMsteps_InitialValueTypeAccess().getTAG_CLOSEParserRuleCall_4()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_InitialValueTypeAccess().getContentCt_VariableAssignmentTypeParserRuleCall_5_0()); 
	    }
		lv_Content_5_0=rulect_VariableAssignmentType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_InitialValueTypeRule());
	        }
       		set(
       			$current, 
       			"Content",
        		lv_Content_5_0, 
        		"ct_VariableAssignmentType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getMsteps_InitialValueTypeAccess().getTAG_OPEN2ParserRuleCall_6()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='InitialValue' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMsteps_InitialValueTypeAccess().getInitialValueKeyword_7());
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_InitialValueTypeAccess().getTAG_CLOSEParserRuleCall_8()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulemsteps_EstimationOperationType
entryRulemsteps_EstimationOperationType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMsteps_EstimationOperationTypeRule()); }
	 iv_rulemsteps_EstimationOperationType=rulemsteps_EstimationOperationType 
	 { $current=$iv_rulemsteps_EstimationOperationType.current; } 
	 EOF 
;

// Rule msteps_EstimationOperationType
rulemsteps_EstimationOperationType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMsteps_EstimationOperationTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='EstimationOperation' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getMsteps_EstimationOperationTypeAccess().getEstimationOperationKeyword_1());
    }
	otherlv_2='opType' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMsteps_EstimationOperationTypeAccess().getOpTypeKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMsteps_EstimationOperationTypeAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_EstimationOperationTypeAccess().getOpTypeMath_EstimationOperationTypeParserRuleCall_4_0()); 
	    }
		lv_opType_4_0=ruleMath_EstimationOperationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_EstimationOperationTypeRule());
	        }
       		set(
       			$current, 
       			"opType",
        		lv_opType_4_0, 
        		"Math_EstimationOperationType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMsteps_EstimationOperationTypeAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMsteps_EstimationOperationTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getMsteps_EstimationOperationTypeAccess().getTAG_CLOSE2ParserRuleCall_6_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getMsteps_EstimationOperationTypeAccess().getTAG_CLOSEParserRuleCall_6_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_EstimationOperationTypeAccess().getTAG_OPEN2ParserRuleCall_6_1_1()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9='EstimationOperation' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMsteps_EstimationOperationTypeAccess().getEstimationOperationKeyword_6_1_2());
    }

    { 
        newCompositeNode(grammarAccess.getMsteps_EstimationOperationTypeAccess().getTAG_CLOSEParserRuleCall_6_1_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRuleuncert_DistributionType
entryRuleuncert_DistributionType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUncert_DistributionTypeRule()); }
	 iv_ruleuncert_DistributionType=ruleuncert_DistributionType 
	 { $current=$iv_ruleuncert_DistributionType.current; } 
	 EOF 
;

// Rule uncert_DistributionType
ruleuncert_DistributionType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUncert_DistributionTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Distribution' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUncert_DistributionTypeAccess().getDistributionKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_DistributionTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_DistributionTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_DistributionTypeAccess().getWrittenVersionCt_writtenVersionParserRuleCall_3_0()); 
	    }
		lv_writtenVersion_3_0=rulect_writtenVersion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_DistributionTypeRule());
	        }
       		set(
       			$current, 
       			"writtenVersion",
        		lv_writtenVersion_3_0, 
        		"ct_writtenVersion");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getUncert_DistributionTypeAccess().getTAG_CLOSEParserRuleCall_4()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_DistributionTypeAccess().getNormalUncert_NormalParserRuleCall_5_0()); 
	    }
		lv_Normal_5_0=ruleuncert_Normal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_DistributionTypeRule());
	        }
       		set(
       			$current, 
       			"Normal",
        		lv_Normal_5_0, 
        		"uncert_Normal");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_DistributionTypeAccess().getPDFUncert_PDFParserRuleCall_6_0()); 
	    }
		lv_PDF_6_0=ruleuncert_PDF		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_DistributionTypeRule());
	        }
       		set(
       			$current, 
       			"PDF",
        		lv_PDF_6_0, 
        		"uncert_PDF");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_DistributionTypeAccess().getPoisonUncert_PoisonParserRuleCall_7_0()); 
	    }
		lv_Poison_7_0=ruleuncert_Poison		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_DistributionTypeRule());
	        }
       		set(
       			$current, 
       			"Poison",
        		lv_Poison_7_0, 
        		"uncert_Poison");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_DistributionTypeAccess().getStudentUncert_Student_tParserRuleCall_8_0()); 
	    }
		lv_Student_8_0=ruleuncert_Student_t		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_DistributionTypeRule());
	        }
       		set(
       			$current, 
       			"Student",
        		lv_Student_8_0, 
        		"uncert_Student_t");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_DistributionTypeAccess().getUniformUncert_UniformParserRuleCall_9_0()); 
	    }
		lv_Uniform_9_0=ruleuncert_Uniform		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_DistributionTypeRule());
	        }
       		set(
       			$current, 
       			"Uniform",
        		lv_Uniform_9_0, 
        		"uncert_Uniform");
	        afterParserOrEnumRuleCall();
	    }

)
)?
    { 
        newCompositeNode(grammarAccess.getUncert_DistributionTypeAccess().getTAG_OPEN2ParserRuleCall_10()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_11='Distribution' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getUncert_DistributionTypeAccess().getDistributionKeyword_11());
    }

    { 
        newCompositeNode(grammarAccess.getUncert_DistributionTypeAccess().getTAG_CLOSEParserRuleCall_12()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleuncert_Normal
entryRuleuncert_Normal returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUncert_NormalRule()); }
	 iv_ruleuncert_Normal=ruleuncert_Normal 
	 { $current=$iv_ruleuncert_Normal.current; } 
	 EOF 
;

// Rule uncert_Normal
ruleuncert_Normal returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUncert_NormalAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Normal' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUncert_NormalAccess().getNormalKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_NormalAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_NormalRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getUncert_NormalAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_NormalAccess().getMeanUncert_MeanParserRuleCall_4_0()); 
	    }
		lv_Mean_4_0=ruleuncert_Mean		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_NormalRule());
	        }
       		set(
       			$current, 
       			"Mean",
        		lv_Mean_4_0, 
        		"uncert_Mean");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_NormalAccess().getStdDevUncert_StdDevParserRuleCall_5_0()); 
	    }
		lv_StdDev_5_0=ruleuncert_StdDev		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_NormalRule());
	        }
       		set(
       			$current, 
       			"StdDev",
        		lv_StdDev_5_0, 
        		"uncert_StdDev");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_NormalAccess().getVarianceUncert_VarianceParserRuleCall_6_0()); 
	    }
		lv_Variance_6_0=ruleuncert_Variance		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_NormalRule());
	        }
       		set(
       			$current, 
       			"Variance",
        		lv_Variance_6_0, 
        		"uncert_Variance");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_NormalAccess().getCoefficientOfVarianceUncert_CoefficientOfVarianceParserRuleCall_7_0()); 
	    }
		lv_CoefficientOfVariance_7_0=ruleuncert_CoefficientOfVariance		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_NormalRule());
	        }
       		set(
       			$current, 
       			"CoefficientOfVariance",
        		lv_CoefficientOfVariance_7_0, 
        		"uncert_CoefficientOfVariance");
	        afterParserOrEnumRuleCall();
	    }

)
)?
    { 
        newCompositeNode(grammarAccess.getUncert_NormalAccess().getTAG_OPEN2ParserRuleCall_8()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9='Normal' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getUncert_NormalAccess().getNormalKeyword_9());
    }

    { 
        newCompositeNode(grammarAccess.getUncert_NormalAccess().getTAG_CLOSEParserRuleCall_10()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleuncert_CoefficientOfVariance
entryRuleuncert_CoefficientOfVariance returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUncert_CoefficientOfVarianceRule()); }
	 iv_ruleuncert_CoefficientOfVariance=ruleuncert_CoefficientOfVariance 
	 { $current=$iv_ruleuncert_CoefficientOfVariance.current; } 
	 EOF 
;

// Rule uncert_CoefficientOfVariance
ruleuncert_CoefficientOfVariance returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUncert_CoefficientOfVarianceAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='CoefficientOfVariance' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUncert_CoefficientOfVarianceAccess().getCoefficientOfVarianceKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_CoefficientOfVarianceAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_CoefficientOfVarianceRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getUncert_CoefficientOfVarianceAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_CoefficientOfVarianceAccess().getExprUncert_DistributionParamTypeParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=ruleuncert_DistributionParamType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_CoefficientOfVarianceRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"uncert_DistributionParamType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getUncert_CoefficientOfVarianceAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='CoefficientOfVariance' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUncert_CoefficientOfVarianceAccess().getCoefficientOfVarianceKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getUncert_CoefficientOfVarianceAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleuncert_StdDev
entryRuleuncert_StdDev returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUncert_StdDevRule()); }
	 iv_ruleuncert_StdDev=ruleuncert_StdDev 
	 { $current=$iv_ruleuncert_StdDev.current; } 
	 EOF 
;

// Rule uncert_StdDev
ruleuncert_StdDev returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUncert_StdDevAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='StdDev' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUncert_StdDevAccess().getStdDevKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_StdDevAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_StdDevRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getUncert_StdDevAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_StdDevAccess().getExprUncert_DistributionParamTypeParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=ruleuncert_DistributionParamType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_StdDevRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"uncert_DistributionParamType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getUncert_StdDevAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='StdDev' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUncert_StdDevAccess().getStdDevKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getUncert_StdDevAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleuncert_DistributionParamType
entryRuleuncert_DistributionParamType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUncert_DistributionParamTypeRule()); }
	 iv_ruleuncert_DistributionParamType=ruleuncert_DistributionParamType 
	 { $current=$iv_ruleuncert_DistributionParamType.current; } 
	 EOF 
;

// Rule uncert_DistributionParamType
ruleuncert_DistributionParamType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_DistributionParamTypeAccess().getEquationMath_EquationTypeParserRuleCall_0_0()); 
	    }
		lv_Equation_0_0=ruleMath_EquationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_DistributionParamTypeRule());
	        }
       		set(
       			$current, 
       			"Equation",
        		lv_Equation_0_0, 
        		"Math_EquationType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_DistributionParamTypeAccess().getScalarMath_ScalarTypeParserRuleCall_1_0()); 
	    }
		lv_Scalar_1_0=ruleMath_ScalarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_DistributionParamTypeRule());
	        }
       		set(
       			$current, 
       			"Scalar",
        		lv_Scalar_1_0, 
        		"Math_ScalarType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_DistributionParamTypeAccess().getVarMath_VarTypeParserRuleCall_2_0()); 
	    }
		lv_Var_2_0=ruleMath_VarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_DistributionParamTypeRule());
	        }
       		set(
       			$current, 
       			"Var",
        		lv_Var_2_0, 
        		"Math_VarType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleuncert_MeanParamType
entryRuleuncert_MeanParamType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUncert_MeanParamTypeRule()); }
	 iv_ruleuncert_MeanParamType=ruleuncert_MeanParamType 
	 { $current=$iv_ruleuncert_MeanParamType.current; } 
	 EOF 
;

// Rule uncert_MeanParamType
ruleuncert_MeanParamType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_MeanParamTypeAccess().getExprUncert_DistributionParamTypeParserRuleCall_0()); 
	    }
		lv_Expr_0_0=ruleuncert_DistributionParamType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_MeanParamTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_0_0, 
        		"uncert_DistributionParamType");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleuncert_Mean
entryRuleuncert_Mean returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUncert_MeanRule()); }
	 iv_ruleuncert_Mean=ruleuncert_Mean 
	 { $current=$iv_ruleuncert_Mean.current; } 
	 EOF 
;

// Rule uncert_Mean
ruleuncert_Mean returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUncert_MeanAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Mean' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUncert_MeanAccess().getMeanKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_MeanAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_MeanRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getUncert_MeanAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_MeanAccess().getExprUncert_MeanParamTypeParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=ruleuncert_MeanParamType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_MeanRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"uncert_MeanParamType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getUncert_MeanAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='Mean' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUncert_MeanAccess().getMeanKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getUncert_MeanAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleuncert_Variance
entryRuleuncert_Variance returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUncert_VarianceRule()); }
	 iv_ruleuncert_Variance=ruleuncert_Variance 
	 { $current=$iv_ruleuncert_Variance.current; } 
	 EOF 
;

// Rule uncert_Variance
ruleuncert_Variance returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUncert_VarianceAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Variance' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUncert_VarianceAccess().getVarianceKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_VarianceAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_VarianceRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getUncert_VarianceAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_VarianceAccess().getExprUncert_DistributionParamTypeParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=ruleuncert_DistributionParamType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_VarianceRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"uncert_DistributionParamType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getUncert_VarianceAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='Variance' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUncert_VarianceAccess().getVarianceKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getUncert_VarianceAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleuncert_PDF
entryRuleuncert_PDF returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUncert_PDFRule()); }
	 iv_ruleuncert_PDF=ruleuncert_PDF 
	 { $current=$iv_ruleuncert_PDF.current; } 
	 EOF 
;

// Rule uncert_PDF
ruleuncert_PDF returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUncert_PDFAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='PDF' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUncert_PDFAccess().getPDFKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_PDFAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_PDFRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getUncert_PDFAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_PDFAccess().getFunctionParameterUncert_ParameterDefinitionTypeParserRuleCall_4_0()); 
	    }
		lv_FunctionParameter_4_0=ruleuncert_ParameterDefinitionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_PDFRule());
	        }
       		add(
       			$current, 
       			"FunctionParameter",
        		lv_FunctionParameter_4_0, 
        		"uncert_ParameterDefinitionType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_PDFAccess().getEquationMath_EquationTypeParserRuleCall_5_0()); 
	    }
		lv_Equation_5_0=ruleMath_EquationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_PDFRule());
	        }
       		set(
       			$current, 
       			"Equation",
        		lv_Equation_5_0, 
        		"Math_EquationType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getUncert_PDFAccess().getTAG_OPEN2ParserRuleCall_6()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='PDF' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getUncert_PDFAccess().getPDFKeyword_7());
    }

    { 
        newCompositeNode(grammarAccess.getUncert_PDFAccess().getTAG_CLOSEParserRuleCall_8()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleuncert_ParameterDefinitionType
entryRuleuncert_ParameterDefinitionType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUncert_ParameterDefinitionTypeRule()); }
	 iv_ruleuncert_ParameterDefinitionType=ruleuncert_ParameterDefinitionType 
	 { $current=$iv_ruleuncert_ParameterDefinitionType.current; } 
	 EOF 
;

// Rule uncert_ParameterDefinitionType
ruleuncert_ParameterDefinitionType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUncert_ParameterDefinitionTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='FunctionParameter' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUncert_ParameterDefinitionTypeAccess().getFunctionParameterKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_ParameterDefinitionTypeAccess().getIdMath_idParserRuleCall_2_0()); 
	    }
		lv_id_2_0=ruleMath_id		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_ParameterDefinitionTypeRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"Math_id");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_ParameterDefinitionTypeAccess().getNameCt_NameParserRuleCall_3_0()); 
	    }
		lv_Name_3_0=rulect_Name		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_ParameterDefinitionTypeRule());
	        }
       		set(
       			$current, 
       			"Name",
        		lv_Name_3_0, 
        		"ct_Name");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_ParameterDefinitionTypeAccess().getXmlnsCt_xmlnsParserRuleCall_4_0()); 
	    }
		lv_xmlns_4_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_ParameterDefinitionTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_4_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getUncert_ParameterDefinitionTypeAccess().getTAG_CLOSE2ParserRuleCall_5_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getUncert_ParameterDefinitionTypeAccess().getTAG_CLOSEParserRuleCall_5_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getUncert_ParameterDefinitionTypeAccess().getTAG_OPEN2ParserRuleCall_5_1_1()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_8='FunctionParameter' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getUncert_ParameterDefinitionTypeAccess().getFunctionParameterKeyword_5_1_2());
    }

    { 
        newCompositeNode(grammarAccess.getUncert_ParameterDefinitionTypeAccess().getTAG_CLOSEParserRuleCall_5_1_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRuleuncert_Poison
entryRuleuncert_Poison returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUncert_PoisonRule()); }
	 iv_ruleuncert_Poison=ruleuncert_Poison 
	 { $current=$iv_ruleuncert_Poison.current; } 
	 EOF 
;

// Rule uncert_Poison
ruleuncert_Poison returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUncert_PoisonAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Poison' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUncert_PoisonAccess().getPoisonKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_PoisonAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_PoisonRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getUncert_PoisonAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_PoisonAccess().getRateUncert_RateParserRuleCall_4_0()); 
	    }
		lv_Rate_4_0=ruleuncert_Rate		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_PoisonRule());
	        }
       		set(
       			$current, 
       			"Rate",
        		lv_Rate_4_0, 
        		"uncert_Rate");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getUncert_PoisonAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='Poison' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUncert_PoisonAccess().getPoisonKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getUncert_PoisonAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleuncert_Rate
entryRuleuncert_Rate returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUncert_RateRule()); }
	 iv_ruleuncert_Rate=ruleuncert_Rate 
	 { $current=$iv_ruleuncert_Rate.current; } 
	 EOF 
;

// Rule uncert_Rate
ruleuncert_Rate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUncert_RateAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Rate' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUncert_RateAccess().getRateKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_RateAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_RateRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getUncert_RateAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_RateAccess().getExprUncert_DistributionParamTypeParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=ruleuncert_DistributionParamType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_RateRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"uncert_DistributionParamType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getUncert_RateAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='Rate' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUncert_RateAccess().getRateKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getUncert_RateAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleuncert_Student_t
entryRuleuncert_Student_t returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUncert_Student_tRule()); }
	 iv_ruleuncert_Student_t=ruleuncert_Student_t 
	 { $current=$iv_ruleuncert_Student_t.current; } 
	 EOF 
;

// Rule uncert_Student_t
ruleuncert_Student_t returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUncert_Student_tAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Student-t' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUncert_Student_tAccess().getStudentTKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_Student_tAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_Student_tRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getUncert_Student_tAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_Student_tAccess().getLocationUncert_LocationParserRuleCall_4_0()); 
	    }
		lv_Location_4_0=ruleuncert_Location		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_Student_tRule());
	        }
       		set(
       			$current, 
       			"Location",
        		lv_Location_4_0, 
        		"uncert_Location");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_Student_tAccess().getScaleUncert_ScaleParserRuleCall_5_0()); 
	    }
		lv_Scale_5_0=ruleuncert_Scale		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_Student_tRule());
	        }
       		set(
       			$current, 
       			"Scale",
        		lv_Scale_5_0, 
        		"uncert_Scale");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_Student_tAccess().getDegreesOfFreedomUncertDegreesOfFreedomParserRuleCall_6_0()); 
	    }
		lv_DegreesOfFreedom_6_0=ruleuncertDegreesOfFreedom		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_Student_tRule());
	        }
       		set(
       			$current, 
       			"DegreesOfFreedom",
        		lv_DegreesOfFreedom_6_0, 
        		"uncertDegreesOfFreedom");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getUncert_Student_tAccess().getTAG_OPEN2ParserRuleCall_7()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_8='Student-t' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getUncert_Student_tAccess().getStudentTKeyword_8());
    }

    { 
        newCompositeNode(grammarAccess.getUncert_Student_tAccess().getTAG_CLOSEParserRuleCall_9()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleuncertDegreesOfFreedom
entryRuleuncertDegreesOfFreedom returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUncertDegreesOfFreedomRule()); }
	 iv_ruleuncertDegreesOfFreedom=ruleuncertDegreesOfFreedom 
	 { $current=$iv_ruleuncertDegreesOfFreedom.current; } 
	 EOF 
;

// Rule uncertDegreesOfFreedom
ruleuncertDegreesOfFreedom returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUncertDegreesOfFreedomAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='DegreesOfFreedom' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUncertDegreesOfFreedomAccess().getDegreesOfFreedomKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncertDegreesOfFreedomAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncertDegreesOfFreedomRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getUncertDegreesOfFreedomAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncertDegreesOfFreedomAccess().getExprUncert_DistributionParamTypeParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=ruleuncert_DistributionParamType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncertDegreesOfFreedomRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"uncert_DistributionParamType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getUncertDegreesOfFreedomAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='DegreesOfFreedom' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUncertDegreesOfFreedomAccess().getDegreesOfFreedomKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getUncertDegreesOfFreedomAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleuncert_Scale
entryRuleuncert_Scale returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUncert_ScaleRule()); }
	 iv_ruleuncert_Scale=ruleuncert_Scale 
	 { $current=$iv_ruleuncert_Scale.current; } 
	 EOF 
;

// Rule uncert_Scale
ruleuncert_Scale returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUncert_ScaleAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Scale' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUncert_ScaleAccess().getScaleKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_ScaleAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_ScaleRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getUncert_ScaleAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_ScaleAccess().getExprUncert_DistributionParamTypeParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=ruleuncert_DistributionParamType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_ScaleRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"uncert_DistributionParamType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getUncert_ScaleAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='Scale' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUncert_ScaleAccess().getScaleKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getUncert_ScaleAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleuncert_Location
entryRuleuncert_Location returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUncert_LocationRule()); }
	 iv_ruleuncert_Location=ruleuncert_Location 
	 { $current=$iv_ruleuncert_Location.current; } 
	 EOF 
;

// Rule uncert_Location
ruleuncert_Location returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getUncert_LocationAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Location' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUncert_LocationAccess().getLocationKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_LocationAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_LocationRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getUncert_LocationAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_LocationAccess().getExprUncert_DistributionParamTypeParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=ruleuncert_DistributionParamType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_LocationRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"uncert_DistributionParamType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getUncert_LocationAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='Location' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUncert_LocationAccess().getLocationKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getUncert_LocationAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleuncert_Uniform
entryRuleuncert_Uniform returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUncert_UniformRule()); }
	 iv_ruleuncert_Uniform=ruleuncert_Uniform 
	 { $current=$iv_ruleuncert_Uniform.current; } 
	 EOF 
;

// Rule uncert_Uniform
ruleuncert_Uniform returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getUncert_UniformAccess().getUncert_UniformAction_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getUncert_UniformAccess().getTAG_OPENParserRuleCall_1()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='Uniform' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUncert_UniformAccess().getUniformKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUncert_UniformAccess().getXmlnsCt_xmlnsParserRuleCall_3_0()); 
	    }
		lv_xmlns_3_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUncert_UniformRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_3_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getUncert_UniformAccess().getTAG_CLOSE2ParserRuleCall_4_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getUncert_UniformAccess().getTAG_CLOSEParserRuleCall_4_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getUncert_UniformAccess().getTAG_OPEN2ParserRuleCall_4_1_1()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='Uniform' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getUncert_UniformAccess().getUniformKeyword_4_1_2());
    }

    { 
        newCompositeNode(grammarAccess.getUncert_UniformAccess().getTAG_CLOSEParserRuleCall_4_1_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRulect_symbId
entryRulect_symbId returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_symbIdRule()); }
	 iv_rulect_symbId=rulect_symbId 
	 { $current=$iv_rulect_symbId.current; } 
	 EOF 
;

// Rule ct_symbId
rulect_symbId returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='symbId' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCt_symbIdAccess().getSymbIdKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_symbIdAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_symbIdAccess().getSymbIdCt_SymbolNameTypeParserRuleCall_2_0()); 
	    }
		lv_symbId_2_0=rulect_SymbolNameType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_symbIdRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_2_0, 
        		"ct_SymbolNameType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulect_id
entryRulect_id returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_idRule()); }
	 iv_rulect_id=rulect_id 
	 { $current=$iv_rulect_id.current; } 
	 EOF 
;

// Rule ct_id
rulect_id returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='id' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCt_idAccess().getIdKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_idAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_idAccess().getIdCt_BlockNameTypeParserRuleCall_2_0()); 
	    }
		lv_id_2_0=rulect_BlockNameType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_idRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_2_0, 
        		"ct_BlockNameType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulect_symbolType
entryRulect_symbolType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_symbolTypeRule()); }
	 iv_rulect_symbolType=rulect_symbolType 
	 { $current=$iv_rulect_symbolType.current; } 
	 EOF 
;

// Rule ct_symbolType
rulect_symbolType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='symbolType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCt_symbolTypeAccess().getSymbolTypeKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_symbolTypeAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_symbolTypeAccess().getSymbolTypeCt_SymbolTypeTypeParserRuleCall_2_0()); 
	    }
		lv_symbolType_2_0=rulect_SymbolTypeType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_symbolTypeRule());
	        }
       		set(
       			$current, 
       			"symbolType",
        		lv_symbolType_2_0, 
        		"ct_SymbolTypeType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulect_block
entryRulect_block returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_blockRule()); }
	 iv_rulect_block=rulect_block 
	 { $current=$iv_rulect_block.current; } 
	 EOF 
;

// Rule ct_block
rulect_block returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='block' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCt_blockAccess().getBlockKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_blockAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_blockAccess().getBlockCt_BlockNameTypeParserRuleCall_2_0()); 
	    }
		lv_block_2_0=rulect_BlockNameType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_blockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_2_0, 
        		"ct_BlockNameType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulect_writtenVersion
entryRulect_writtenVersion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_writtenVersionRule()); }
	 iv_rulect_writtenVersion=rulect_writtenVersion 
	 { $current=$iv_rulect_writtenVersion.current; } 
	 EOF 
;

// Rule ct_writtenVersion
rulect_writtenVersion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='writtenVersion' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCt_writtenVersionAccess().getWrittenVersionKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_writtenVersionAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_writtenVersionAccess().getWrittenVersionXS_STRINGParserRuleCall_2_0()); 
	    }
		lv_writtenVersion_2_0=ruleXS_STRING		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_writtenVersionRule());
	        }
       		set(
       			$current, 
       			"writtenVersion",
        		lv_writtenVersion_2_0, 
        		"XS_STRING");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulect_Decimal_Value
entryRulect_Decimal_Value returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_Decimal_ValueRule()); }
	 iv_rulect_Decimal_Value=rulect_Decimal_Value 
	 { $current=$iv_rulect_Decimal_Value.current; } 
	 EOF 
;

// Rule ct_Decimal_Value
rulect_Decimal_Value returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='value' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCt_Decimal_ValueAccess().getValueKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_Decimal_ValueAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_Decimal_ValueAccess().getValueXS_DECIMALParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleXS_DECIMAL		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_Decimal_ValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"XS_DECIMAL");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulect_String_Value
entryRulect_String_Value returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_String_ValueRule()); }
	 iv_rulect_String_Value=rulect_String_Value 
	 { $current=$iv_rulect_String_Value.current; } 
	 EOF 
;

// Rule ct_String_Value
rulect_String_Value returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='value' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCt_String_ValueAccess().getValueKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_String_ValueAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_String_ValueAccess().getValueXS_STRINGParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleXS_STRING		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_String_ValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"XS_STRING");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulect_Int_Value
entryRulect_Int_Value returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_Int_ValueRule()); }
	 iv_rulect_Int_Value=rulect_Int_Value 
	 { $current=$iv_rulect_Int_Value.current; } 
	 EOF 
;

// Rule ct_Int_Value
rulect_Int_Value returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='value' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCt_Int_ValueAccess().getValueKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_Int_ValueAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_Int_ValueAccess().getValueXS_INTParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleXS_INT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_Int_ValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"XS_INT");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulect_catId
entryRulect_catId returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_catIdRule()); }
	 iv_rulect_catId=rulect_catId 
	 { $current=$iv_rulect_catId.current; } 
	 EOF 
;

// Rule ct_catId
rulect_catId returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='catId' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCt_catIdAccess().getCatIdKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_catIdAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_catIdAccess().getCatIdCt_SymbolNameTypeParserRuleCall_2_0()); 
	    }
		lv_catId_2_0=rulect_SymbolNameType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_catIdRule());
	        }
       		set(
       			$current, 
       			"catId",
        		lv_catId_2_0, 
        		"ct_SymbolNameType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulect_ReplicatesType
entryRulect_ReplicatesType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_ReplicatesTypeRule()); }
	 iv_rulect_ReplicatesType=rulect_ReplicatesType 
	 { $current=$iv_rulect_ReplicatesType.current; } 
	 EOF 
;

// Rule ct_ReplicatesType
rulect_ReplicatesType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCt_ReplicatesTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Replicates' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_ReplicatesTypeAccess().getReplicatesKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_ReplicatesTypeAccess().getSymbIdCt_symbIdParserRuleCall_2_0()); 
	    }
		lv_symbId_2_0=rulect_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_ReplicatesTypeRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_2_0, 
        		"ct_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_ReplicatesTypeAccess().getXmlnsCt_xmlnsParserRuleCall_3_0()); 
	    }
		lv_xmlns_3_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_ReplicatesTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_3_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getCt_ReplicatesTypeAccess().getTAG_CLOSEParserRuleCall_4()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_ReplicatesTypeAccess().getExprCt_RhsParserRuleCall_5_0()); 
	    }
		lv_Expr_5_0=rulect_Rhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_ReplicatesTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_5_0, 
        		"ct_Rhs");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getCt_ReplicatesTypeAccess().getTAG_OPEN2ParserRuleCall_6()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='Replicates' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCt_ReplicatesTypeAccess().getReplicatesKeyword_7());
    }

    { 
        newCompositeNode(grammarAccess.getCt_ReplicatesTypeAccess().getTAG_CLOSEParserRuleCall_8()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulect_AnnotationType
entryRulect_AnnotationType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_AnnotationTypeRule()); }
	 iv_rulect_AnnotationType=rulect_AnnotationType 
	 { $current=$iv_rulect_AnnotationType.current; } 
	 EOF 
;

// Rule ct_AnnotationType
rulect_AnnotationType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCt_AnnotationTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Decsription' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_AnnotationTypeAccess().getDecsriptionKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_AnnotationTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_AnnotationTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getCt_AnnotationTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		lv_Description_4_0=RULE_STRING
		{
			newLeafNode(lv_Description_4_0, grammarAccess.getCt_AnnotationTypeAccess().getDescriptionSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCt_AnnotationTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"Description",
        		lv_Description_4_0, 
        		"STRING");
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getCt_AnnotationTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='Description' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCt_AnnotationTypeAccess().getDescriptionKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getCt_AnnotationTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulect_Rhs
entryRulect_Rhs returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_RhsRule()); }
	 iv_rulect_Rhs=rulect_Rhs 
	 { $current=$iv_rulect_Rhs.current; } 
	 EOF 
;

// Rule ct_Rhs
rulect_Rhs returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCt_RhsAccess().getEquationMath_EquationTypeParserRuleCall_0_0()); 
	    }
		lv_Equation_0_0=ruleMath_EquationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_RhsRule());
	        }
       		set(
       			$current, 
       			"Equation",
        		lv_Equation_0_0, 
        		"Math_EquationType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_RhsAccess().getScalarMath_ScalarTypeParserRuleCall_1_0()); 
	    }
		lv_Scalar_1_0=ruleMath_ScalarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_RhsRule());
	        }
       		set(
       			$current, 
       			"Scalar",
        		lv_Scalar_1_0, 
        		"Math_ScalarType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_RhsAccess().getConstantMath_ConstantTypeParserRuleCall_2_0()); 
	    }
		lv_Constant_2_0=ruleMath_ConstantType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_RhsRule());
	        }
       		set(
       			$current, 
       			"Constant",
        		lv_Constant_2_0, 
        		"Math_ConstantType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_RhsAccess().getStringMath_StringTypeParserRuleCall_3_0()); 
	    }
		lv_String_3_0=ruleMath_StringType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_RhsRule());
	        }
       		set(
       			$current, 
       			"String",
        		lv_String_3_0, 
        		"Math_StringType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_RhsAccess().getSequenceCt_SequenceTypeParserRuleCall_4_0()); 
	    }
		lv_Sequence_4_0=rulect_SequenceType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_RhsRule());
	        }
       		set(
       			$current, 
       			"Sequence",
        		lv_Sequence_4_0, 
        		"ct_SequenceType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_RhsAccess().getVectorCt_VectorTypeParserRuleCall_5_0()); 
	    }
		lv_Vector_5_0=rulect_VectorType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_RhsRule());
	        }
       		set(
       			$current, 
       			"Vector",
        		lv_Vector_5_0, 
        		"ct_VectorType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_RhsAccess().getFunctionCallMath_FunctionCallTypeParserRuleCall_6_0()); 
	    }
		lv_FunctionCall_6_0=ruleMath_FunctionCallType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_RhsRule());
	        }
       		set(
       			$current, 
       			"FunctionCall",
        		lv_FunctionCall_6_0, 
        		"Math_FunctionCallType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_RhsAccess().getDataSetCt_DataSetTypeParserRuleCall_7_0()); 
	    }
		lv_DataSet_7_0=rulect_DataSetType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_RhsRule());
	        }
       		set(
       			$current, 
       			"DataSet",
        		lv_DataSet_7_0, 
        		"ct_DataSetType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_RhsAccess().getVarMath_VarTypeParserRuleCall_8_0()); 
	    }
		lv_Var_8_0=ruleMath_VarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_RhsRule());
	        }
       		set(
       			$current, 
       			"Var",
        		lv_Var_8_0, 
        		"Math_VarType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_RhsAccess().getDistributionUncert_DistributionTypeParserRuleCall_9_0()); 
	    }
		lv_Distribution_9_0=ruleuncert_DistributionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_RhsRule());
	        }
       		set(
       			$current, 
       			"Distribution",
        		lv_Distribution_9_0, 
        		"uncert_DistributionType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulect_DataSetType
entryRulect_DataSetType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_DataSetTypeRule()); }
	 iv_rulect_DataSetType=rulect_DataSetType 
	 { $current=$iv_rulect_DataSetType.current; } 
	 EOF 
;

// Rule ct_DataSetType
rulect_DataSetType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCt_DataSetTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='DataSet' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_DataSetTypeAccess().getDataSetKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_DataSetTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_DataSetTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getCt_DataSetTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_DataSetTypeAccess().getDefinitionCt_DefinitionTypeParserRuleCall_4_0()); 
	    }
		lv_Definition_4_0=rulect_DefinitionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_DataSetTypeRule());
	        }
       		set(
       			$current, 
       			"Definition",
        		lv_Definition_4_0, 
        		"ct_DefinitionType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_DataSetTypeAccess().getExternalSourceCt_ExternalSourceTypeParserRuleCall_5_0()); 
	    }
		lv_ExternalSource_5_0=rulect_ExternalSourceType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_DataSetTypeRule());
	        }
       		add(
       			$current, 
       			"ExternalSource",
        		lv_ExternalSource_5_0, 
        		"ct_ExternalSourceType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_DataSetTypeAccess().getRowCt_RowTypeParserRuleCall_6_0()); 
	    }
		lv_Row_6_0=rulect_RowType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_DataSetTypeRule());
	        }
       		add(
       			$current, 
       			"Row",
        		lv_Row_6_0, 
        		"ct_RowType");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_DataSetTypeAccess().getInternalSourceCt_InternalSourceTypeParserRuleCall_7_0()); 
	    }
		lv_InternalSource_7_0=rulect_InternalSourceType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_DataSetTypeRule());
	        }
       		add(
       			$current, 
       			"InternalSource",
        		lv_InternalSource_7_0, 
        		"ct_InternalSourceType");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getCt_DataSetTypeAccess().getTAG_OPEN2ParserRuleCall_8()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_9='DataSet' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCt_DataSetTypeAccess().getDataSetKeyword_9());
    }

    { 
        newCompositeNode(grammarAccess.getCt_DataSetTypeAccess().getTAG_CLOSEParserRuleCall_10()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulect_DefinitionType
entryRulect_DefinitionType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_DefinitionTypeRule()); }
	 iv_rulect_DefinitionType=rulect_DefinitionType 
	 { $current=$iv_rulect_DefinitionType.current; } 
	 EOF 
;

// Rule ct_DefinitionType
rulect_DefinitionType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCt_DefinitionTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Definition' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_DefinitionTypeAccess().getDefinitionKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_DefinitionTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_DefinitionTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getCt_DefinitionTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_DefinitionTypeAccess().getDefinitionCt_ColumnTypeParserRuleCall_4_0()); 
	    }
		lv_Definition_4_0=rulect_ColumnType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_DefinitionTypeRule());
	        }
       		add(
       			$current, 
       			"Definition",
        		lv_Definition_4_0, 
        		"ct_ColumnType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getCt_DefinitionTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='Definition' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCt_DefinitionTypeAccess().getDefinitionKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getCt_DefinitionTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulect_DefinitionRhsType
entryRulect_DefinitionRhsType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_DefinitionRhsTypeRule()); }
	 iv_rulect_DefinitionRhsType=rulect_DefinitionRhsType 
	 { $current=$iv_rulect_DefinitionRhsType.current; } 
	 EOF 
;

// Rule ct_DefinitionRhsType
rulect_DefinitionRhsType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCt_DefinitionRhsTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Definition' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_DefinitionRhsTypeAccess().getDefinitionKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_DefinitionRhsTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_DefinitionRhsTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getCt_DefinitionRhsTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_DefinitionRhsTypeAccess().getDefinitionCt_RhsParserRuleCall_4_0()); 
	    }
		lv_Definition_4_0=rulect_Rhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_DefinitionRhsTypeRule());
	        }
       		set(
       			$current, 
       			"Definition",
        		lv_Definition_4_0, 
        		"ct_Rhs");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getCt_DefinitionRhsTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='Definition' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCt_DefinitionRhsTypeAccess().getDefinitionKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getCt_DefinitionRhsTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulect_ColumnType
entryRulect_ColumnType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_ColumnTypeRule()); }
	 iv_rulect_ColumnType=rulect_ColumnType 
	 { $current=$iv_rulect_ColumnType.current; } 
	 EOF 
;

// Rule ct_ColumnType
rulect_ColumnType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCt_ColumnTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Column' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_ColumnTypeAccess().getColumnKeyword_1());
    }
	otherlv_2='columnNum' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCt_ColumnTypeAccess().getColumnNumKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCt_ColumnTypeAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_ColumnTypeAccess().getColumnNumCt_Int_ValueParserRuleCall_4_0()); 
	    }
		lv_columnNum_4_0=rulect_Int_Value		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_ColumnTypeRule());
	        }
       		set(
       			$current, 
       			"columnNum",
        		lv_columnNum_4_0, 
        		"ct_Int_Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='columnVar' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCt_ColumnTypeAccess().getColumnVarKeyword_5());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCt_ColumnTypeAccess().getEqualsSignKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_ColumnTypeAccess().getColumnVarCt_SymbolNameTypeParserRuleCall_7_0()); 
	    }
		lv_columnVar_7_0=rulect_SymbolNameType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_ColumnTypeRule());
	        }
       		set(
       			$current, 
       			"columnVar",
        		lv_columnVar_7_0, 
        		"ct_SymbolNameType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_ColumnTypeAccess().getXmlnsCt_xmlnsParserRuleCall_8_0()); 
	    }
		lv_xmlns_8_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_ColumnTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_8_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getCt_ColumnTypeAccess().getTAG_CLOSE2ParserRuleCall_9_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getCt_ColumnTypeAccess().getTAG_CLOSEParserRuleCall_9_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getCt_ColumnTypeAccess().getTAG_OPEN2ParserRuleCall_9_1_1()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_12='Column' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getCt_ColumnTypeAccess().getColumnKeyword_9_1_2());
    }

    { 
        newCompositeNode(grammarAccess.getCt_ColumnTypeAccess().getTAG_CLOSEParserRuleCall_9_1_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRulect_ExternalSourceType
entryRulect_ExternalSourceType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_ExternalSourceTypeRule()); }
	 iv_rulect_ExternalSourceType=rulect_ExternalSourceType 
	 { $current=$iv_rulect_ExternalSourceType.current; } 
	 EOF 
;

// Rule ct_ExternalSourceType
rulect_ExternalSourceType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCt_ExternalSourceTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='ExternalSource' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_ExternalSourceTypeAccess().getExternalSourceKeyword_1());
    }
	otherlv_2='format' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCt_ExternalSourceTypeAccess().getFormatKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCt_ExternalSourceTypeAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_ExternalSourceTypeAccess().getFormatCt_SymbolNameTypeParserRuleCall_4_0()); 
	    }
		lv_format_4_0=rulect_SymbolNameType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_ExternalSourceTypeRule());
	        }
       		set(
       			$current, 
       			"format",
        		lv_format_4_0, 
        		"ct_SymbolNameType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='headerLine' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCt_ExternalSourceTypeAccess().getHeaderLineKeyword_5_0());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCt_ExternalSourceTypeAccess().getEqualsSignKeyword_5_1());
    }
(
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_ExternalSourceTypeAccess().getHeaderLineMath_TRUEParserRuleCall_5_2_0_0()); 
	    }
		lv_headerLine_7_1=ruleMath_TRUE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_ExternalSourceTypeRule());
	        }
       		set(
       			$current, 
       			"headerLine",
        		lv_headerLine_7_1, 
        		"Math_TRUE");
	        afterParserOrEnumRuleCall();
	    }

    |		{ 
	        newCompositeNode(grammarAccess.getCt_ExternalSourceTypeAccess().getHeaderLineMath_FALSEParserRuleCall_5_2_0_1()); 
	    }
		lv_headerLine_7_2=ruleMath_FALSE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_ExternalSourceTypeRule());
	        }
       		set(
       			$current, 
       			"headerLine",
        		lv_headerLine_7_2, 
        		"Math_FALSE");
	        afterParserOrEnumRuleCall();
	    }

)

)
))?(	otherlv_8='ignoreLineSymbol' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCt_ExternalSourceTypeAccess().getIgnoreLineSymbolKeyword_6_0());
    }
	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCt_ExternalSourceTypeAccess().getEqualsSignKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_ExternalSourceTypeAccess().getIgnoreLineSymbolCt_SymbolNameTypeParserRuleCall_6_2_0()); 
	    }
		lv_ignoreLineSymbol_10_0=rulect_SymbolNameType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_ExternalSourceTypeRule());
	        }
       		set(
       			$current, 
       			"ignoreLineSymbol",
        		lv_ignoreLineSymbol_10_0, 
        		"ct_SymbolNameType");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_11='url' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getCt_ExternalSourceTypeAccess().getUrlKeyword_7());
    }
	otherlv_12='=' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getCt_ExternalSourceTypeAccess().getEqualsSignKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_ExternalSourceTypeAccess().getUrlXS_ANY_URIParserRuleCall_9_0()); 
	    }
		lv_url_13_0=ruleXS_ANY_URI		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_ExternalSourceTypeRule());
	        }
       		set(
       			$current, 
       			"url",
        		lv_url_13_0, 
        		"XS_ANY_URI");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_ExternalSourceTypeAccess().getXmlnsCt_xmlnsParserRuleCall_10_0()); 
	    }
		lv_xmlns_14_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_ExternalSourceTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_14_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getCt_ExternalSourceTypeAccess().getTAG_CLOSE2ParserRuleCall_11_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getCt_ExternalSourceTypeAccess().getTAG_CLOSEParserRuleCall_11_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getCt_ExternalSourceTypeAccess().getTAG_OPEN2ParserRuleCall_11_1_1()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_18='ExternalSource' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getCt_ExternalSourceTypeAccess().getExternalSourceKeyword_11_1_2());
    }

    { 
        newCompositeNode(grammarAccess.getCt_ExternalSourceTypeAccess().getTAG_CLOSEParserRuleCall_11_1_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRulect_RowType
entryRulect_RowType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_RowTypeRule()); }
	 iv_rulect_RowType=rulect_RowType 
	 { $current=$iv_rulect_RowType.current; } 
	 EOF 
;

// Rule ct_RowType
rulect_RowType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCt_RowTypeAccess().getCt_RowTypeAction_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getCt_RowTypeAccess().getTAG_OPENParserRuleCall_1()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='Row' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCt_RowTypeAccess().getRowKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_RowTypeAccess().getXmlnsCt_xmlnsParserRuleCall_3_0()); 
	    }
		lv_xmlns_3_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_RowTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_3_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getCt_RowTypeAccess().getTAG_CLOSEParserRuleCall_4()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_RowTypeAccess().getRowCt_RowTypeContentParserRuleCall_5_0()); 
	    }
		lv_Row_5_0=rulect_RowTypeContent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_RowTypeRule());
	        }
       		add(
       			$current, 
       			"Row",
        		lv_Row_5_0, 
        		"ct_RowTypeContent");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getCt_RowTypeAccess().getTAG_OPEN2ParserRuleCall_6()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_7='Row' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getCt_RowTypeAccess().getRowKeyword_7());
    }

    { 
        newCompositeNode(grammarAccess.getCt_RowTypeAccess().getTAG_CLOSEParserRuleCall_8()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulect_RowTypeContent
entryRulect_RowTypeContent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_RowTypeContentRule()); }
	 iv_rulect_RowTypeContent=rulect_RowTypeContent 
	 { $current=$iv_rulect_RowTypeContent.current; } 
	 EOF 
;

// Rule ct_RowTypeContent
rulect_RowTypeContent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCt_RowTypeContentAccess().getCellCt_CellTypeParserRuleCall_0_0()); 
	    }
		lv_Cell_0_0=rulect_CellType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_RowTypeContentRule());
	        }
       		set(
       			$current, 
       			"Cell",
        		lv_Cell_0_0, 
        		"ct_CellType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_RowTypeContentAccess().getNullCt_NullCellTypeParserRuleCall_1_0()); 
	    }
		lv_Null_1_0=rulect_NullCellType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_RowTypeContentRule());
	        }
       		set(
       			$current, 
       			"Null",
        		lv_Null_1_0, 
        		"ct_NullCellType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulect_NullCellType
entryRulect_NullCellType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_NullCellTypeRule()); } 
	 iv_rulect_NullCellType=rulect_NullCellType 
	 { $current=$iv_rulect_NullCellType.current.getText(); }  
	 EOF 
;

// Rule ct_NullCellType
rulect_NullCellType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCt_NullCellTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
    this_TAG_OPEN_0=ruleTAG_OPEN    {
		$current.merge(this_TAG_OPEN_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

	kw='Null' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCt_NullCellTypeAccess().getNullKeyword_1()); 
    }

    { 
        newCompositeNode(grammarAccess.getCt_NullCellTypeAccess().getTAG_CLOSE2ParserRuleCall_2()); 
    }
    this_TAG_CLOSE2_2=ruleTAG_CLOSE2    {
		$current.merge(this_TAG_CLOSE2_2);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)
    ;





// Entry rule entryRulect_CellType
entryRulect_CellType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_CellTypeRule()); }
	 iv_rulect_CellType=rulect_CellType 
	 { $current=$iv_rulect_CellType.current; } 
	 EOF 
;

// Rule ct_CellType
rulect_CellType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCt_CellTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Cell' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_CellTypeAccess().getCellKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_CellTypeAccess().getValueCt_Decimal_ValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=rulect_Decimal_Value		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_CellTypeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"ct_Decimal_Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_CellTypeAccess().getXmlnsCt_xmlnsParserRuleCall_3_0()); 
	    }
		lv_xmlns_3_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_CellTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_3_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getCt_CellTypeAccess().getTAG_CLOSEParserRuleCall_4()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getCt_CellTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='Cell' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCt_CellTypeAccess().getCellKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getCt_CellTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulect_InternalSourceType
entryRulect_InternalSourceType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_InternalSourceTypeRule()); }
	 iv_rulect_InternalSourceType=rulect_InternalSourceType 
	 { $current=$iv_rulect_InternalSourceType.current; } 
	 EOF 
;

// Rule ct_InternalSourceType
rulect_InternalSourceType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCt_InternalSourceTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='InternalSource' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_InternalSourceTypeAccess().getInternalSourceKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_InternalSourceTypeAccess().getSymbIdMath_symbIdParserRuleCall_2_0()); 
	    }
		lv_symbId_2_0=ruleMath_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_InternalSourceTypeRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_2_0, 
        		"Math_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_InternalSourceTypeAccess().getBlockMath_blockParserRuleCall_3_0()); 
	    }
		lv_block_3_0=ruleMath_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_InternalSourceTypeRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_3_0, 
        		"Math_block");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_InternalSourceTypeAccess().getXmlnsCt_xmlnsParserRuleCall_4_0()); 
	    }
		lv_xmlns_4_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_InternalSourceTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_4_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getCt_InternalSourceTypeAccess().getTAG_CLOSE2ParserRuleCall_5_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getCt_InternalSourceTypeAccess().getTAG_CLOSEParserRuleCall_5_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getCt_InternalSourceTypeAccess().getTAG_OPEN2ParserRuleCall_5_1_1()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_8='InternalSource' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCt_InternalSourceTypeAccess().getInternalSourceKeyword_5_1_2());
    }

    { 
        newCompositeNode(grammarAccess.getCt_InternalSourceTypeAccess().getTAG_CLOSEParserRuleCall_5_1_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRulect_ScalarRhs
entryRulect_ScalarRhs returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_ScalarRhsRule()); }
	 iv_rulect_ScalarRhs=rulect_ScalarRhs 
	 { $current=$iv_rulect_ScalarRhs.current; } 
	 EOF 
;

// Rule ct_ScalarRhs
rulect_ScalarRhs returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCt_ScalarRhsAccess().getEquationMath_EquationTypeParserRuleCall_0_0()); 
	    }
		lv_Equation_0_0=ruleMath_EquationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_ScalarRhsRule());
	        }
       		set(
       			$current, 
       			"Equation",
        		lv_Equation_0_0, 
        		"Math_EquationType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_ScalarRhsAccess().getScalarMath_ScalarTypeParserRuleCall_1_0()); 
	    }
		lv_Scalar_1_0=ruleMath_ScalarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_ScalarRhsRule());
	        }
       		set(
       			$current, 
       			"Scalar",
        		lv_Scalar_1_0, 
        		"Math_ScalarType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_ScalarRhsAccess().getVarMath_VarTypeParserRuleCall_2_0()); 
	    }
		lv_Var_2_0=ruleMath_VarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_ScalarRhsRule());
	        }
       		set(
       			$current, 
       			"Var",
        		lv_Var_2_0, 
        		"Math_VarType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_ScalarRhsAccess().getStringMath_StringTypeParserRuleCall_3_0()); 
	    }
		lv_String_3_0=ruleMath_StringType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_ScalarRhsRule());
	        }
       		set(
       			$current, 
       			"String",
        		lv_String_3_0, 
        		"Math_StringType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_ScalarRhsAccess().getFunctionCallMath_FunctionCallTypeParserRuleCall_4_0()); 
	    }
		lv_FunctionCall_4_0=ruleMath_FunctionCallType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_ScalarRhsRule());
	        }
       		set(
       			$current, 
       			"FunctionCall",
        		lv_FunctionCall_4_0, 
        		"Math_FunctionCallType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulect_levelId
entryRulect_levelId returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_levelIdRule()); }
	 iv_rulect_levelId=rulect_levelId 
	 { $current=$iv_rulect_levelId.current; } 
	 EOF 
;

// Rule ct_levelId
rulect_levelId returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='levelId' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCt_levelIdAccess().getLevelIdKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_levelIdAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_levelIdAccess().getLevelIdCt_BlockNameTypeParserRuleCall_2_0()); 
	    }
		lv_levelId_2_0=rulect_BlockNameType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_levelIdRule());
	        }
       		set(
       			$current, 
       			"levelId",
        		lv_levelId_2_0, 
        		"ct_BlockNameType");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulect_Name
entryRulect_Name returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_NameRule()); }
	 iv_rulect_Name=rulect_Name 
	 { $current=$iv_rulect_Name.current; } 
	 EOF 
;

// Rule ct_Name
rulect_Name returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='name' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCt_NameAccess().getNameKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_NameAccess().getEqualsSignKeyword_1());
    }
(
(
		lv_Name_2_0=RULE_STR
		{
			newLeafNode(lv_Name_2_0, grammarAccess.getCt_NameAccess().getNameSTRTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCt_NameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"Name",
        		lv_Name_2_0, 
        		"STR");
	    }

)
))
;





// Entry rule entryRulect_VectorType
entryRulect_VectorType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_VectorTypeRule()); }
	 iv_rulect_VectorType=rulect_VectorType 
	 { $current=$iv_rulect_VectorType.current; } 
	 EOF 
;

// Rule ct_VectorType
rulect_VectorType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCt_VectorTypeAccess().getCt_VectorTypeAction_0(),
            $current);
    }
)
    { 
        newCompositeNode(grammarAccess.getCt_VectorTypeAccess().getTAG_OPENParserRuleCall_1()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_2='Vector' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCt_VectorTypeAccess().getVectorKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_VectorTypeAccess().getXmlnsCt_xmlnsParserRuleCall_3_0()); 
	    }
		lv_xmlns_3_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_VectorTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_3_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getCt_VectorTypeAccess().getTAG_CLOSEParserRuleCall_4()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_VectorTypeAccess().getSequenceCt_SequenceTypeParserRuleCall_5_0()); 
	    }
		lv_Sequence_5_0=rulect_SequenceType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_VectorTypeRule());
	        }
       		set(
       			$current, 
       			"Sequence",
        		lv_Sequence_5_0, 
        		"ct_SequenceType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_VectorTypeAccess().getScalarMath_ScalarTypeParserRuleCall_6_0()); 
	    }
		lv_Scalar_6_0=ruleMath_ScalarType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_VectorTypeRule());
	        }
       		set(
       			$current, 
       			"Scalar",
        		lv_Scalar_6_0, 
        		"Math_ScalarType");
	        afterParserOrEnumRuleCall();
	    }

)
)?
    { 
        newCompositeNode(grammarAccess.getCt_VectorTypeAccess().getTAG_OPEN2ParserRuleCall_7()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_8='Vector' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCt_VectorTypeAccess().getVectorKeyword_8());
    }

    { 
        newCompositeNode(grammarAccess.getCt_VectorTypeAccess().getTAG_CLOSEParserRuleCall_9()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulect_SequenceType
entryRulect_SequenceType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_SequenceTypeRule()); }
	 iv_rulect_SequenceType=rulect_SequenceType 
	 { $current=$iv_rulect_SequenceType.current; } 
	 EOF 
;

// Rule ct_SequenceType
rulect_SequenceType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCt_SequenceTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Sequence' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_SequenceTypeAccess().getSequenceKeyword_1());
    }
	otherlv_2='begin' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCt_SequenceTypeAccess().getBeginKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCt_SequenceTypeAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_SequenceTypeAccess().getBeginCt_Decimal_ValueParserRuleCall_4_0()); 
	    }
		lv_begin_4_0=rulect_Decimal_Value		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_SequenceTypeRule());
	        }
       		set(
       			$current, 
       			"begin",
        		lv_begin_4_0, 
        		"ct_Decimal_Value");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='end' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCt_SequenceTypeAccess().getEndKeyword_5());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCt_SequenceTypeAccess().getEqualsSignKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_SequenceTypeAccess().getEndCt_Decimal_ValueParserRuleCall_7_0()); 
	    }
		lv_end_7_0=rulect_Decimal_Value		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_SequenceTypeRule());
	        }
       		set(
       			$current, 
       			"end",
        		lv_end_7_0, 
        		"ct_Decimal_Value");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_8='repetition' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCt_SequenceTypeAccess().getRepetitionKeyword_8());
    }
	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCt_SequenceTypeAccess().getEqualsSignKeyword_9());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_SequenceTypeAccess().getRepetitionCt_Int_ValueParserRuleCall_10_0()); 
	    }
		lv_repetition_10_0=rulect_Int_Value		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_SequenceTypeRule());
	        }
       		set(
       			$current, 
       			"repetition",
        		lv_repetition_10_0, 
        		"ct_Int_Value");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_11='stepwise' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getCt_SequenceTypeAccess().getStepwiseKeyword_11());
    }
	otherlv_12='=' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getCt_SequenceTypeAccess().getEqualsSignKeyword_12());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_SequenceTypeAccess().getStepwiseCt_Decimal_ValueParserRuleCall_13_0()); 
	    }
		lv_stepwise_13_0=rulect_Decimal_Value		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_SequenceTypeRule());
	        }
       		set(
       			$current, 
       			"stepwise",
        		lv_stepwise_13_0, 
        		"ct_Decimal_Value");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_SequenceTypeAccess().getXmlnsCt_xmlnsParserRuleCall_14_0()); 
	    }
		lv_xmlns_14_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_SequenceTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_14_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
    { 
        newCompositeNode(grammarAccess.getCt_SequenceTypeAccess().getTAG_CLOSE2ParserRuleCall_15_0()); 
    }
ruleTAG_CLOSE2
    { 
        afterParserOrEnumRuleCall();
    }

    |(
    { 
        newCompositeNode(grammarAccess.getCt_SequenceTypeAccess().getTAG_CLOSEParserRuleCall_15_1_0()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }

    { 
        newCompositeNode(grammarAccess.getCt_SequenceTypeAccess().getTAG_OPEN2ParserRuleCall_15_1_1()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_18='Sequence' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getCt_SequenceTypeAccess().getSequenceKeyword_15_1_2());
    }

    { 
        newCompositeNode(grammarAccess.getCt_SequenceTypeAccess().getTAG_CLOSEParserRuleCall_15_1_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)))
;





// Entry rule entryRulect_BlockNameType
entryRulect_BlockNameType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_BlockNameTypeRule()); } 
	 iv_rulect_BlockNameType=rulect_BlockNameType 
	 { $current=$iv_rulect_BlockNameType.current.getText(); }  
	 EOF 
;

// Rule ct_BlockNameType
rulect_BlockNameType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STR_0=RULE_STR    {
		$current.merge(this_STR_0);
    }

    { 
    newLeafNode(this_STR_0, grammarAccess.getCt_BlockNameTypeAccess().getSTRTerminalRuleCall()); 
    }

    ;





// Entry rule entryRulect_SymbolNameType
entryRulect_SymbolNameType returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_SymbolNameTypeRule()); } 
	 iv_rulect_SymbolNameType=rulect_SymbolNameType 
	 { $current=$iv_rulect_SymbolNameType.current.getText(); }  
	 EOF 
;

// Rule ct_SymbolNameType
rulect_SymbolNameType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STR_0=RULE_STR    {
		$current.merge(this_STR_0);
    }

    { 
    newLeafNode(this_STR_0, grammarAccess.getCt_SymbolNameTypeAccess().getSTRTerminalRuleCall()); 
    }

    ;





// Entry rule entryRulect_SymbolTypeType
entryRulect_SymbolTypeType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_SymbolTypeTypeRule()); }
	 iv_rulect_SymbolTypeType=rulect_SymbolTypeType 
	 { $current=$iv_rulect_SymbolTypeType.current; } 
	 EOF 
;

// Rule ct_SymbolTypeType
rulect_SymbolTypeType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_scalar_0_0=	'"scalar"' 
    {
        newLeafNode(lv_scalar_0_0, grammarAccess.getCt_SymbolTypeTypeAccess().getScalarScalarKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCt_SymbolTypeTypeRule());
	        }
       		setWithLastConsumed($current, "scalar", lv_scalar_0_0, "\"scalar\"");
	    }

)
)
    |(
(
		lv_derivative_1_0=	'"derivative"' 
    {
        newLeafNode(lv_derivative_1_0, grammarAccess.getCt_SymbolTypeTypeAccess().getDerivativeDerivativeKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCt_SymbolTypeTypeRule());
	        }
       		setWithLastConsumed($current, "derivative", lv_derivative_1_0, "\"derivative\"");
	    }

)
)
    |(
(
		lv_distrib_2_0=	'"distrib"' 
    {
        newLeafNode(lv_distrib_2_0, grammarAccess.getCt_SymbolTypeTypeAccess().getDistribDistribKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCt_SymbolTypeTypeRule());
	        }
       		setWithLastConsumed($current, "distrib", lv_distrib_2_0, "\"distrib\"");
	    }

)
)
    |(
(
		lv_dataSet_3_0=	'"dataSet"' 
    {
        newLeafNode(lv_dataSet_3_0, grammarAccess.getCt_SymbolTypeTypeAccess().getDataSetDataSetKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCt_SymbolTypeTypeRule());
	        }
       		setWithLastConsumed($current, "dataSet", lv_dataSet_3_0, "\"dataSet\"");
	    }

)
))
;





// Entry rule entryRulect_VariableDefinitionType
entryRulect_VariableDefinitionType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_VariableDefinitionTypeRule()); }
	 iv_rulect_VariableDefinitionType=rulect_VariableDefinitionType 
	 { $current=$iv_rulect_VariableDefinitionType.current; } 
	 EOF 
;

// Rule ct_VariableDefinitionType
rulect_VariableDefinitionType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCt_VariableDefinitionTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Variable' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_VariableDefinitionTypeAccess().getVariableKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_VariableDefinitionTypeAccess().getSymbIdCt_symbIdParserRuleCall_2_0()); 
	    }
		lv_symbId_2_0=rulect_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_VariableDefinitionTypeRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_2_0, 
        		"ct_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_VariableDefinitionTypeAccess().getSymbolTypeCt_symbolTypeParserRuleCall_3_0()); 
	    }
		lv_symbolType_3_0=rulect_symbolType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_VariableDefinitionTypeRule());
	        }
       		set(
       			$current, 
       			"symbolType",
        		lv_symbolType_3_0, 
        		"ct_symbolType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_VariableDefinitionTypeAccess().getIndependentVarCt_independentVarParserRuleCall_4_0()); 
	    }
		lv_independentVar_4_0=rulect_independentVar		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_VariableDefinitionTypeRule());
	        }
       		set(
       			$current, 
       			"independentVar",
        		lv_independentVar_4_0, 
        		"ct_independentVar");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_VariableDefinitionTypeAccess().getXmlnsCt_xmlnsParserRuleCall_5_0()); 
	    }
		lv_xmlns_5_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_VariableDefinitionTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_5_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getCt_VariableDefinitionTypeAccess().getTAG_CLOSEParserRuleCall_6()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_VariableDefinitionTypeAccess().getDescriptionCt_AnnotationTypeParserRuleCall_7_0()); 
	    }
		lv_Description_7_0=rulect_AnnotationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_VariableDefinitionTypeRule());
	        }
       		set(
       			$current, 
       			"Description",
        		lv_Description_7_0, 
        		"ct_AnnotationType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_VariableDefinitionTypeAccess().getExprCt_RhsParserRuleCall_8_0()); 
	    }
		lv_Expr_8_0=rulect_Rhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_VariableDefinitionTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_8_0, 
        		"ct_Rhs");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getCt_VariableDefinitionTypeAccess().getTAG_OPEN2ParserRuleCall_9()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_10='Variable' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCt_VariableDefinitionTypeAccess().getVariableKeyword_10());
    }

    { 
        newCompositeNode(grammarAccess.getCt_VariableDefinitionTypeAccess().getTAG_CLOSEParserRuleCall_11()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulect_VariableAssignmentType
entryRulect_VariableAssignmentType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_VariableAssignmentTypeRule()); }
	 iv_rulect_VariableAssignmentType=rulect_VariableAssignmentType 
	 { $current=$iv_rulect_VariableAssignmentType.current; } 
	 EOF 
;

// Rule ct_VariableAssignmentType
rulect_VariableAssignmentType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCt_VariableAssignmentTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='VariableAssignmentType' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_VariableAssignmentTypeAccess().getVariableAssignmentTypeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_VariableAssignmentTypeAccess().getSymbIdCt_symbIdParserRuleCall_2_0()); 
	    }
		lv_symbId_2_0=rulect_symbId		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_VariableAssignmentTypeRule());
	        }
       		set(
       			$current, 
       			"symbId",
        		lv_symbId_2_0, 
        		"ct_symbId");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_VariableAssignmentTypeAccess().getBlockCt_blockParserRuleCall_3_0()); 
	    }
		lv_block_3_0=rulect_block		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_VariableAssignmentTypeRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_3_0, 
        		"ct_block");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_VariableAssignmentTypeAccess().getXmlnsCt_xmlnsParserRuleCall_4_0()); 
	    }
		lv_xmlns_4_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_VariableAssignmentTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_4_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getCt_VariableAssignmentTypeAccess().getTAG_CLOSEParserRuleCall_5()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_VariableAssignmentTypeAccess().getExprCt_RhsParserRuleCall_6_0()); 
	    }
		lv_Expr_6_0=rulect_Rhs		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_VariableAssignmentTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_6_0, 
        		"ct_Rhs");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getCt_VariableAssignmentTypeAccess().getTAG_OPEN2ParserRuleCall_7()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_8='VariableAssignmentType' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCt_VariableAssignmentTypeAccess().getVariableAssignmentTypeKeyword_8());
    }

    { 
        newCompositeNode(grammarAccess.getCt_VariableAssignmentTypeAccess().getTAG_CLOSEParserRuleCall_9()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulect_RestrictionType
entryRulect_RestrictionType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_RestrictionTypeRule()); }
	 iv_rulect_RestrictionType=rulect_RestrictionType 
	 { $current=$iv_rulect_RestrictionType.current; } 
	 EOF 
;

// Rule ct_RestrictionType
rulect_RestrictionType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCt_RestrictionTypeAccess().getTAG_OPENParserRuleCall_0()); 
    }
ruleTAG_OPEN
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='Restriction' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_RestrictionTypeAccess().getRestrictionKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_RestrictionTypeAccess().getXmlnsCt_xmlnsParserRuleCall_2_0()); 
	    }
		lv_xmlns_2_0=rulect_xmlns		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_RestrictionTypeRule());
	        }
       		add(
       			$current, 
       			"xmlns",
        		lv_xmlns_2_0, 
        		"ct_xmlns");
	        afterParserOrEnumRuleCall();
	    }

)
)*
    { 
        newCompositeNode(grammarAccess.getCt_RestrictionTypeAccess().getTAG_CLOSEParserRuleCall_3()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_RestrictionTypeAccess().getExprMath_ConditionTypeParserRuleCall_4_0()); 
	    }
		lv_Expr_4_0=ruleMath_ConditionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_RestrictionTypeRule());
	        }
       		set(
       			$current, 
       			"Expr",
        		lv_Expr_4_0, 
        		"Math_ConditionType");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getCt_RestrictionTypeAccess().getTAG_OPEN2ParserRuleCall_5()); 
    }
ruleTAG_OPEN2
    { 
        afterParserOrEnumRuleCall();
    }
	otherlv_6='Restriction' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCt_RestrictionTypeAccess().getRestrictionKeyword_6());
    }

    { 
        newCompositeNode(grammarAccess.getCt_RestrictionTypeAccess().getTAG_CLOSEParserRuleCall_7()); 
    }
ruleTAG_CLOSE
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulect_xmlns
entryRulect_xmlns returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCt_xmlnsRule()); }
	 iv_rulect_xmlns=rulect_xmlns 
	 { $current=$iv_rulect_xmlns.current; } 
	 EOF 
;

// Rule ct_xmlns
rulect_xmlns returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='xmlns' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCt_xmlnsAccess().getXmlnsKeyword_0());
    }
(	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCt_xmlnsAccess().getColonKeyword_1_0());
    }
this_ID_2=RULE_ID
    { 
    newLeafNode(this_ID_2, grammarAccess.getCt_xmlnsAccess().getIDTerminalRuleCall_1_1()); 
    }
)?	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCt_xmlnsAccess().getEqualsSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCt_xmlnsAccess().getXmlnsXS_STRINGParserRuleCall_3_0()); 
	    }
		lv_xmlns_4_0=ruleXS_STRING		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCt_xmlnsRule());
	        }
       		set(
       			$current, 
       			"xmlns",
        		lv_xmlns_4_0, 
        		"XS_STRING");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNamespace
entryRuleNamespace returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamespaceRule()); } 
	 iv_ruleNamespace=ruleNamespace 
	 { $current=$iv_ruleNamespace.current.getText(); }  
	 EOF 
;

// Rule Namespace
ruleNamespace returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getNamespaceAccess().getIDTerminalRuleCall_0()); 
    }

	kw=':' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNamespaceAccess().getColonKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleXS_TOKEN
entryRuleXS_TOKEN returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getXS_TOKENRule()); } 
	 iv_ruleXS_TOKEN=ruleXS_TOKEN 
	 { $current=$iv_ruleXS_TOKEN.current.getText(); }  
	 EOF 
;

// Rule XS_TOKEN
ruleXS_TOKEN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getXS_TOKENAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleXS_STRING
entryRuleXS_STRING returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getXS_STRINGRule()); } 
	 iv_ruleXS_STRING=ruleXS_STRING 
	 { $current=$iv_ruleXS_STRING.current.getText(); }  
	 EOF 
;

// Rule XS_STRING
ruleXS_STRING returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STR_0=RULE_STR    {
		$current.merge(this_STR_0);
    }

    { 
    newLeafNode(this_STR_0, grammarAccess.getXS_STRINGAccess().getSTRTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleXS_ANY_URI
entryRuleXS_ANY_URI returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getXS_ANY_URIRule()); } 
	 iv_ruleXS_ANY_URI=ruleXS_ANY_URI 
	 { $current=$iv_ruleXS_ANY_URI.current.getText(); }  
	 EOF 
;

// Rule XS_ANY_URI
ruleXS_ANY_URI returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_STR_0=RULE_STR    {
		$current.merge(this_STR_0);
    }

    { 
    newLeafNode(this_STR_0, grammarAccess.getXS_ANY_URIAccess().getSTRTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleXS_DECIMAL
entryRuleXS_DECIMAL returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getXS_DECIMALRule()); } 
	 iv_ruleXS_DECIMAL=ruleXS_DECIMAL 
	 { $current=$iv_ruleXS_DECIMAL.current.getText(); }  
	 EOF 
;

// Rule XS_DECIMAL
ruleXS_DECIMAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXS_DECIMALAccess().getQuotationMarkKeyword_0()); 
    }
    this_DECIMAL_1=RULE_DECIMAL    {
		$current.merge(this_DECIMAL_1);
    }

    { 
    newLeafNode(this_DECIMAL_1, grammarAccess.getXS_DECIMALAccess().getDECIMALTerminalRuleCall_1()); 
    }

	kw='"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXS_DECIMALAccess().getQuotationMarkKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleXS_INT
entryRuleXS_INT returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getXS_INTRule()); } 
	 iv_ruleXS_INT=ruleXS_INT 
	 { $current=$iv_ruleXS_INT.current.getText(); }  
	 EOF 
;

// Rule XS_INT
ruleXS_INT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXS_INTAccess().getQuotationMarkKeyword_0()); 
    }
    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getXS_INTAccess().getINTTerminalRuleCall_1()); 
    }

	kw='"' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getXS_INTAccess().getQuotationMarkKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleTAG_OPEN
entryRuleTAG_OPEN returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTAG_OPENRule()); } 
	 iv_ruleTAG_OPEN=ruleTAG_OPEN 
	 { $current=$iv_ruleTAG_OPEN.current.getText(); }  
	 EOF 
;

// Rule TAG_OPEN
ruleTAG_OPEN returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTAG_OPENAccess().getLessThanSignKeyword_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getTAG_OPENAccess().getNamespaceParserRuleCall_1()); 
    }
    this_Namespace_1=ruleNamespace    {
		$current.merge(this_Namespace_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?)
    ;





// Entry rule entryRuleTAG_CLOSE
entryRuleTAG_CLOSE returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTAG_CLOSERule()); } 
	 iv_ruleTAG_CLOSE=ruleTAG_CLOSE 
	 { $current=$iv_ruleTAG_CLOSE.current.getText(); }  
	 EOF 
;

// Rule TAG_CLOSE
ruleTAG_CLOSE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTAG_CLOSEAccess().getGreaterThanSignKeyword()); 
    }

    ;





// Entry rule entryRuleTAG_CLOSE2
entryRuleTAG_CLOSE2 returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTAG_CLOSE2Rule()); } 
	 iv_ruleTAG_CLOSE2=ruleTAG_CLOSE2 
	 { $current=$iv_ruleTAG_CLOSE2.current.getText(); }  
	 EOF 
;

// Rule TAG_CLOSE2
ruleTAG_CLOSE2 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	kw='/>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTAG_CLOSE2Access().getSolidusGreaterThanSignKeyword()); 
    }

    ;





// Entry rule entryRuleTAG_OPEN2
entryRuleTAG_OPEN2 returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTAG_OPEN2Rule()); } 
	 iv_ruleTAG_OPEN2=ruleTAG_OPEN2 
	 { $current=$iv_ruleTAG_OPEN2.current.getText(); }  
	 EOF 
;

// Rule TAG_OPEN2
ruleTAG_OPEN2 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='</' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTAG_OPEN2Access().getLessThanSignSolidusKeyword_0()); 
    }
(
    { 
        newCompositeNode(grammarAccess.getTAG_OPEN2Access().getNamespaceParserRuleCall_1()); 
    }
    this_Namespace_1=ruleNamespace    {
		$current.merge(this_Namespace_1);
    }

    { 
        afterParserOrEnumRuleCall();
    }
)?)
    ;





RULE_STR : '"' (RULE_ESCAPE_SEQUENCE|~(('\\'|'"')))* '"';

fragment RULE_ESCAPE_SEQUENCE : ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|RULE_UNICODE_ESCAPE|RULE_OCTAL_ESCAPE);

fragment RULE_OCTAL_ESCAPE : ('\\' '0'..'3' '0'..'7' '0'..'7'|'\\' '0'..'7' '0'..'7'|'\\' '0'..'7');

fragment RULE_UNICODE_ESCAPE : '\\' 'u' RULE_HEXDIGIT RULE_HEXDIGIT RULE_HEXDIGIT RULE_HEXDIGIT;

fragment RULE_HEXDIGIT : ('0'..'9'|'a'..'f'|'A'..'F');

RULE_DECIMAL : (RULE_INT '.' RULE_INT?|'.' RULE_INT);

RULE_ML_COMMENT : '<!--' ( options {greedy=false;} : . )*'-->';

RULE_XML_ANNOTATION : '<?xml' ( options {greedy=false;} : . )*'?>';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


